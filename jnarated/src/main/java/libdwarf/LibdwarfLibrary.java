package libdwarf;
import com.ochafik.lang.jnaerator.runtime.LibraryExtractor;
import com.ochafik.lang.jnaerator.runtime.MangledFunctionMapper;
import com.ochafik.lang.jnaerator.runtime.globals.GlobalStruct;
import com.sun.jna.Callback;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.LongByReference;
import com.sun.jna.ptr.PointerByReference;
import com.sun.jna.ptr.ShortByReference;
import java.nio.ByteBuffer;
import java.nio.IntBuffer;
import java.nio.LongBuffer;
import java.nio.ShortBuffer;
/**
 * JNA Wrapper for library <b>libdwarf</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface LibdwarfLibrary extends Library {
	public static final String JNA_LIBRARY_NAME = LibraryExtractor.getLibraryPath("libdwarf", true, LibdwarfLibrary.class);
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(LibdwarfLibrary.JNA_LIBRARY_NAME, MangledFunctionMapper.DEFAULT_OPTIONS);
	public static final LibdwarfLibrary INSTANCE = (LibdwarfLibrary)Native.loadLibrary(LibdwarfLibrary.JNA_LIBRARY_NAME, LibdwarfLibrary.class, MangledFunctionMapper.DEFAULT_OPTIONS);
	/**
	 * First appears in DWARF3, and only ranges entries exist.<br>
	 * The dwr_addr1/addr2 data is either an offset (DW_RANGES_ENTRY)<br>
	 * or an address (dwr_addr2 in DW_RANGES_ADDRESS_SELECTION) or<br>
	 * both are zero (DW_RANGES_END).<br>
	 * For DWARF5 each table starts with a header<br>
	 * followed by range list entries defined<br>
	 * as here.<br>
	 * <i>native declaration : line 234</i><br>
	 * enum values
	 */
	public static interface Dwarf_Ranges_Entry_Type {
		/** <i>native declaration : line 234</i> */
		public static final int DW_RANGES_ENTRY = 0;
		/** <i>native declaration : line 235</i> */
		public static final int DW_RANGES_ADDRESS_SELECTION = 1;
		/** <i>native declaration : line 236</i> */
		public static final int DW_RANGES_END = 2;
	};
	/**
	 * For DW_DLC_SYMBOLIC_RELOCATIONS output to caller<br>
	 * v2, adding drd_length: some relocations are 4 and<br>
	 * some 8 bytes (pointers are 8, section offsets 4) in<br>
	 * some dwarf environments. (MIPS relocations are all one<br>
	 * size in any given ABI.) Changing drd_type to an unsigned char<br>
	 * to keep struct size down.<br>
	 * <i>native declaration : line 509</i><br>
	 * enum values
	 */
	public static interface Dwarf_Rel_Type {
		/**
		 * Should not get to caller<br>
		 * <i>native declaration : line 510</i>
		 */
		public static final int dwarf_drt_none = 0;
		/**
		 * Simple normal relocation.<br>
		 * <i>native declaration : line 511</i>
		 */
		public static final int dwarf_drt_data_reloc = 1;
		/**
		 * Special reloc, exceptions.<br>
		 * <i>native declaration : line 512</i>
		 */
		public static final int dwarf_drt_segment_rel = 2;
		/**
		 * dwarf_drt_first_of_length_pair  and drt_second<br>
		 * are for for the  .word end - begin case.<br>
		 * <i>native declaration : line 515</i>
		 */
		public static final int dwarf_drt_first_of_length_pair = 3;
		/** <i>native declaration : line 516</i> */
		public static final int dwarf_drt_second_of_length_pair = 4;
	};
	/** enum values */
	public static interface Dwarf_Endianness {
		/** <i>native declaration : line 655</i> */
		public static final int DW_OBJECT_MSB = 0;
		/** <i>native declaration : line 656</i> */
		public static final int DW_OBJECT_LSB = 1;
	};
	/**
	 * The dwarf specification separates FORMs into<br>
	 * different classes.  To do the seperation properly<br>
	 * requires 4 pieces of data as of DWARF4 (thus the<br>
	 * function arguments listed here).<br>
	 * The DWARF4 specification class definition suffices to<br>
	 * describe all DWARF versions.<br>
	 * See section 7.5.4, Attribute Encodings.<br>
	 * A return of DW_FORM_CLASS_UNKNOWN means we could not properly figure<br>
	 * out what form-class it is.<br>
	 * DW_FORM_CLASS_FRAMEPTR is MIPS/IRIX only, and refers<br>
	 * to the DW_AT_MIPS_fde attribute (a reference to the<br>
	 * .debug_frame section).<br>
	 * DWARF5:<br>
	 * DW_FORM_CLASS_LOCLISTSPTR  is like DW_FORM_CLASS_LOCLIST<br>
	 * except that LOCLISTSPTR is aways a section offset,<br>
	 * never an index, and LOCLISTSPTR is only referenced<br>
	 * by DW_AT_loclists_base.<br>
	 * Note DW_FORM_CLASS_LOCLISTSPTR spelling to distinguish<br>
	 * from DW_FORM_CLASS_LOCLISTPTR.<br>
	 * DWARF5:<br>
	 * DW_FORM_CLASS_RNGLISTSPTR  is like DW_FORM_CLASS_RNGLIST<br>
	 * except that RNGLISTSPTR is aways a section offset,<br>
	 * never an index. DW_FORM_CLASS_RNGLISTSPTR is only<br>
	 * referenced by DW_AT_rnglists_base.<br>
	 * <i>native declaration : line 1498</i><br>
	 * enum values
	 */
	public static interface Dwarf_Form_Class {
		/** <i>native declaration : line 1499</i> */
		public static final int DW_FORM_CLASS_UNKNOWN = 0;
		/** <i>native declaration : line 1499</i> */
		public static final int DW_FORM_CLASS_ADDRESS = 1;
		/** <i>native declaration : line 1500</i> */
		public static final int DW_FORM_CLASS_BLOCK = 2;
		/** <i>native declaration : line 1500</i> */
		public static final int DW_FORM_CLASS_CONSTANT = 3;
		/** <i>native declaration : line 1501</i> */
		public static final int DW_FORM_CLASS_EXPRLOC = 4;
		/** <i>native declaration : line 1501</i> */
		public static final int DW_FORM_CLASS_FLAG = 5;
		/** <i>native declaration : line 1502</i> */
		public static final int DW_FORM_CLASS_LINEPTR = 6;
		/**
		 * DWARF2,3,4 only<br>
		 * <i>native declaration : line 1503</i>
		 */
		public static final int DW_FORM_CLASS_LOCLISTPTR = 7;
		/**
		 * DWARF2,3,4 only<br>
		 * <i>native declaration : line 1504</i>
		 */
		public static final int DW_FORM_CLASS_MACPTR = 8;
		/**
		 * DWARF2,3,4 only<br>
		 * <i>native declaration : line 1505</i>
		 */
		public static final int DW_FORM_CLASS_RANGELISTPTR = 9;
		/** <i>native declaration : line 1506</i> */
		public static final int DW_FORM_CLASS_REFERENCE = 10;
		/** <i>native declaration : line 1507</i> */
		public static final int DW_FORM_CLASS_STRING = 11;
		/**
		 * MIPS/IRIX DWARF2 only<br>
		 * <i>native declaration : line 1508</i>
		 */
		public static final int DW_FORM_CLASS_FRAMEPTR = 12;
		/**
		 * DWARF5<br>
		 * <i>native declaration : line 1509</i>
		 */
		public static final int DW_FORM_CLASS_MACROPTR = 13;
		/**
		 * DWARF5<br>
		 * <i>native declaration : line 1510</i>
		 */
		public static final int DW_FORM_CLASS_ADDRPTR = 14;
		/**
		 * DWARF5<br>
		 * <i>native declaration : line 1511</i>
		 */
		public static final int DW_FORM_CLASS_LOCLIST = 15;
		/**
		 * DWARF5<br>
		 * <i>native declaration : line 1512</i>
		 */
		public static final int DW_FORM_CLASS_LOCLISTSPTR = 16;
		/**
		 * DWARF5<br>
		 * <i>native declaration : line 1513</i>
		 */
		public static final int DW_FORM_CLASS_RNGLIST = 17;
		/**
		 * DWARF5<br>
		 * <i>native declaration : line 1514</i>
		 */
		public static final int DW_FORM_CLASS_RNGLISTSPTR = 18;
		/**
		 * DWARF5<br>
		 * <i>native declaration : line 1515</i>
		 */
		public static final int DW_FORM_CLASS_STROFFSETSPTR = 19;
	};
	public static final int DW_DLA_FRAME_OP = (int)0x13;
	public static final int DW_DLS_NOSLIDE = (int)0;
	public static final int DW_DLE_UNIT_TYPE_NOT_HANDLED = (int)386;
	public static final int DW_DLE_PARENT_EXISTS = (int)80;
	public static final int DW_DLE_DWP_MISSING_DWO_ID = (int)292;
	public static final int DW_DLE_COMPRESSED_EMPTY_SECTION = (int)347;
	public static final int DW_DLE_FISSION_INDEX_WRONG = (int)282;
	public static final int DW_DLE_CU_UT_TYPE_ERROR = (int)285;
	public static final int DW_DLE_ELF_SECTION_ERROR = (int)446;
	public static final int DW_DLE_AUGMENTATION_STRING_OFF_END = (int)362;
	public static final int DW_DLE_FDE_ALLOC = (int)73;
	public static final int DW_GROUPNUMBER_DWO = (int)2;
	public static final int DW_DLE_BAD_STRING_FORM = (int)350;
	public static final int DW_DLE_CIE_INSTR_EXEC_ERROR = (int)98;
	public static final int DW_DLE_DEBUG_FRAME_LENGTH_BAD = (int)89;
	public static final int DW_DLE_DWARF_INIT_DBG_NULL = (int)465;
	public static final int DW_DLE_ELF_FLAGS_NOT_AVAILABLE = (int)328;
	public static final int DW_DLE_ELF_BEGIN_ERROR = (int)27;
	public static final int DW_DLE_GROUP_COUNT_ERROR = (int)389;
	public static final int DW_DLE_STRING_OFFSET_BAD = (int)53;
	public static final int DW_DLE_GLOBAL_CONTEXT_NULL = (int)126;
	public static final int DW_DLE_DF_FRAME_DECODING_ERROR = (int)193;
	public static final int DW_DLE_DEBUG_VARNAMES_VERSION_ERROR = (int)166;
	public static final int DW_DLE_LINE_PROLOG_LENGTH_BAD = (int)55;
	public static final int DW_DLE_STRING_HASHTAB_IDENTITY_ERROR = (int)385;
	public static final int DW_DLE_UNKNOWN_FORM = (int)321;
	public static final int DW_DLE_DEBUG_FUNCNAMES_NULL = (int)153;
	public static final int DW_DLE_VERSION_STAMP_ERROR = (int)48;
	public static final int DW_DLE_CIE_RET_ADDR_REG_ERROR = (int)91;
	public static final int DW_DLE_AT_FIXUP_NULL = (int)242;
	public static final int DW_DLE_ABBREV_ALLOC = (int)86;
	public static final int DW_DLE_FSTAT_ERROR = (int)24;
	public static final int DW_DLE_DEBUG_LINE_DUPLICATE = (int)37;
	public static final int DW_DLE_MIXING_SPLIT_DWARF_VERSIONS = (int)448;
	public static final int DW_DLE_FDE_PTR_NULL = (int)100;
	public static final int DW_DLE_NO_FILE_NAME = (int)140;
	public static final int DW_DLE_STR_OFFSETS_NO_MAGIC = (int)404;
	public static final int DW_DLE_FRAME_AUGMENTATION_UNKNOWN = (int)195;
	public static final int DW_DLE_XU_HASH_ROW_ERROR = (int)271;
	public static final int DW_DLE_ELF_SECTION_GROUP_ERROR = (int)441;
	public static final int DW_DLE_DEBUG_LINE_LENGTH_BAD = (int)54;
	public static final int DW_DLA_ATTR = (int)0x0a;
	public static final int DW_DLE_DEBUG_WEAKNAMES_LENGTH_BAD = (int)173;
	public static final int DW_DLE_VMM = (int)1;
	public static final int DW_DLE_SEEK_ERROR = (int)418;
	public static final int DW_GROUPNUMBER_BASE = (int)1;
	public static final int DW_DLC_ELF_OFFSET_SIZE_64 = (int)0x00020000;
	public static final int DW_DLE_DEBUG_FORM_HANDLING_INCOMPLETE = (int)251;
	public static final int DW_DLE_ID = (int)6;
	public static final int DW_DLE_NEXT_DIE_PAST_END = (int)252;
	public static final int DW_DLE_FNR = (int)13;
	public static final int DW_DLE_INFO_HEADER_ERROR = (int)334;
	public static final int DW_DLE_FORM_STRING_BAD_STRING = (int)361;
	public static final int DW_DLE_IA = (int)9;
	public static final int DW_DLE_FNO = (int)12;
	public static final int DW_DLE_DEBUG_VARNAMES_DUPLICATE = (int)164;
	public static final int DW_DLE_ZLIB_UNCOMPRESS_ERROR = (int)368;
	public static final int DW_DLE_ELF_RELOC_SECTION_ERROR = (int)466;
	public static final int DW_DLE_ZLIB_DATA_ERROR = (int)317;
	public static final int DW_DLE_FPGM_ALLOC = (int)67;
	public static final int DW_DLE_DEBUGINFO_ERROR = (int)84;
	public static final int DW_DLA_LINEBUF = (int)0x10;
	public static final int DW_DLE_DWARF_ABBREV_NULL = (int)110;
	public static final int DW_DLE_EOS = (int)20;
	public static final int DW_DLE_DEBUG_TYPES_ONLY_DWARF4 = (int)238;
	public static final int DW_DLE_MACRO_OFFSET_BAD = (int)318;
	public static final int DW_DLE_SIGNATURE_SECTION_NUMBER_WRONG = (int)287;
	public static final int DW_DLE_FISSION_SECNUM_ERR = (int)295;
	public static final int DW_DLE_XU_TYPE_ARG_ERROR = (int)268;
	public static final int DW_DLE_DEBUGSTR_ERROR = (int)351;
	public static final int DW_DLE_PE_OFFSET_BAD = (int)427;
	public static final int DW_DLE_DEBUG_FUNCNAMES_DUPLICATE = (int)152;
	public static final int DW_DLA_LOC_BLOCK = (int)0x16;
	public static final int DW_DLE_ELF_VERSION_BAD = (int)422;
	public static final int DW_DLE_XU_NAME_COL_ERROR = (int)270;
	public static final int DW_DLE_DEBUG_RANGES_OFFSET_BAD = (int)206;
	public static final int DW_DLE_ARANGE_NULL = (int)139;
	public static final int DW_FTYPE_CUSTOM_ELF = (int)5;
	public static final int DW_DLE_ATTR_OUTSIDE_SECTION = (int)281;
	public static final int DW_DLE_DEBUG_FRAME_NULL = (int)108;
	public static final int DW_DLE_FILE_OFFSET_BAD = (int)417;
	public static final int DW_DLE_RNGLISTS_ERROR = (int)468;
	public static final int DW_DLE_MACINFO_STRING_NULL = (int)177;
	public static final int DW_DLA_MACRO_CONTEXT = (int)0x3c;
	public static final int DW_DLE_REGNO_OVFL = (int)74;
	public static final int DW_DLE_CIE_ALLOC = (int)72;
	public static final int DW_DLE_NO_TIED_ADDR_AVAILABLE = (int)301;
	public static final int DW_DLE_CIE_INSTR_PTR_ERROR = (int)339;
	public static final int DW_DLE_DUP_ATTR_ON_DIE = (int)409;
	public static final int DW_DLE_NO_ELF64_SUPPORT = (int)219;
	public static final int DW_DLE_CIE_OFFS_ALLOC = (int)75;
	public static final int DW_DLE_DUPLICATE_TU_INDEX = (int)267;
	public static final int DW_DLE_SIG_TYPE_WRONG_STRING = (int)289;
	public static final int DW_DLE_DEBUG_STR_DUPLICATE = (int)45;
	public static final int DW_DLE_DBG_NULL = (int)81;
	public static final int DW_DLE_SECTION_DUPLICATION = (int)247;
	public static final int DW_DLE_ADDR_ALLOC = (int)130;
	public static final int DW_DLE_ABBREV_OFF_END = (int)360;
	public static final int DW_LKIND_unknown = (int)99;
	public static final int DW_DLE_NE = (int)0;
	public static final int DW_DLE_DIE_NO_CU_CONTEXT = (int)104;
	public static final int DW_DLE_BAD_MACRO_HEADER_POINTER = (int)322;
	public static final int DW_DLE_FILE_UNAVAILABLE = (int)411;
	public static final int DW_DLE_STR_OFFSETS_EXTRA_BYTES = (int)408;
	public static final int DW_DLE_DEBUG_FUNCNAMES_LENGTH_BAD = (int)155;
	public static final int DW_DLE_DEBUG_NAMES_ENTRYPOOL_OFFSET = (int)380;
	public static final int DW_DLE_LINE_TABLE_LINENO_ERROR = (int)430;
	public static final int DW_DLE_SECTION_NAME_BIG = (int)410;
	public static final int DW_DLE_HEX_STRING_ERROR = (int)460;
	public static final int DWARF_DRD_BUFFER_VERSION = (int)2;
	public static final int DW_DLE_DEBUG_NAMES_ABBREV_OVERFLOW = (int)376;
	public static final int DW_DLA_STR_OFFSETS = (int)0x40;
	public static final int DW_DLE_DISCR_ARRAY_ERROR = (int)353;
	public static final int DW_DLA_ARANGE = (int)0x11;
	public static final int DW_DLE_RET_OP_LIST_NULL = (int)101;
	public static final int DW_DLE_DEBUG_LINE_NULL = (int)38;
	public static final int DW_DLE_DEBUG_INFO_NULL = (int)32;
	public static final int DW_DLE_DEBUG_WEAKNAMES_VERSION_ERROR = (int)172;
	public static final int DW_DLV_NO_ENTRY = (int)-1;
	public static final int DW_DLE_MACRO_OPCODE_BAD = (int)319;
	public static final int DW_DLE_LEB_IMPROPER = (int)329;
	public static final int DW_DLE_DEBUG_PUBTYPES_VERSION_ERROR = (int)198;
	public static final int DW_DLE_DEBUG_STR_OFFSET_BAD = (int)121;
	public static final int DW_DLE_ABBREV_OFFSET_ERROR = (int)49;
	public static final int DW_DLE_VAR_CONTEXT_NULL = (int)169;
	public static final int DW_DLE_DECIMAL_STRING_ERROR = (int)461;
	public static final int DW_DLE_NESTED_FORM_INDIRECT_ERROR = (int)255;
	public static final int DW_DLE_DEBUG_MACRO_MAX_BAD = (int)183;
	public static final int DW_DLE_DUPLICATE_GDB_INDEX = (int)260;
	public static final int DW_DLE_ELF_STRING_SECTION_ERROR = (int)447;
	public static final int DW_DLE_NDS = (int)4;
	public static final int DW_DLE_LINE_OFFSET_BAD = (int)120;
	public static final int DW_DLE_DEBUG_PUBTYPES_DUPLICATE = (int)199;
	public static final int DW_DLE_FRAME_REGISTER_COUNT_MISMATCH = (int)202;
	public static final int DW_DLE_DEBUG_STR_OFFSETS_DUPLICATE = (int)246;
	public static final int DW_DLE_LLE_CODE_UNKNOWN = (int)310;
	public static final int DW_DLE_NOLL = (int)18;
	public static final int DW_DLE_LINK_LOOP = (int)203;
	public static final int DW_DLE_GROUP_MAP_DUPLICATE = (int)388;
	public static final int DW_DLE_GNU_PUBTYPES_ERROR = (int)473;
	public static final int DW_DLE_ELF_GETEHDR_ERROR = (int)28;
	public static final int DW_DLE_DEBUG_FRAME_LENGTH_NOT_MULTIPLE = (int)227;
	public static final int DW_DLE_DEBUG_NAMES_HEADER_ERROR = (int)372;
	public static final int DW_DLE_DEBUG_NAMES_AUG_STRING_ERROR = (int)373;
	public static final int DW_DLE_LNCT_FORM_CODE_NOT_HANDLED = (int)383;
	public static final int DW_DLE_NO_SUCH_SIGNATURE_FOUND = (int)286;
	public static final int DW_DLA_LIST = (int)0x0f;
	public static final int DW_DLE_SYMTAB_SECTION_LENGTH_ODD = (int)231;
	public static final int DW_DLE_XU_IMPOSSIBLE_ERROR = (int)269;
	public static final int DW_DLE_MAF = (int)8;
	public static final int DW_DLE_INTERNAL_NULL_POINTER = (int)436;
	public static final String DW_PR_DUx = (String)"llx";
	public static final int DW_DLE_SEEK_OFF_END = (int)444;
	public static final String DW_PR_DUu = (String)"llu";
	public static final int DW_DLE_LINE_NUMBER_HEADER_ERROR = (int)235;
	public static final int DW_DLE_NEXT_DIE_PTR_NULL = (int)106;
	public static final int DW_DLE_DEBUG_NAMES_NULL_POINTER = (int)378;
	public static final int DW_DLE_CU_ADDRESS_SIZE_BAD = (int)142;
	public static final int DW_DLE_GDB_INDEX_CUVEC_ERROR = (int)265;
	public static final int DW_DLE_DEBUG_SUP_STRING_ERROR = (int)476;
	public static final int DW_DLE_MAP = (int)2;
	public static final int DW_LKIND_expression = (int)0;
	public static final int DW_DLE_SEGMENT_SIZE_BAD = (int)135;
	public static final int DW_DLE_DEBUG_TYPENAMES_DUPLICATE = (int)158;
	public static final int DW_DLE_POINTER_SECTION_UNKNOWN = (int)344;
	public static final int DW_DLE_CORRUPT_GNU_DEBUGID_STRING = (int)459;
	public static final int DW_DLE_MACRO_OP_UNHANDLED = (int)324;
	public static final int DW_DLE_ELF_STRPTR_ERROR = (int)30;
	public static final int DW_DLE_NO_STREAM_RELOC_SUPPORT = (int)433;
	public static final int DW_DLE_DBG_NO_CU_CONTEXT = (int)103;
	public static final int DW_DLE_EXPR_LENGTH_BAD = (int)146;
	public static final int DW_DLA_BLOCK = (int)0x06;
	public static final int DW_DLE_FILE_TOO_SMALL = (int)423;
	public static final int DW_DLE_DEBUG_ABBREV_DUPLICATE = (int)33;
	public static final int DW_DLE_ATTR_DBG_NULL = (int)117;
	public static final int DW_DLE_DEBUG_TYPEOFFSET_BAD = (int)239;
	public static final int DW_DLE_BAD_LINE_TABLE_OPERATION = (int)304;
	public static final int DW_DLE_FRAME_INSTR_EXEC_ERROR = (int)99;
	public static final int DW_DLE_FILE_ENTRY_ALLOC = (int)65;
	public static final int DW_DLC_RDWR = (int)2;
	public static final int DW_DLE_MDE = (int)10;
	public static final int DW_DLE_ELF_CLASS_BAD = (int)420;
	public static final int DW_DLE_FWA = (int)14;
	public static final int DW_DLE_MACRO_STRING_BAD = (int)366;
	public static final int DW_DLE_ATTR_NULL = (int)111;
	public static final int DW_DLE_DIRECTORY_FORMAT_COUNT_VS_DIRECTORIES_MISMATCH = (int)346;
	public static final int DW_DLC_OFFSET64 = (int)0x10000000;
	public static final int DW_DLE_NO_TIED_FILE_AVAILABLE = (int)308;
	public static final int DW_DLE_FORM_CORRUPT = (int)450;
	public static final int DW_DLE_STR_OFFSETS_ARRAY_SIZE = (int)405;
	public static final int DW_DLA_RNGLISTS_HEAD = (int)0x36;
	public static final int DW_DLE_MACINFO_STRING_BAD = (int)367;
	public static final int DW_DLE_DEBUG_MACRO_MALLOC_SPACE = (int)185;
	public static final int DW_DLE_FUNC_CONTEXT_NULL = (int)157;
	public static final int DW_DLE_MAKE_CU_CONTEXT_FAIL = (int)132;
	public static final int DW_DLA_STRING = (int)0x01;
	public static final int DW_DLE_ELF_GETSHDR_ERROR = (int)29;
	public static final int DW_DLE_HIGHPC_WRONG_FORM = (int)397;
	public static final int DW_DLE_LAST = (int)478;
	public static final int DW_DLE_RELOC_SECTION_SYMBOL_INDEX_BAD = (int)232;
	public static final int DW_ENDIAN_LITTLE = (int)2;
	public static final int DW_DLE_NO_COMP_DIR = (int)141;
	public static final int DW_DLE_RELOC_SECTION_MALLOC_FAIL = (int)218;
	public static final int DW_DLE_NULL_ARGS_DWARF_ADD_PATH = (int)464;
	public static final int DW_DLE_MACINFO_MALLOC_FAIL = (int)180;
	public static final int DW_DLE_LNCT_MD5_WRONG_FORM = (int)400;
	public static final String DW_PR_DSx = (String)"llx";
	public static final int DW_DLE_ATTR_FORM_NOT_STR_INDEX = (int)259;
	public static final String DW_PR_DSd = (String)"lld";
	public static final int DW_DLE_DEBUG_SYMTAB_ERR = (int)209;
	public static final int DW_DLE_NO_CIE_FOR_FDE = (int)150;
	public static final int DW_DLE_DEBUGLINE_ERROR = (int)82;
	public static final int DW_DLE_FISSION_ADDITION_ERROR = (int)341;
	public static final int DW_DLA_TYPENAME = (int)0x19;
	public static final int DW_DLE_DIE_ABBREV_BAD = (int)113;
	public static final int DW_DLE_DEBUG_ADDR_DUPLICATE = (int)249;
	public static final int DW_DLE_DEBUG_PUBNAMES_DUPLICATE = (int)43;
	public static final int DW_DLA_CIE = (int)0x14;
	public static final int DW_DLE_DEFINE_FILE_STRING_BAD = (int)365;
	public static final int DW_DLE_LOWPC_WRONG_CLASS = (int)396;
	public static final int DW_DLE_GLOBAL_NULL = (int)125;
	public static final int DW_DLE_DF_NEW_LOC_LESS_OLD_LOC = (int)190;
	public static final int DW_DLE_ELF_STRING_SECTION_MISSING = (int)443;
	public static final int DW_DLE_CU_UT_TYPE_VALUE = (int)454;
	public static final int DW_DLE_LEE = (int)3;
	public static final int DW_DLE_DIE_ALLOC = (int)79;
	public static final int DW_DLA_DNAMES_HEAD = (int)0x3f;
	public static final int DW_DLS_FORWARD = (int)1;
	public static final int DW_DLV_OK = (int)0;
	public static final int DW_DLE_INCDIR_ALLOC = (int)68;
	public static final int DW_DLE_WEAK_CONTEXT_NULL = (int)175;
	public static final int DW_DLE_LINE_CONTEXT_INDEX_WRONG = (int)306;
	public static final int DW_DLE_BAD_MACRO_INDEX = (int)323;
	public static final int DW_DLE_READ_LITTLEENDIAN_ERROR = (int)331;
	public static final int DW_DLA_GNU_INDEX_HEAD = (int)0x35;
	public static final int DW_ENDIAN_UNKNOWN = (int)0;
	public static final int DW_DLA_LOCDESC = (int)0x03;
	public static final String DW_CIE_AUGMENTER_STRING_V0 = (String)"z";
	public static final int DW_DLE_GROUPNUMBER_ERROR = (int)370;
	public static final int DW_DLE_SIBLING_LIST_IMPROPER = (int)355;
	public static final int DW_DLE_WRONG_TAG = (int)78;
	public static final int DW_DLS_BACKWARD = (int)-1;
	public static final int DW_DLE_DEBUG_MACRO_DUPLICATE = (int)296;
	public static final int DW_DLE_PRO_INIT_EXTRAS_ERR = (int)463;
	public static final int DW_DLE_DEBUG_ARANGES_DUPLICATE = (int)35;
	public static final int DW_DLE_IMPROPER_DWO_ID = (int)369;
	public static final int DW_DLE_NO_SIGNATURE_TO_LOOKUP = (int)300;
	public static final int DW_DLA_DIE = (int)0x08;
	public static final int DW_DLE_DEBUG_MACRO_LENGTH_BAD = (int)182;
	public static final int DW_LKIND_loclist = (int)1;
	public static final int DW_DLE_BAD_TYPE_SIZE = (int)425;
	public static final int DW_DLE_STRING_ALLOC = (int)69;
	public static final int DW_DLE_MISSING_REQUIRED_CU_OFFSET_HASH = (int)291;
	public static final int DW_DLE_INCL_DIR_NUM_BAD = (int)60;
	public static final int DW_DLE_DUPLICATE_GNU_DEBUG_PUBTYPES = (int)475;
	public static final int DW_DLC_ELF_OFFSET_SIZE_32 = (int)0x00400000;
	public static final int DW_DLE_DEBUG_RANGES_MISSING_END = (int)207;
	public static final int DW_DLE_BAD_REF_SIG8_FORM = (int)223;
	public static final int DW_DLE_ARANGE_OFFSET_BAD = (int)134;
	public static final int DW_DLE_DEBUG_WEAKNAMES_NULL = (int)171;
	public static final String DW_PR_XZEROS = (String)"08";
	public static final int DW_DLE_LINE_HEADER_LENGTH_BOTCH = (int)384;
	public static final int DW_DLE_INPUT_ATTR_BAD = (int)143;
	public static final int DW_DLE_BAD_ABINAME = (int)244;
	public static final int DW_DLE_DEBUG_NAMES_PAD_NON_ZERO = (int)374;
	public static final int DW_DLE_NOT_REF_FORM = (int)226;
	public static final int DW_DLE_VAR_NULL = (int)168;
	public static final int DW_DLE_GROUP_MAP_ALLOC = (int)387;
	public static final int DW_DLE_DEBUG_FUNCNAMES_VERSION_ERROR = (int)154;
	public static final int DW_DLE_DEBUG_PUBNAMES_NULL = (int)44;
	public static final int DW_DLE_DEBUG_TYPENAMES_NULL = (int)159;
	public static final int DW_DLE_OFFSET_BAD = (int)131;
	public static final int DW_DLE_DEBUG_STRTAB_ERR = (int)210;
	public static final int DW_FRAME_CFA_COL3 = (int)1436;
	public static final int DW_DLE_AT_FIXUP_DUP = (int)243;
	public static final int DW_DLC_OFFSET32 = (int)0x00010000;
	public static final int DW_DLE_DEBUG_TYPES_NULL = (int)236;
	public static final int DW_DLE_ATTR_EXPRLOC_FORM_BAD = (int)224;
	public static final int DW_DLE_REL_ALLOC = (int)133;
	public static final int DW_DLE_RELOC_SECTION_MISSING_INDEX = (int)215;
	public static final int DW_DLE_ERRONEOUS_XU_INDEX_SECTION = (int)345;
	public static final int DW_DLE_RELOC_SECTION_RELOC_TARGET_SIZE_UNKNOWN = (int)233;
	public static final int DW_DLE_RELOCS_ERROR = (int)280;
	public static final int DW_DLE_DUPLICATE_GNU_DEBUG_PUBNAMES = (int)474;
	public static final int DW_DLE_NLS = (int)5;
	public static final int DW_DLE_ABBREV_DECODE_ERROR = (int)109;
	public static final int DW_DLE_MACINFO_STRING_EMPTY = (int)178;
	public static final int DW_DLE_DEBUG_MACRO_INCONSISTENT = (int)186;
	public static final int DW_DLE_NEXT_DIE_LOW_ERROR = (int)284;
	public static final int DW_FISSION_SECT_COUNT = (int)12;
	public static final int DW_DLA_DSC_HEAD = (int)0x3e;
	public static final int DW_DLE_DEBUG_RNGLISTS_DUPLICATE = (int)359;
	public static final int DW_DLE_ELF_SECTION_COUNT_MISMATCH = (int)442;
	public static final int DW_DLE_FUNC_NULL = (int)156;
	public static final int DW_DLE_NO_TAG_FOR_DIE = (int)395;
	public static final int DW_DLE_ILLOGICAL_TSEARCH = (int)349;
	public static final int DW_DLE_DEBUGSTR_UNEXPECTED_REL = (int)352;
	public static final int DW_DLE_FORM_SEC_OFFSET_LENGTH_BAD = (int)225;
	public static final int DW_DLE_GDBINDEX_STRING_ERROR = (int)471;
	public static final int DW_DLV_ERROR = (int)1;
	public static final int DW_DLE_PUBNAMES_LENGTH_BAD = (int)124;
	public static final int DW_DLE_DEBUG_FRAME_POSSIBLE_ADDRESS_BOTCH = (int)229;
	public static final int DW_DLE_LINE_CONTEXT_BOTCH = (int)305;
	public static final int DW_DLE_DEBUG_LINE_STR_DUPLICATE = (int)298;
	public static final int DW_DLE_SECTION_ERROR = (int)248;
	public static final int DW_DLE_FRAME_CIE_DECODE_ERROR = (int)200;
	public static final int DW_DLE_DF_MAKE_INSTR_NO_INIT = (int)189;
	public static final int DW_DLE_TYPENAMES_ERROR = (int)277;
	public static final int DW_DLE_DEBUG_MACRO_INTERNAL_ERR = (int)184;
	public static final int DW_DLE_STR_OFFSETS_NULL_DBG = (int)403;
	public static final int DW_DLE_GROUP_LOAD_ERROR = (int)391;
	public static final int DW_DLE_ATTR_FORM_OFFSET_BAD = (int)119;
	public static final int DW_DLE_DEBUG_ABBREV_NULL = (int)34;
	public static final int DW_DLE_INTERFACE_NOT_SUPPORTED = (int)313;
	public static final int DW_DLE_ORPHAN_FDE = (int)221;
	public static final int DW_DLE_DEBUG_WEAKNAMES_DUPLICATE = (int)170;
	public static final int DW_DLE_XU_HASH_INDEX_ERROR = (int)272;
	public static final int DW_DLC_READ = (int)0;
	public static final int DW_DLE_DIR_INDEX_BAD = (int)127;
	public static final int DW_DLE_DEBUG_LOC_SECTION_SHORT = (int)194;
	public static final int DW_DLE_WRONG_ADDRESS = (int)76;
	public static final int DW_DLE_EOLL = (int)17;
	public static final int DW_DLE_ATTR_NO_CU_CONTEXT = (int)115;
	public static final int DW_DLE_LOCLISTS_ERROR = (int)469;
	public static final int DW_DLE_ARANGE_ERROR = (int)274;
	public static final int DW_DLE_OPEN_FAIL = (int)414;
	public static final int DW_DLE_CIE_DBG_NULL = (int)95;
	public static final int DW_DLC_IRIX_OFFSET64 = (int)0x00200000;
	public static final int DW_DLE_ELF_SECTION_LINK_ERROR = (int)440;
	public static final int DW_FTYPE_ARCHIVE = (int)4;
	public static final int DW_DLE_CU_DIE_NO_ABBREV_LIST = (int)256;
	public static final int DW_DLE_DWP_SIGNATURE_MISMATCH = (int)453;
	public static final int DW_DLE_PRO_INIT_EXTRAS_UNKNOWN = (int)462;
	public static final int DW_DLC_TARGET_LITTLEENDIAN = (int)0x00100000;
	public static final int DW_DLE_DUPLICATE_INST_BLOCK = (int)222;
	public static final int DW_DLC_TARGET_BIGENDIAN = (int)0x08000000;
	public static final int DW_DLE_NOB = (int)15;
	public static final int DW_DLE_LOC_EXPR_BAD = (int)128;
	public static final int DW_DLE_DF_POP_EMPTY_STACK = (int)191;
	public static final int DW_DLE_ARANGES_NULL = (int)138;
	public static final int DW_DLE_GDB_INDEX_COUNT_ADDR_ERROR = (int)263;
	public static final int DW_DLE_INTEGER_TOO_SMALL = (int)439;
	public static final int DW_DLA_ADDR = (int)0x1c;
	public static final int DW_DLE_DEBUG_NAMES_UNHANDLED_FORM = (int)381;
	public static final int DW_DLE_RELOC_SECTION_LENGTH_ODD = (int)216;
	public static final int DW_DLA_RANGES = (int)0x1d;
	public static final int DW_DLE_ELF_GETIDENT_ERROR = (int)148;
	public static final int DW_DLE_WEAKNAMES_ERROR = (int)279;
	public static final int DW_DLA_LINE = (int)0x09;
	public static final int DW_DLE_BADOFF = (int)19;
	public static final int DW_DLE_BAD_REF_FORM = (int)118;
	public static final int DW_DLE_LEB_OUT_ERROR = (int)354;
	public static final int DW_DLA_GDBINDEX = (int)0x37;
	public static final int DW_DLE_AUG_DATA_LENGTH_BAD = (int)393;
	public static final int DW_DLE_FORM_BLOCK_LENGTH_ERROR = (int)337;
	public static final int DW_DLE_MLE = (int)11;
	public static final int DW_DLE_MISSING_ELF64_SUPPORT = (int)220;
	public static final int DW_DLE_BAD_EXPR_OPCODE = (int)145;
	public static final int DW_DLE_DEBUG_FRAME_DUPLICATE = (int)107;
	public static final int DW_DLE_DEBUG_VARNAMES_NULL = (int)165;
	public static final int DW_EXPR_OFFSET = (int)0;
	public static final int DW_DLE_ELF_ENDIAN_BAD = (int)421;
	public static final int DW_DLE_RETURN_EMPTY_PUBNAMES_ERROR = (int)434;
	public static final int DW_DLE_WEAK_NULL = (int)174;
	public static final int DW_DLE_MISSING_REQUIRED_TU_OFFSET_HASH = (int)290;
	public static final int DW_DLE_ATTR_CORRUPT = (int)451;
	public static final int DW_DLE_MOF = (int)16;
	public static final int DW_DLE_LINE_TABLE_BAD = (int)357;
	public static final int DW_DLE_LOC_BAD_TERMINATION = (int)230;
	public static final int DW_DLE_DWP_SIBLING_ERROR = (int)293;
	public static final int DW_DLE_LINE_STRP_OFFSET_BAD = (int)326;
	public static final int DW_DLE_GNU_PUBNAMES_ERROR = (int)472;
	public static final int DW_DLE_LINE_FILE_NUM_BAD = (int)61;
	public static final int DW_DLE_LOCEXPR_OFF_SECTION_END = (int)343;
	public static final int DW_DLE_ATTR_FORM_NOT_DATA8 = (int)288;
	public static final int DW_DLE_LINE_HEADER_CORRUPT = (int)401;
	public static final int DW_DLE_STRING_PTR_NULL = (int)122;
	public static final int DW_DLE_STRING_OFF_END_PUBNAMES_LIKE = (int)363;
	public static final int DW_DLE_LOCLIST_INDEX_ERROR = (int)312;
	public static final int DW_DLE_NO_CALLBACK_FUNC = (int)63;
	public static final int DW_DLE_GDB_INDEX_INDEX_ERROR = (int)264;
	public static final int DW_DLE_DEBUG_NAMES_DUPLICATE = (int)297;
	public static final int DW_DLE_ERRONEOUS_GDB_INDEX_SECTION = (int)261;
	public static final int DW_DLE_USER_DECLARED_ERROR = (int)467;
	public static final int DW_DLE_LINE_CONTEXT_NULL = (int)102;
	public static final int DW_DLE_DUPLICATE_GNU_DEBUGLINK = (int)455;
	public static final int DW_DLE_PUBNAMES_ERROR = (int)275;
	public static final int DW_DLE_SIZE_WRAPAROUND = (int)348;
	public static final int DW_DLA_TYPE = (int)0x0b;
	public static final int DW_DLE_DEBUGFRAME_ERROR = (int)83;
	public static final int DW_DLE_ATTR_FORM_SIZE_BAD = (int)116;
	public static final int DW_DLE_DEBUG_FISSION_INCOMPLETE = (int)294;
	public static final int DW_DLC_STREAM_RELOCATIONS = (int)0x02000000;
	public static final int DW_DLE_DEBUG_NAMES_OFF_END = (int)375;
	public static final int DW_DLE_EXPR_NULL = (int)144;
	public static final int DW_DLE_DBG_ALLOC = (int)23;
	public static final int DW_DLE_ARANGE_DECODE_ERROR = (int)137;
	public static final int DW_DLE_CU_TYPE_MISSING = (int)309;
	public static final int DW_DLE_DEBUGPUBTYPES_ERROR = (int)241;
	public static final int DW_DLE_DEBUG_INFO_DUPLICATE = (int)31;
	public static final int DW_DLE_CORRUPT_NOTE_GNU_DEBUGID = (int)457;
	public static final int DW_DLA_FRAME_BLOCK = (int)0x17;
	public static final int DW_DLE_LNCT_CODE_UNKNOWN = (int)382;
	public static final int DW_DLE_LOCLIST_OFFSET_BAD = (int)356;
	public static final int DW_DLE_FSTAT_MODE_ERROR = (int)25;
	public static final int DW_DLE_CIE_NULL = (int)94;
	public static final int DW_DLE_DF_REG_NUM_TOO_HIGH = (int)188;
	public static final int DW_DLE_STR_OFFSETS_NULLARGUMENT = (int)402;
	public static final int DW_DLE_IMAGE_FILE_UNKNOWN_TYPE = (int)429;
	public static final int DW_DLA_LOC_BLOCK_C = (int)0x39;
	public static final int DW_DLE_DEBUG_LOC_NULL = (int)40;
	public static final int DW_DLE_ZLIB_SECTION_SHORT = (int)338;
	public static final int DW_DLE_FILE_WRONG_TYPE = (int)412;
	public static final int DW_FTYPE_ELF = (int)1;
	public static final int DW_HARMLESS_ERROR_CIRCULAR_LIST_DEFAULT_SIZE = (int)4;
	public static final int DW_FTYPE_PE = (int)3;
	public static final int DW_DLE_DEBUG_ARANGES_NULL = (int)36;
	public static final int DW_DLA_GLOBAL = (int)0x0d;
	public static final int DW_DLE_CU_LENGTH_ERROR = (int)47;
	public static final int DW_DLE_DEBUG_TYPENAMES_VERSION_ERROR = (int)160;
	public static final int DW_DLE_PRODUCER_CODE_NOT_AVAILABLE = (int)431;
	public static final int DW_DLE_READ_ERROR = (int)419;
	public static final int DW_DLE_LINE_STRING_BAD = (int)364;
	public static final int DW_DLE_REF_SIG8_NOT_HANDLED = (int)228;
	public static final int DW_DLE_ZDEBUG_REQUIRES_ZLIB = (int)314;
	public static final int DW_DLC_WRITE = (int)1;
	public static final int DW_DLE_PE_SIZE_SMALL = (int)426;
	public static final int DW_DLE_LINE_NUM_OPERANDS_BAD = (int)56;
	public static final int DW_DLE_FUNCNAMES_ERROR = (int)276;
	public static final int DW_DLE_STRING_NOT_TERMINATED = (int)303;
	public static final int DW_DLA_WEAK = (int)0x1b;
	public static final int DW_DLE_PC_NOT_IN_FDE_RANGE = (int)97;
	public static final int DW_DLA_FDE = (int)0x15;
	public static final int DW_DLE_MACRO_PAST_END = (int)325;
	public static final int DW_DLE_MULTIPLE_RELOC_IN_EXPR = (int)147;
	public static final int DW_DLA_LOC = (int)0x02;
	public static final int DW_DLA_LOCDESC_C = (int)0x3a;
	public static final int DW_DLE_DEBUG_MACINFO_NULL = (int)42;
	public static final int DW_DLE_STR_OFFSETS_VERSION_WRONG = (int)406;
	public static final int DW_DLE_GROUP_INTERNAL_ERROR = (int)390;
	public static final int DW_DLE_ATTR_ALLOC = (int)85;
	public static final int DW_DLE_ARANGE_LENGTH_BAD = (int)136;
	public static final int DW_DLE_READ_OFF_END = (int)445;
	public static final int DW_DLE_TYPE_CONTEXT_NULL = (int)163;
	public static final int DW_DLE_SYMTAB_SECTION_ENTRYSIZE_ZERO = (int)234;
	public static final int DW_DLE_DEBUG_CU_UNAVAILABLE_FOR_FORM = (int)250;
	public static final int DW_DLE_RELOC_SECTION_MISMATCH = (int)214;
	public static final int DW_DLE_SIBLING_OFFSET_WRONG = (int)413;
	public static final int DW_DLE_TAG_CORRUPT = (int)449;
	public static final int DW_DLE_MACINFO_INTERNAL_ERROR_SPACE = (int)179;
	public static final int DW_DLE_ATTR_FORM_NOT_ADDR_INDEX = (int)258;
	public static final int DW_DLE_GNU_OPCODE_ERROR = (int)240;
	public static final int DW_DLE_DEBUG_RANGES_DUPLICATE = (int)205;
	public static final int DW_DLA_DEBUG = (int)0x07;
	public static final int DW_DLC_SIZE_64 = (int)0x40000000;
	public static final int DW_DLE_BADBITC = (int)22;
	public static final int DW_DLE_DEBUG_TYPES_DUPLICATE = (int)237;
	public static final int DW_FRAME_SAME_VAL = (int)1035;
	public static final int DW_DLE_STRING_FORM_IMPROPER = (int)327;
	public static final int DW_DLE_STR_OFFSETS_BASE_WRONG_FORM = (int)398;
	public static final int DW_DLE_LOCATION_ERROR = (int)478;
	public static final int DW_DLE_NO_TIED_SIG_AVAILABLE = (int)302;
	public static final int DW_DLE_DEBUG_TYPENAMES_LENGTH_BAD = (int)161;
	public static final int DW_DLE_DEBUG_LOC_DUPLICATE = (int)39;
	public static final int DW_DLA_ABBREV = (int)0x12;
	public static final int DW_DLE_DEBUG_STR_NULL = (int)46;
	public static final int DW_DLE_PUBNAMES_VERSION_ERROR = (int)123;
	public static final int DW_DLE_SECT_ALLOC = (int)64;
	public static final int DW_DLE_DIE_LOC_EXPR_BAD = (int)129;
	public static final int DW_DLA_FUNC = (int)0x18;
	public static final int DW_DLE_BYTEOFF_ERR = (int)71;
	public static final int DW_DLE_RELOC_MISMATCH_INDEX = (int)211;
	public static final int DW_DLA_VAR = (int)0x1a;
	public static final int DW_DLE_DEBUG_PUBTYPES_LENGTH_BAD = (int)197;
	public static final int DW_DLE_NO_AT_MIPS_FDE = (int)149;
	public static final long DW_DLX_EH_OFFSET_UNAVAILABLE = (long)(-2L);
	public static final int DW_DLE_LOCLIST_INTERFACE_ERROR = (int)311;
	public static final int DW_HARMLESS_ERROR_MSG_STRING_SIZE = (int)300;
	public static final int DW_DLE_PATH_SIZE_TOO_SMALL = (int)424;
	public static final int DW_DLE_SECTION_INDEX_BAD = (int)438;
	public static final int DW_DLE_DIE_ABBREV_LIST_NULL = (int)151;
	public static final int DW_DLE_ADDRESS_SIZE_ZERO = (int)371;
	public static final int DW_REG_TABLE_SIZE = (int)66;
	public static final int DW_DLE_DIE_NULL = (int)52;
	public static final int DW_EXPR_VAL_EXPRESSION = (int)3;
	public static final int DW_DLE_ZDEBUG_INPUT_FORMAT_ODD = (int)315;
	public static final int DW_DLE_ABBREV_MISSING = (int)394;
	public static final int DW_DLE_VARNAMES_ERROR = (int)278;
	public static final int DW_FTYPE_MACH_O = (int)2;
	public static final int DW_DLE_MACH_O_SEGOFFSET_BAD = (int)416;
	public static final int DW_DLE_DEBUG_SUP_DUPLICATE = (int)299;
	public static final int DW_DLE_CHUNK_ALLOC = (int)70;
	public static final int DW_DLE_TYPE_NULL = (int)162;
	public static final int DW_DLA_XU_INDEX = (int)0x38;
	public static final int DW_DLE_LINE_OFFSET_WRONG_FORM = (int)336;
	public static final int DW_DLE_DEBUG_RANGES_OUT_OF_MEM = (int)208;
	public static final int DW_DLE_ATRUNC = (int)21;
	public static final int DW_DLE_ADDRESS_SIZE_ERROR = (int)50;
	public static final int DW_FRAME_UNDEFINED_VAL = (int)1034;
	public static final int DW_DLC_SYMBOLIC_RELOCATIONS = (int)0x04000000;
	public static final int DW_DLE_MACRO_OPCODE_FORM_BAD = (int)320;
	public static final int DW_LKIND_loclists = (int)5;
	public static final int DW_DLE_LINE_EXT_OPCODE_BAD = (int)58;
	public static final long DW_DLX_NO_EH_OFFSET = (long)(-1L);
	public static final int DW_DLA_ERROR = (int)0x0e;
	public static final int DW_DLC_SIZE_32 = (int)0x20000000;
	public static final int DW_DLE_LINE_ALLOC = (int)66;
	public static final int DW_DLE_READ_BIGENDIAN_ERROR = (int)332;
	public static final int DW_DLE_SECTION_STRING_OFFSET_BAD = (int)437;
	public static final int DW_DLE_DF_ALLOC_FAIL = (int)192;
	public static final int DW_DLE_ZLIB_BUF_ERROR = (int)316;
	public static final int DW_DLE_FDE_NULL = (int)92;
	public static final int DW_DLE_FIRST_DIE_NOT_CU = (int)105;
	public static final int DW_LKIND_GNU_exp_list = (int)2;
	public static final int DW_DLE_DEBUG_LINE_RANGE_ZERO = (int)330;
	public static final int DW_DLE_DEBUG_MACINFO_DUPLICATE = (int)41;
	public static final int DW_DLE_FISSION_VERSION_ERROR = (int)283;
	public static final int DW_DLE_ATTR_FORM_BAD = (int)114;
	public static final int DW_DLE_RELOC_INVALID = (int)333;
	public static final int DW_DLE_IOF = (int)7;
	public static final int DW_DLE_DUPLICATE_CU_INDEX = (int)266;
	public static final int DW_DLE_RELOC_MISMATCH_STRTAB_INDEX = (int)213;
	public static final int DW_DLE_STRP_OFFSET_BAD = (int)204;
	public static final int DW_DLE_PE_STRING_TOO_LONG = (int)428;
	public static final int DW_DLE_DEBUG_LOClISTS_DUPLICATE = (int)358;
	public static final int DW_DLE_RELOC_SECTION_PTR_NULL = (int)217;
	public static final int DW_DLE_CORRUPT_GNU_DEBUGID_SIZE = (int)458;
	public static final int DW_DLE_GROUP_LOAD_READ_ERROR = (int)392;
	public static final int DW_DLC_POINTER32 = (int)0x20000000;
	public static final int DW_DLE_STR_OFFSETS_ARRAY_INDEX_WRONG = (int)407;
	public static final int DW_FRAME_REG_INITIAL_VALUE = (int)1035;
	public static final int DW_DLE_DEBUG_INFO_PTR_NULL = (int)51;
	public static final int DW_DLE_LO_USER = (int)0x10000;
	public static final int DW_DLE_DF_NO_CIE_AUGMENTATION = (int)187;
	public static final int DW_DLE_DATA16_OUTSIDE_SECTION = (int)399;
	public static final int DW_DLE_MISSING_NEEDED_DEBUG_ADDR_SECTION = (int)257;
	public static final int DW_DLE_SECTION_SIZE_OR_OFFSET_LARGE = (int)470;
	public static final int DW_DLE_FRAME_TABLE_COL_BAD = (int)96;
	public static final int DW_FTYPE_UNKNOWN = (int)0;
	public static final int DW_EXPR_VAL_OFFSET = (int)1;
	public static final int DW_DLA_ELLIST = (int)0x04;
	public static final int DW_DLA_BOUNDS = (int)0x05;
	public static final int DW_DLA_SUBSCR = (int)0x0c;
	public static final int DW_DLE_FDE_DBG_NULL = (int)93;
	public static final int DW_DLE_SECTION_SIZE_ERROR = (int)435;
	public static final int DW_DLE_DIE_BAD = (int)112;
	public static final int DW_DLE_DEBUGMACINFO_ERROR = (int)181;
	public static final int DW_GROUPNUMBER_ANY = (int)0;
	public static final int DW_DLE_ARANGES_HEADER_ERROR = (int)335;
	public static final int DW_DLE_NEXT_DIE_WRONG_FORM = (int)253;
	public static final int DW_DLE_RELOC_MISMATCH_RELOC_INDEX = (int)212;
	public static final int DW_DLC_POINTER64 = (int)0x40000000;
	public static final int DW_DLE_ALLOC_FAIL = (int)62;
	public static final int DW_DLE_FRAME_VERSION_BAD = (int)90;
	public static final int DW_DLE_DEBUG_NAMES_BAD_INDEX_ARG = (int)379;
	public static final int DW_DLE_LINE_SET_ADDR_ERROR = (int)57;
	public static final int DW_DLE_ABBREV_ATTR_DUPLICATION = (int)452;
	public static final int DW_DLE_INIT_ACCESS_WRONG = (int)26;
	public static final int DW_DLE_DEBUG_SUP_ERROR = (int)477;
	public static final int DW_DLE_OFFSET_SIZE = (int)415;
	public static final int DW_DLE_NEXT_DIE_NO_ABBREV_LIST = (int)254;
	public static final int DW_ENDIAN_BIG = (int)1;
	public static final int DW_DLE_LOCDESC_COUNT_WRONG = (int)176;
	public static final int DW_DLE_DEBUG_VARNAMES_LENGTH_BAD = (int)167;
	public static final int DW_DLE_DEBUG_NAMES_ABBREV_CORRUPTION = (int)377;
	public static final int DW_DLE_TOO_MANY_DEBUG = (int)245;
	public static final int DW_DLA_LOC_HEAD_C = (int)0x3b;
	public static final int DW_DLE_ELF_SECT_ERR = (int)88;
	public static final int DW_EXPR_EXPRESSION = (int)2;
	public static final int DW_DLE_PUBTYPE_CONTEXT = (int)196;
	public static final int DW_DLE_GDB_INDEX_COUNT_ERROR = (int)262;
	public static final int DW_DLE_NO_ELF_SUPPORT = (int)432;
	public static final int DW_DLE_DWARF_LINE_NULL = (int)59;
	public static final int DW_DLE_EXTRA_NEIGHBORS = (int)77;
	public static final int DW_DLE_CORRUPT_GNU_DEBUGLINK = (int)456;
	public static final int DW_DLE_NO_TIED_STRING_AVAILABLE = (int)307;
	public static final int DW_DLE_OFFSET_UFLW = (int)87;
	public static final int DW_DLC_OFFSET_SIZE_64 = (int)0x10000000;
	public static final int DW_DLE_FDE_INSTR_PTR_ERROR = (int)340;
	public static final int DW_DLE_HEADER_LEN_BIGGER_THAN_SECSIZE = (int)342;
	public static final int DW_DLE_FRAME_REGISTER_UNREPRESENTABLE = (int)201;
	public static final int DW_DLE_FAILSAFE_ERRVAL = (int)273;
	public interface Dwarf_Handler extends Callback {
		/** @param Dwarf_Error1 errarg */
		void apply(Pointer Dwarf_Error1, Pointer Dwarf_Ptr1);
	};
	public interface dwarf_printf_callback_function_type extends Callback {
		/** @param voidPtr1 linecontent */
		void apply(Pointer voidPtr1, Pointer charPtr1);
	};
	public interface Dwarf_Callback_Func extends Callback {
		int apply(Pointer charPtr1, int int1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, long Dwarf_Unsigned3, long Dwarf_Unsigned4, LongByReference Dwarf_UnsignedPtr1, Pointer voidPtr1, IntByReference intPtr1);
	};
	public interface dwarf_get_endian_copy_function_callback extends Callback {
		/**
		 * @param voidPtr1 src<br>
		 * @param voidPtr2 srclen
		 */
		void apply(Pointer voidPtr1, Pointer voidPtr2, NativeLong u1);
	};
																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																						/**
	 * error<br>
	 * Original signature : <code>char* dwarf_errmsg(Dwarf_Error)</code><br>
	 * <i>native declaration : line 3694</i><br>
	 * @deprecated use the safer methods {@link #dwarf_errmsg(libdwarf.LibdwarfLibrary.Dwarf_Error)} and {@link #dwarf_errmsg(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer dwarf_errmsg(Pointer Dwarf_Error1);
	/**
	 * error<br>
	 * Original signature : <code>char* dwarf_errmsg(Dwarf_Error)</code><br>
	 * <i>native declaration : line 3694</i>
	 */
	Pointer dwarf_errmsg(LibdwarfLibrary.Dwarf_Error Dwarf_Error1);
																			/**
	 * Returns DW_DLV_OK or DW_DLV_ERROR and<br>
	 * if DW_DLV_OK returns the Dwarf_P_Debug<br>
	 * pointer through the dbg_returned argument.<br>
	 * Original signature : <code>int dwarf_producer_init(Dwarf_Unsigned, Dwarf_Callback_Func, Dwarf_Handler, Dwarf_Ptr, void*, const char*, const char*, const char*, Dwarf_P_Debug*, Dwarf_Error*)</code><br>
	 * @param isa_name See isa/abi names in pro_init.c<br>
	 * @param dwarf_version V2 V3 V4 or V5.<br>
	 * @param extra Extra input strings, comma separated.<br>
	 * @param Dwarf_P_DebugPtr1 dbg_returned<br>
	 * <i>native declaration : line 3759</i><br>
	 * @deprecated use the safer methods {@link #dwarf_producer_init(long, libdwarf.LibdwarfLibrary.Dwarf_Callback_Func, libdwarf.LibdwarfLibrary.Dwarf_Handler, com.sun.jna.Pointer, com.sun.jna.Pointer, java.lang.String, java.lang.String, java.lang.String, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_producer_init(long, libdwarf.LibdwarfLibrary.Dwarf_Callback_Func, libdwarf.LibdwarfLibrary.Dwarf_Handler, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int dwarf_producer_init(long Dwarf_Unsigned1, LibdwarfLibrary.Dwarf_Callback_Func Dwarf_Callback_Func1, LibdwarfLibrary.Dwarf_Handler Dwarf_Handler1, Pointer Dwarf_Ptr1, Pointer voidPtr1, Pointer isa_name, Pointer dwarf_version, Pointer extra, Pointer Dwarf_P_DebugPtr1, Pointer Dwarf_ErrorPtr1);
	/**
	 * Returns DW_DLV_OK or DW_DLV_ERROR and<br>
	 * if DW_DLV_OK returns the Dwarf_P_Debug<br>
	 * pointer through the dbg_returned argument.<br>
	 * Original signature : <code>int dwarf_producer_init(Dwarf_Unsigned, Dwarf_Callback_Func, Dwarf_Handler, Dwarf_Ptr, void*, const char*, const char*, const char*, Dwarf_P_Debug*, Dwarf_Error*)</code><br>
	 * @param isa_name See isa/abi names in pro_init.c<br>
	 * @param dwarf_version V2 V3 V4 or V5.<br>
	 * @param extra Extra input strings, comma separated.<br>
	 * @param Dwarf_P_DebugPtr1 dbg_returned<br>
	 * <i>native declaration : line 3759</i>
	 */
	int dwarf_producer_init(long Dwarf_Unsigned1, LibdwarfLibrary.Dwarf_Callback_Func Dwarf_Callback_Func1, LibdwarfLibrary.Dwarf_Handler Dwarf_Handler1, Pointer Dwarf_Ptr1, Pointer voidPtr1, String isa_name, String dwarf_version, String extra, PointerByReference Dwarf_P_DebugPtr1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * Returns DW_DLV_OK or DW_DLV_ERROR and<br>
	 * if DW_DLV_OK returns the Dwarf_P_Debug<br>
	 * pointer through the dbg_returned argument.<br>
	 * Original signature : <code>int dwarf_producer_init(Dwarf_Unsigned, Dwarf_Callback_Func, Dwarf_Handler, Dwarf_Ptr, void*, const char*, const char*, const char*, Dwarf_P_Debug*, Dwarf_Error*)</code><br>
	 * @param isa_name See isa/abi names in pro_init.c<br>
	 * @param dwarf_version V2 V3 V4 or V5.<br>
	 * @param extra Extra input strings, comma separated.<br>
	 * @param Dwarf_P_DebugPtr1 dbg_returned<br>
	 * <i>native declaration : line 3759</i>
	 */
	int dwarf_producer_init(long Dwarf_Unsigned1, LibdwarfLibrary.Dwarf_Callback_Func Dwarf_Callback_Func1, LibdwarfLibrary.Dwarf_Handler Dwarf_Handler1, Pointer Dwarf_Ptr1, Pointer voidPtr1, Pointer isa_name, Pointer dwarf_version, Pointer extra, PointerByReference Dwarf_P_DebugPtr1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * Returns DW_DLV_OK or DW_DLV_ERROR.<br>
	 * The desired form must be DW_FORM_string (the default)<br>
	 * or DW_FORM_strp.<br>
	 * dbg<br>
	 * Original signature : <code>int dwarf_pro_set_default_string_form(Dwarf_P_Debug, int, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3774</i><br>
	 * @deprecated use the safer methods {@link #dwarf_pro_set_default_string_form(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, int, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_pro_set_default_string_form(com.sun.jna.Pointer, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int dwarf_pro_set_default_string_form(Pointer Dwarf_P_Debug1, int int1, Pointer Dwarf_ErrorPtr1);
	/**
	 * Returns DW_DLV_OK or DW_DLV_ERROR.<br>
	 * The desired form must be DW_FORM_string (the default)<br>
	 * or DW_FORM_strp.<br>
	 * dbg<br>
	 * Original signature : <code>int dwarf_pro_set_default_string_form(Dwarf_P_Debug, int, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3774</i>
	 */
	int dwarf_pro_set_default_string_form(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, int int1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * Returns DW_DLV_OK or DW_DLV_ERROR.<br>
	 * The desired form must be DW_FORM_string (the default)<br>
	 * or DW_FORM_strp.<br>
	 * dbg<br>
	 * Original signature : <code>int dwarf_pro_set_default_string_form(Dwarf_P_Debug, int, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3774</i>
	 */
	int dwarf_pro_set_default_string_form(Pointer Dwarf_P_Debug1, int int1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * the old interface. Still supported.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_Signed dwarf_transform_to_disk_form(Dwarf_P_Debug, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3779</i><br>
	 * @deprecated use the safer methods {@link #dwarf_transform_to_disk_form(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_transform_to_disk_form(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	long dwarf_transform_to_disk_form(Pointer Dwarf_P_Debug1, Pointer Dwarf_ErrorPtr1);
	/**
	 * the old interface. Still supported.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_Signed dwarf_transform_to_disk_form(Dwarf_P_Debug, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3779</i>
	 */
	long dwarf_transform_to_disk_form(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * the old interface. Still supported.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_Signed dwarf_transform_to_disk_form(Dwarf_P_Debug, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3779</i>
	 */
	long dwarf_transform_to_disk_form(Pointer Dwarf_P_Debug1, PointerByReference Dwarf_ErrorPtr1);
							/**
	 * Original function.  Checking for error is difficult.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_Ptr dwarf_get_section_bytes(Dwarf_P_Debug, Dwarf_Signed, Dwarf_Signed*, Dwarf_Unsigned*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3795</i><br>
	 * @deprecated use the safer methods {@link #dwarf_get_section_bytes(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, long, java.nio.LongBuffer, java.nio.LongBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_get_section_bytes(com.sun.jna.Pointer, long, com.sun.jna.ptr.LongByReference, com.sun.jna.ptr.LongByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer dwarf_get_section_bytes(Pointer Dwarf_P_Debug1, long Dwarf_Signed1, LongByReference Dwarf_SignedPtr1, LongByReference Dwarf_UnsignedPtr1, Pointer Dwarf_ErrorPtr1);
	/**
	 * Original function.  Checking for error is difficult.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_Ptr dwarf_get_section_bytes(Dwarf_P_Debug, Dwarf_Signed, Dwarf_Signed*, Dwarf_Unsigned*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3795</i>
	 */
	Pointer dwarf_get_section_bytes(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, long Dwarf_Signed1, LongBuffer Dwarf_SignedPtr1, LongBuffer Dwarf_UnsignedPtr1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * Original function.  Checking for error is difficult.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_Ptr dwarf_get_section_bytes(Dwarf_P_Debug, Dwarf_Signed, Dwarf_Signed*, Dwarf_Unsigned*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3795</i>
	 */
	Pointer dwarf_get_section_bytes(Pointer Dwarf_P_Debug1, long Dwarf_Signed1, LongByReference Dwarf_SignedPtr1, LongByReference Dwarf_UnsignedPtr1, PointerByReference Dwarf_ErrorPtr1);
																					/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_producer_finish(Dwarf_P_Debug, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3848</i><br>
	 * @deprecated use the safer methods {@link #dwarf_producer_finish(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_producer_finish(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	long dwarf_producer_finish(Pointer Dwarf_P_Debug1, Pointer Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_producer_finish(Dwarf_P_Debug, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3848</i>
	 */
	long dwarf_producer_finish(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_producer_finish(Dwarf_P_Debug, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3848</i>
	 */
	long dwarf_producer_finish(Pointer Dwarf_P_Debug1, PointerByReference Dwarf_ErrorPtr1);
							/**
	 * Producer attribute addition functions.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_targ_address(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_Unsigned, Dwarf_Signed, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3865</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_AT_targ_address(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, libdwarf.LibdwarfLibrary.Dwarf_P_Die, short, long, long, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_AT_targ_address(com.sun.jna.Pointer, com.sun.jna.Pointer, short, long, long, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_targ_address(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, short Dwarf_Half1, long Dwarf_Unsigned1, long Dwarf_Signed1, Pointer Dwarf_ErrorPtr1);
	/**
	 * Producer attribute addition functions.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_targ_address(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_Unsigned, Dwarf_Signed, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3865</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_targ_address(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die1, short Dwarf_Half1, long Dwarf_Unsigned1, long Dwarf_Signed1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * Producer attribute addition functions.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_targ_address(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_Unsigned, Dwarf_Signed, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3865</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_targ_address(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, short Dwarf_Half1, long Dwarf_Unsigned1, long Dwarf_Signed1, PointerByReference Dwarf_ErrorPtr1);
																			/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_unsigned_const(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3919</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_AT_unsigned_const(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, libdwarf.LibdwarfLibrary.Dwarf_P_Die, short, long, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_AT_unsigned_const(com.sun.jna.Pointer, com.sun.jna.Pointer, short, long, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_unsigned_const(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, short Dwarf_Half1, long Dwarf_Unsigned1, Pointer Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_unsigned_const(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3919</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_unsigned_const(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die1, short Dwarf_Half1, long Dwarf_Unsigned1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_unsigned_const(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3919</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_unsigned_const(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, short Dwarf_Half1, long Dwarf_Unsigned1, PointerByReference Dwarf_ErrorPtr1);
										/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_reference(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_P_Die, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3947</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_AT_reference(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, libdwarf.LibdwarfLibrary.Dwarf_P_Die, short, libdwarf.LibdwarfLibrary.Dwarf_P_Die, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_AT_reference(com.sun.jna.Pointer, com.sun.jna.Pointer, short, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_reference(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, short Dwarf_Half1, Pointer Dwarf_P_Die2, Pointer Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_reference(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_P_Die, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3947</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_reference(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die1, short Dwarf_Half1, LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die2, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_reference(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_P_Die, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3947</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_reference(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, short Dwarf_Half1, Pointer Dwarf_P_Die2, PointerByReference Dwarf_ErrorPtr1);
																						/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_location_expr(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_P_Expr, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4015</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_AT_location_expr(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, libdwarf.LibdwarfLibrary.Dwarf_P_Die, short, libdwarf.LibdwarfLibrary.Dwarf_P_Expr, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_AT_location_expr(com.sun.jna.Pointer, com.sun.jna.Pointer, short, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_location_expr(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, short Dwarf_Half1, Pointer Dwarf_P_Expr1, Pointer Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_location_expr(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_P_Expr, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4015</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_location_expr(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die1, short Dwarf_Half1, LibdwarfLibrary.Dwarf_P_Expr Dwarf_P_Expr1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_location_expr(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_P_Expr, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4015</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_location_expr(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, short Dwarf_Half1, Pointer Dwarf_P_Expr1, PointerByReference Dwarf_ErrorPtr1);
				/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_string(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4029</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_AT_string(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, libdwarf.LibdwarfLibrary.Dwarf_P_Die, short, java.nio.ByteBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_AT_string(com.sun.jna.Pointer, com.sun.jna.Pointer, short, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_string(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, short Dwarf_Half1, Pointer charPtr1, Pointer Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_string(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4029</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_string(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die1, short Dwarf_Half1, ByteBuffer charPtr1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_string(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4029</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_string(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, short Dwarf_Half1, Pointer charPtr1, PointerByReference Dwarf_ErrorPtr1);
																																														/**
	 * ownerdie<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_comp_dir(Dwarf_P_Die, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4134</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_AT_comp_dir(libdwarf.LibdwarfLibrary.Dwarf_P_Die, java.nio.ByteBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_AT_comp_dir(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_comp_dir(Pointer Dwarf_P_Die1, Pointer charPtr1, Pointer Dwarf_ErrorPtr1);
	/**
	 * ownerdie<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_comp_dir(Dwarf_P_Die, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4134</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_comp_dir(LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die1, ByteBuffer charPtr1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * ownerdie<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_comp_dir(Dwarf_P_Die, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4134</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_comp_dir(Pointer Dwarf_P_Die1, Pointer charPtr1, PointerByReference Dwarf_ErrorPtr1);
				/**
	 * die<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_name(Dwarf_P_Die, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4144</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_AT_name(libdwarf.LibdwarfLibrary.Dwarf_P_Die, java.nio.ByteBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_AT_name(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_name(Pointer Dwarf_P_Die1, Pointer charPtr1, Pointer Dwarf_ErrorPtr1);
	/**
	 * die<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_name(Dwarf_P_Die, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4144</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_name(LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die1, ByteBuffer charPtr1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * die<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_name(Dwarf_P_Die, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4144</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_name(LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die1, String charPtr1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * die<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_name(Dwarf_P_Die, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4144</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_name(Pointer Dwarf_P_Die1, Pointer charPtr1, PointerByReference Dwarf_ErrorPtr1);
										/**
	 * Producer line creation functions (.debug_line)<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_directory_decl(Dwarf_P_Debug, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4170</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_directory_decl(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, java.nio.ByteBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_directory_decl(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	long dwarf_add_directory_decl(Pointer Dwarf_P_Debug1, Pointer charPtr1, Pointer Dwarf_ErrorPtr1);
	/**
	 * Producer line creation functions (.debug_line)<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_directory_decl(Dwarf_P_Debug, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4170</i>
	 */
	long dwarf_add_directory_decl(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, ByteBuffer charPtr1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * Producer line creation functions (.debug_line)<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_directory_decl(Dwarf_P_Debug, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4170</i>
	 */
	long dwarf_add_directory_decl(Pointer Dwarf_P_Debug1, Pointer charPtr1, PointerByReference Dwarf_ErrorPtr1);
				/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_file_decl(Dwarf_P_Debug, char*, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4180</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_file_decl(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, java.nio.ByteBuffer, long, long, long, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_file_decl(com.sun.jna.Pointer, com.sun.jna.Pointer, long, long, long, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	long dwarf_add_file_decl(Pointer Dwarf_P_Debug1, Pointer charPtr1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, long Dwarf_Unsigned3, Pointer Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_file_decl(Dwarf_P_Debug, char*, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4180</i>
	 */
	long dwarf_add_file_decl(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, ByteBuffer charPtr1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, long Dwarf_Unsigned3, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_file_decl(Dwarf_P_Debug, char*, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4180</i>
	 */
	long dwarf_add_file_decl(Pointer Dwarf_P_Debug1, Pointer charPtr1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, long Dwarf_Unsigned3, PointerByReference Dwarf_ErrorPtr1);
										/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_line_entry(Dwarf_P_Debug, Dwarf_Unsigned, Dwarf_Addr, Dwarf_Unsigned, Dwarf_Signed, Dwarf_Bool, Dwarf_Bool, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4223</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_line_entry(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, long, long, long, long, int, int, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_line_entry(com.sun.jna.Pointer, long, long, long, long, int, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	long dwarf_add_line_entry(Pointer Dwarf_P_Debug1, long Dwarf_Unsigned1, long Dwarf_Addr1, long Dwarf_Unsigned2, long Dwarf_Signed1, int Dwarf_Bool1, int Dwarf_Bool2, Pointer Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_line_entry(Dwarf_P_Debug, Dwarf_Unsigned, Dwarf_Addr, Dwarf_Unsigned, Dwarf_Signed, Dwarf_Bool, Dwarf_Bool, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4223</i>
	 */
	long dwarf_add_line_entry(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, long Dwarf_Unsigned1, long Dwarf_Addr1, long Dwarf_Unsigned2, long Dwarf_Signed1, int Dwarf_Bool1, int Dwarf_Bool2, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_line_entry(Dwarf_P_Debug, Dwarf_Unsigned, Dwarf_Addr, Dwarf_Unsigned, Dwarf_Signed, Dwarf_Bool, Dwarf_Bool, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4223</i>
	 */
	long dwarf_add_line_entry(Pointer Dwarf_P_Debug1, long Dwarf_Unsigned1, long Dwarf_Addr1, long Dwarf_Unsigned2, long Dwarf_Signed1, int Dwarf_Bool1, int Dwarf_Bool2, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_lne_set_address(Dwarf_P_Debug, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4232</i><br>
	 * @deprecated use the safer methods {@link #dwarf_lne_set_address(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, long, long, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_lne_set_address(com.sun.jna.Pointer, long, long, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	long dwarf_lne_set_address(Pointer Dwarf_P_Debug1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, Pointer Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_lne_set_address(Dwarf_P_Debug, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4232</i>
	 */
	long dwarf_lne_set_address(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_lne_set_address(Dwarf_P_Debug, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4232</i>
	 */
	long dwarf_lne_set_address(Pointer Dwarf_P_Debug1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, PointerByReference Dwarf_ErrorPtr1);
																																																										/**
	 * Original signature : <code>Dwarf_P_Die dwarf_new_die(Dwarf_P_Debug, Dwarf_Tag, Dwarf_P_Die, Dwarf_P_Die, Dwarf_P_Die, Dwarf_P_Die, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4409</i><br>
	 * @deprecated use the safer methods {@link #dwarf_new_die(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, long, libdwarf.LibdwarfLibrary.Dwarf_P_Die, libdwarf.LibdwarfLibrary.Dwarf_P_Die, libdwarf.LibdwarfLibrary.Dwarf_P_Die, libdwarf.LibdwarfLibrary.Dwarf_P_Die, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_new_die(com.sun.jna.Pointer, long, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	LibdwarfLibrary.Dwarf_P_Die dwarf_new_die(Pointer Dwarf_P_Debug1, long Dwarf_Tag1, Pointer Dwarf_P_Die1, Pointer Dwarf_P_Die2, Pointer Dwarf_P_Die3, Pointer Dwarf_P_Die4, Pointer Dwarf_ErrorPtr1);
	/**
	 * Original signature : <code>Dwarf_P_Die dwarf_new_die(Dwarf_P_Debug, Dwarf_Tag, Dwarf_P_Die, Dwarf_P_Die, Dwarf_P_Die, Dwarf_P_Die, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4409</i>
	 */
	LibdwarfLibrary.Dwarf_P_Die dwarf_new_die(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, long Dwarf_Tag1, LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die1, LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die2, LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die3, LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die4, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * Original signature : <code>Dwarf_P_Die dwarf_new_die(Dwarf_P_Debug, Dwarf_Tag, Dwarf_P_Die, Dwarf_P_Die, Dwarf_P_Die, Dwarf_P_Die, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4409</i>
	 */
	LibdwarfLibrary.Dwarf_P_Die dwarf_new_die(Pointer Dwarf_P_Debug1, long Dwarf_Tag1, Pointer Dwarf_P_Die1, Pointer Dwarf_P_Die2, Pointer Dwarf_P_Die3, Pointer Dwarf_P_Die4, PointerByReference Dwarf_ErrorPtr1);
				/**
	 * Original form.<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_die_to_debug(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4425</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_die_to_debug(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, libdwarf.LibdwarfLibrary.Dwarf_P_Die, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_die_to_debug(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	long dwarf_add_die_to_debug(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, Pointer Dwarf_ErrorPtr1);
	/**
	 * Original form.<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_die_to_debug(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4425</i>
	 */
	long dwarf_add_die_to_debug(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * Original form.<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_die_to_debug(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4425</i>
	 */
	long dwarf_add_die_to_debug(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, PointerByReference Dwarf_ErrorPtr1);
																																			/**
	 * Operations to create location expressions.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Expr dwarf_new_expr(Dwarf_P_Debug, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4554</i><br>
	 * @deprecated use the safer methods {@link #dwarf_new_expr(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_new_expr(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	LibdwarfLibrary.Dwarf_P_Expr dwarf_new_expr(Pointer Dwarf_P_Debug1, Pointer Dwarf_ErrorPtr1);
	/**
	 * Operations to create location expressions.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Expr dwarf_new_expr(Dwarf_P_Debug, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4554</i>
	 */
	LibdwarfLibrary.Dwarf_P_Expr dwarf_new_expr(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * Operations to create location expressions.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Expr dwarf_new_expr(Dwarf_P_Debug, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4554</i>
	 */
	LibdwarfLibrary.Dwarf_P_Expr dwarf_new_expr(Pointer Dwarf_P_Debug1, PointerByReference Dwarf_ErrorPtr1);
							/**
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_expr_gen(Dwarf_P_Expr, Dwarf_Small, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4566</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_expr_gen(libdwarf.LibdwarfLibrary.Dwarf_P_Expr, byte, long, long, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_expr_gen(com.sun.jna.Pointer, byte, long, long, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	long dwarf_add_expr_gen(Pointer Dwarf_P_Expr1, byte Dwarf_Small1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, Pointer Dwarf_ErrorPtr1);
	/**
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_expr_gen(Dwarf_P_Expr, Dwarf_Small, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4566</i>
	 */
	long dwarf_add_expr_gen(LibdwarfLibrary.Dwarf_P_Expr Dwarf_P_Expr1, byte Dwarf_Small1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_expr_gen(Dwarf_P_Expr, Dwarf_Small, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4566</i>
	 */
	long dwarf_add_expr_gen(Pointer Dwarf_P_Expr1, byte Dwarf_Small1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, PointerByReference Dwarf_ErrorPtr1);
							/**
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_expr_addr_b(Dwarf_P_Expr, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4588</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_expr_addr_b(libdwarf.LibdwarfLibrary.Dwarf_P_Expr, long, long, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_expr_addr_b(com.sun.jna.Pointer, long, long, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	long dwarf_add_expr_addr_b(Pointer Dwarf_P_Expr1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, Pointer Dwarf_ErrorPtr1);
	/**
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_expr_addr_b(Dwarf_P_Expr, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4588</i>
	 */
	long dwarf_add_expr_addr_b(LibdwarfLibrary.Dwarf_P_Expr Dwarf_P_Expr1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_expr_addr_b(Dwarf_P_Expr, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4588</i>
	 */
	long dwarf_add_expr_addr_b(Pointer Dwarf_P_Expr1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, PointerByReference Dwarf_ErrorPtr1);
																																																																																																																																																																																																																																																																																																																				//public static final GlobalStruct<libdwarf.Dwarf_Cmdline_Options.ByValue > dwarf_cmdline_options = new GlobalStruct<libdwarf.Dwarf_Cmdline_Options.ByValue >(LibdwarfLibrary.JNA_NATIVE_LIB, libdwarf.Dwarf_Cmdline_Options.ByValue.class, "dwarf_cmdline_options");
	public static class dwarf_elf_handle extends PointerType {
		public dwarf_elf_handle(Pointer address) {
			super(address);
		}
		public dwarf_elf_handle() {
			super();
		}
	};
	public static class Dwarf_Dsc_Head extends PointerType {
		public Dwarf_Dsc_Head(Pointer address) {
			super(address);
		}
		public Dwarf_Dsc_Head() {
			super();
		}
	};
	public static class Dwarf_Attribute extends PointerType {
		public Dwarf_Attribute(Pointer address) {
			super(address);
		}
		public Dwarf_Attribute() {
			super();
		}
	};
	public static class Dwarf_Die extends PointerType {
		public Dwarf_Die(Pointer address) {
			super(address);
		}
		public Dwarf_Die() {
			super();
		}
	};
	public static class Dwarf_Cie extends PointerType {
		public Dwarf_Cie(Pointer address) {
			super(address);
		}
		public Dwarf_Cie() {
			super();
		}
	};
	public static class Dwarf_Line_Context extends PointerType {
		public Dwarf_Line_Context(Pointer address) {
			super(address);
		}
		public Dwarf_Line_Context() {
			super();
		}
	};
	public static class Dwarf_P_Debug extends PointerType {
		public Dwarf_P_Debug(Pointer address) {
			super(address);
		}
		public Dwarf_P_Debug() {
			super();
		}
	};
	public static class Dwarf_Gnu_Index_Head extends PointerType {
		public Dwarf_Gnu_Index_Head(Pointer address) {
			super(address);
		}
		public Dwarf_Gnu_Index_Head() {
			super();
		}
	};
	public static class Dwarf_P_Expr extends PointerType {
		public Dwarf_P_Expr(Pointer address) {
			super(address);
		}
		public Dwarf_P_Expr() {
			super();
		}
	};
	public static class Dwarf_Func extends PointerType {
		public Dwarf_Func(Pointer address) {
			super(address);
		}
		public Dwarf_Func() {
			super();
		}
	};
	public static class Dwarf_Macro_Context extends PointerType {
		public Dwarf_Macro_Context(Pointer address) {
			super(address);
		}
		public Dwarf_Macro_Context() {
			super();
		}
	};
	public static class Dwarf_P_Fde extends PointerType {
		public Dwarf_P_Fde(Pointer address) {
			super(address);
		}
		public Dwarf_P_Fde() {
			super();
		}
	};
	public static class Dwarf_Error extends PointerType {
		public Dwarf_Error(Pointer address) {
			super(address);
		}
		public Dwarf_Error() {
			super();
		}
	};
	public static class Dwarf_Loc_Head_c extends PointerType {
		public Dwarf_Loc_Head_c(Pointer address) {
			super(address);
		}
		public Dwarf_Loc_Head_c() {
			super();
		}
	};
	public static class Dwarf_Dnames_Head extends PointerType {
		public Dwarf_Dnames_Head(Pointer address) {
			super(address);
		}
		public Dwarf_Dnames_Head() {
			super();
		}
	};
	public static class Dwarf_Global extends PointerType {
		public Dwarf_Global(Pointer address) {
			super(address);
		}
		public Dwarf_Global() {
			super();
		}
	};
	public static class Dwarf_Var extends PointerType {
		public Dwarf_Var(Pointer address) {
			super(address);
		}
		public Dwarf_Var() {
			super();
		}
	};
	public static class Dwarf_Line extends PointerType {
		public Dwarf_Line(Pointer address) {
			super(address);
		}
		public Dwarf_Line() {
			super();
		}
	};
	public static class Dwarf_Str_Offsets_Table extends PointerType {
		public Dwarf_Str_Offsets_Table(Pointer address) {
			super(address);
		}
		public Dwarf_Str_Offsets_Table() {
			super();
		}
	};
	public static class Dwarf_Rnglists_Head extends PointerType {
		public Dwarf_Rnglists_Head(Pointer address) {
			super(address);
		}
		public Dwarf_Rnglists_Head() {
			super();
		}
	};
	public static class Dwarf_Weak extends PointerType {
		public Dwarf_Weak(Pointer address) {
			super(address);
		}
		public Dwarf_Weak() {
			super();
		}
	};
	public static class Dwarf_Debug extends PointerType {
		public Dwarf_Debug(Pointer address) {
			super(address);
		}
		public Dwarf_Debug() {
			super();
		}
	};
	public static class Dwarf_Arange extends PointerType {
		public Dwarf_Arange(Pointer address) {
			super(address);
		}
		public Dwarf_Arange() {
			super();
		}
	};
	public static class Dwarf_Type extends PointerType {
		public Dwarf_Type(Pointer address) {
			super(address);
		}
		public Dwarf_Type() {
			super();
		}
	};
	public static class Dwarf_Abbrev extends PointerType {
		public Dwarf_Abbrev(Pointer address) {
			super(address);
		}
		public Dwarf_Abbrev() {
			super();
		}
	};
	public static class Dwarf_Fde extends PointerType {
		public Dwarf_Fde(Pointer address) {
			super(address);
		}
		public Dwarf_Fde() {
			super();
		}
	};
	public static class Dwarf_Locdesc_c extends PointerType {
		public Dwarf_Locdesc_c(Pointer address) {
			super(address);
		}
		public Dwarf_Locdesc_c() {
			super();
		}
	};
	public static class Dwarf_Xu_Index_Header extends PointerType {
		public Dwarf_Xu_Index_Header(Pointer address) {
			super(address);
		}
		public Dwarf_Xu_Index_Header() {
			super();
		}
	};
	public static class Dwarf_Gdbindex extends PointerType {
		public Dwarf_Gdbindex(Pointer address) {
			super(address);
		}
		public Dwarf_Gdbindex() {
			super();
		}
	};
	public static class Dwarf_P_Die extends PointerType {
		public Dwarf_P_Die(Pointer address) {
			super(address);
		}
		public Dwarf_P_Die() {
			super();
		}
	};
	public static class Dwarf_P_Attribute extends PointerType {
		public Dwarf_P_Attribute(Pointer address) {
			super(address);
		}
		public Dwarf_P_Attribute() {
			super();
		}
	};
}
