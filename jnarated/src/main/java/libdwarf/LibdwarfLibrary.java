package libdwarf;
import com.ochafik.lang.jnaerator.runtime.LibraryExtractor;
import com.ochafik.lang.jnaerator.runtime.MangledFunctionMapper;
import com.ochafik.lang.jnaerator.runtime.globals.GlobalStruct;
import com.sun.jna.Callback;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.LongByReference;
import com.sun.jna.ptr.PointerByReference;
import com.sun.jna.ptr.ShortByReference;
import java.nio.ByteBuffer;
import java.nio.IntBuffer;
import java.nio.LongBuffer;
import java.nio.ShortBuffer;
/**
 * JNA Wrapper for library <b>libdwarf</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface LibdwarfLibrary extends Library {
	public static final String JNA_LIBRARY_NAME = LibraryExtractor.getLibraryPath("libdwarf", true, LibdwarfLibrary.class);
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(LibdwarfLibrary.JNA_LIBRARY_NAME, MangledFunctionMapper.DEFAULT_OPTIONS);
	public static final LibdwarfLibrary INSTANCE = (LibdwarfLibrary)Native.loadLibrary(LibdwarfLibrary.JNA_LIBRARY_NAME, LibdwarfLibrary.class, MangledFunctionMapper.DEFAULT_OPTIONS);
	/**
	 * First appears in DWARF3, and only ranges entries exist.<br>
	 * The dwr_addr1/addr2 data is either an offset (DW_RANGES_ENTRY)<br>
	 * or an address (dwr_addr2 in DW_RANGES_ADDRESS_SELECTION) or<br>
	 * both are zero (DW_RANGES_END).<br>
	 * For DWARF5 each table starts with a header<br>
	 * followed by range list entries defined<br>
	 * as here.<br>
	 * <i>native declaration : line 234</i><br>
	 * enum values
	 */
	public static interface Dwarf_Ranges_Entry_Type {
		/** <i>native declaration : line 234</i> */
		public static final int DW_RANGES_ENTRY = 0;
		/** <i>native declaration : line 235</i> */
		public static final int DW_RANGES_ADDRESS_SELECTION = 1;
		/** <i>native declaration : line 236</i> */
		public static final int DW_RANGES_END = 2;
	};
	/**
	 * For DW_DLC_SYMBOLIC_RELOCATIONS output to caller<br>
	 * v2, adding drd_length: some relocations are 4 and<br>
	 * some 8 bytes (pointers are 8, section offsets 4) in<br>
	 * some dwarf environments. (MIPS relocations are all one<br>
	 * size in any given ABI.) Changing drd_type to an unsigned char<br>
	 * to keep struct size down.<br>
	 * <i>native declaration : line 509</i><br>
	 * enum values
	 */
	public static interface Dwarf_Rel_Type {
		/**
		 * Should not get to caller<br>
		 * <i>native declaration : line 510</i>
		 */
		public static final int dwarf_drt_none = 0;
		/**
		 * Simple normal relocation.<br>
		 * <i>native declaration : line 511</i>
		 */
		public static final int dwarf_drt_data_reloc = 1;
		/**
		 * Special reloc, exceptions.<br>
		 * <i>native declaration : line 512</i>
		 */
		public static final int dwarf_drt_segment_rel = 2;
		/**
		 * dwarf_drt_first_of_length_pair  and drt_second<br>
		 * are for for the  .word end - begin case.<br>
		 * <i>native declaration : line 515</i>
		 */
		public static final int dwarf_drt_first_of_length_pair = 3;
		/** <i>native declaration : line 516</i> */
		public static final int dwarf_drt_second_of_length_pair = 4;
	};
	/** enum values */
	public static interface Dwarf_Endianness {
		/** <i>native declaration : line 655</i> */
		public static final int DW_OBJECT_MSB = 0;
		/** <i>native declaration : line 656</i> */
		public static final int DW_OBJECT_LSB = 1;
	};
	/**
	 * The dwarf specification separates FORMs into<br>
	 * different classes.  To do the seperation properly<br>
	 * requires 4 pieces of data as of DWARF4 (thus the<br>
	 * function arguments listed here).<br>
	 * The DWARF4 specification class definition suffices to<br>
	 * describe all DWARF versions.<br>
	 * See section 7.5.4, Attribute Encodings.<br>
	 * A return of DW_FORM_CLASS_UNKNOWN means we could not properly figure<br>
	 * out what form-class it is.<br>
	 * DW_FORM_CLASS_FRAMEPTR is MIPS/IRIX only, and refers<br>
	 * to the DW_AT_MIPS_fde attribute (a reference to the<br>
	 * .debug_frame section).<br>
	 * DWARF5:<br>
	 * DW_FORM_CLASS_LOCLISTSPTR  is like DW_FORM_CLASS_LOCLIST<br>
	 * except that LOCLISTSPTR is aways a section offset,<br>
	 * never an index, and LOCLISTSPTR is only referenced<br>
	 * by DW_AT_loclists_base.<br>
	 * Note DW_FORM_CLASS_LOCLISTSPTR spelling to distinguish<br>
	 * from DW_FORM_CLASS_LOCLISTPTR.<br>
	 * DWARF5:<br>
	 * DW_FORM_CLASS_RNGLISTSPTR  is like DW_FORM_CLASS_RNGLIST<br>
	 * except that RNGLISTSPTR is aways a section offset,<br>
	 * never an index. DW_FORM_CLASS_RNGLISTSPTR is only<br>
	 * referenced by DW_AT_rnglists_base.<br>
	 * <i>native declaration : line 1498</i><br>
	 * enum values
	 */
	public static interface Dwarf_Form_Class {
		/** <i>native declaration : line 1499</i> */
		public static final int DW_FORM_CLASS_UNKNOWN = 0;
		/** <i>native declaration : line 1499</i> */
		public static final int DW_FORM_CLASS_ADDRESS = 1;
		/** <i>native declaration : line 1500</i> */
		public static final int DW_FORM_CLASS_BLOCK = 2;
		/** <i>native declaration : line 1500</i> */
		public static final int DW_FORM_CLASS_CONSTANT = 3;
		/** <i>native declaration : line 1501</i> */
		public static final int DW_FORM_CLASS_EXPRLOC = 4;
		/** <i>native declaration : line 1501</i> */
		public static final int DW_FORM_CLASS_FLAG = 5;
		/** <i>native declaration : line 1502</i> */
		public static final int DW_FORM_CLASS_LINEPTR = 6;
		/**
		 * DWARF2,3,4 only<br>
		 * <i>native declaration : line 1503</i>
		 */
		public static final int DW_FORM_CLASS_LOCLISTPTR = 7;
		/**
		 * DWARF2,3,4 only<br>
		 * <i>native declaration : line 1504</i>
		 */
		public static final int DW_FORM_CLASS_MACPTR = 8;
		/**
		 * DWARF2,3,4 only<br>
		 * <i>native declaration : line 1505</i>
		 */
		public static final int DW_FORM_CLASS_RANGELISTPTR = 9;
		/** <i>native declaration : line 1506</i> */
		public static final int DW_FORM_CLASS_REFERENCE = 10;
		/** <i>native declaration : line 1507</i> */
		public static final int DW_FORM_CLASS_STRING = 11;
		/**
		 * MIPS/IRIX DWARF2 only<br>
		 * <i>native declaration : line 1508</i>
		 */
		public static final int DW_FORM_CLASS_FRAMEPTR = 12;
		/**
		 * DWARF5<br>
		 * <i>native declaration : line 1509</i>
		 */
		public static final int DW_FORM_CLASS_MACROPTR = 13;
		/**
		 * DWARF5<br>
		 * <i>native declaration : line 1510</i>
		 */
		public static final int DW_FORM_CLASS_ADDRPTR = 14;
		/**
		 * DWARF5<br>
		 * <i>native declaration : line 1511</i>
		 */
		public static final int DW_FORM_CLASS_LOCLIST = 15;
		/**
		 * DWARF5<br>
		 * <i>native declaration : line 1512</i>
		 */
		public static final int DW_FORM_CLASS_LOCLISTSPTR = 16;
		/**
		 * DWARF5<br>
		 * <i>native declaration : line 1513</i>
		 */
		public static final int DW_FORM_CLASS_RNGLIST = 17;
		/**
		 * DWARF5<br>
		 * <i>native declaration : line 1514</i>
		 */
		public static final int DW_FORM_CLASS_RNGLISTSPTR = 18;
		/**
		 * DWARF5<br>
		 * <i>native declaration : line 1515</i>
		 */
		public static final int DW_FORM_CLASS_STROFFSETSPTR = 19;
	};
	public static final int DW_DLA_FRAME_OP = (int)0x13;
	public static final int DW_DLS_NOSLIDE = (int)0;
	public static final int DW_DLE_UNIT_TYPE_NOT_HANDLED = (int)386;
	public static final int DW_DLE_PARENT_EXISTS = (int)80;
	public static final int DW_DLE_DWP_MISSING_DWO_ID = (int)292;
	public static final int DW_DLE_COMPRESSED_EMPTY_SECTION = (int)347;
	public static final int DW_DLE_FISSION_INDEX_WRONG = (int)282;
	public static final int DW_DLE_CU_UT_TYPE_ERROR = (int)285;
	public static final int DW_DLE_ELF_SECTION_ERROR = (int)446;
	public static final int DW_DLE_AUGMENTATION_STRING_OFF_END = (int)362;
	public static final int DW_DLE_FDE_ALLOC = (int)73;
	public static final int DW_GROUPNUMBER_DWO = (int)2;
	public static final int DW_DLE_BAD_STRING_FORM = (int)350;
	public static final int DW_DLE_CIE_INSTR_EXEC_ERROR = (int)98;
	public static final int DW_DLE_DEBUG_FRAME_LENGTH_BAD = (int)89;
	public static final int DW_DLE_DWARF_INIT_DBG_NULL = (int)465;
	public static final int DW_DLE_ELF_FLAGS_NOT_AVAILABLE = (int)328;
	public static final int DW_DLE_ELF_BEGIN_ERROR = (int)27;
	public static final int DW_DLE_GROUP_COUNT_ERROR = (int)389;
	public static final int DW_DLE_STRING_OFFSET_BAD = (int)53;
	public static final int DW_DLE_GLOBAL_CONTEXT_NULL = (int)126;
	public static final int DW_DLE_DF_FRAME_DECODING_ERROR = (int)193;
	public static final int DW_DLE_DEBUG_VARNAMES_VERSION_ERROR = (int)166;
	public static final int DW_DLE_LINE_PROLOG_LENGTH_BAD = (int)55;
	public static final int DW_DLE_STRING_HASHTAB_IDENTITY_ERROR = (int)385;
	public static final int DW_DLE_UNKNOWN_FORM = (int)321;
	public static final int DW_DLE_DEBUG_FUNCNAMES_NULL = (int)153;
	public static final int DW_DLE_VERSION_STAMP_ERROR = (int)48;
	public static final int DW_DLE_CIE_RET_ADDR_REG_ERROR = (int)91;
	public static final int DW_DLE_AT_FIXUP_NULL = (int)242;
	public static final int DW_DLE_ABBREV_ALLOC = (int)86;
	public static final int DW_DLE_FSTAT_ERROR = (int)24;
	public static final int DW_DLE_DEBUG_LINE_DUPLICATE = (int)37;
	public static final int DW_DLE_MIXING_SPLIT_DWARF_VERSIONS = (int)448;
	public static final int DW_DLE_FDE_PTR_NULL = (int)100;
	public static final int DW_DLE_NO_FILE_NAME = (int)140;
	public static final int DW_DLE_STR_OFFSETS_NO_MAGIC = (int)404;
	public static final int DW_DLE_FRAME_AUGMENTATION_UNKNOWN = (int)195;
	public static final int DW_DLE_XU_HASH_ROW_ERROR = (int)271;
	public static final int DW_DLE_ELF_SECTION_GROUP_ERROR = (int)441;
	public static final int DW_DLE_DEBUG_LINE_LENGTH_BAD = (int)54;
	public static final int DW_DLA_ATTR = (int)0x0a;
	public static final int DW_DLE_DEBUG_WEAKNAMES_LENGTH_BAD = (int)173;
	public static final int DW_DLE_VMM = (int)1;
	public static final int DW_DLE_SEEK_ERROR = (int)418;
	public static final int DW_GROUPNUMBER_BASE = (int)1;
	public static final int DW_DLC_ELF_OFFSET_SIZE_64 = (int)0x00020000;
	public static final int DW_DLE_DEBUG_FORM_HANDLING_INCOMPLETE = (int)251;
	public static final int DW_DLE_ID = (int)6;
	public static final int DW_DLE_NEXT_DIE_PAST_END = (int)252;
	public static final int DW_DLE_FNR = (int)13;
	public static final int DW_DLE_INFO_HEADER_ERROR = (int)334;
	public static final int DW_DLE_FORM_STRING_BAD_STRING = (int)361;
	public static final int DW_DLE_IA = (int)9;
	public static final int DW_DLE_FNO = (int)12;
	public static final int DW_DLE_DEBUG_VARNAMES_DUPLICATE = (int)164;
	public static final int DW_DLE_ZLIB_UNCOMPRESS_ERROR = (int)368;
	public static final int DW_DLE_ELF_RELOC_SECTION_ERROR = (int)466;
	public static final int DW_DLE_ZLIB_DATA_ERROR = (int)317;
	public static final int DW_DLE_FPGM_ALLOC = (int)67;
	public static final int DW_DLE_DEBUGINFO_ERROR = (int)84;
	public static final int DW_DLA_LINEBUF = (int)0x10;
	public static final int DW_DLE_DWARF_ABBREV_NULL = (int)110;
	public static final int DW_DLE_EOS = (int)20;
	public static final int DW_DLE_DEBUG_TYPES_ONLY_DWARF4 = (int)238;
	public static final int DW_DLE_MACRO_OFFSET_BAD = (int)318;
	public static final int DW_DLE_SIGNATURE_SECTION_NUMBER_WRONG = (int)287;
	public static final int DW_DLE_FISSION_SECNUM_ERR = (int)295;
	public static final int DW_DLE_XU_TYPE_ARG_ERROR = (int)268;
	public static final int DW_DLE_DEBUGSTR_ERROR = (int)351;
	public static final int DW_DLE_PE_OFFSET_BAD = (int)427;
	public static final int DW_DLE_DEBUG_FUNCNAMES_DUPLICATE = (int)152;
	public static final int DW_DLA_LOC_BLOCK = (int)0x16;
	public static final int DW_DLE_ELF_VERSION_BAD = (int)422;
	public static final int DW_DLE_XU_NAME_COL_ERROR = (int)270;
	public static final int DW_DLE_DEBUG_RANGES_OFFSET_BAD = (int)206;
	public static final int DW_DLE_ARANGE_NULL = (int)139;
	public static final int DW_FTYPE_CUSTOM_ELF = (int)5;
	public static final int DW_DLE_ATTR_OUTSIDE_SECTION = (int)281;
	public static final int DW_DLE_DEBUG_FRAME_NULL = (int)108;
	public static final int DW_DLE_FILE_OFFSET_BAD = (int)417;
	public static final int DW_DLE_RNGLISTS_ERROR = (int)468;
	public static final int DW_DLE_MACINFO_STRING_NULL = (int)177;
	public static final int DW_DLA_MACRO_CONTEXT = (int)0x3c;
	public static final int DW_DLE_REGNO_OVFL = (int)74;
	public static final int DW_DLE_CIE_ALLOC = (int)72;
	public static final int DW_DLE_NO_TIED_ADDR_AVAILABLE = (int)301;
	public static final int DW_DLE_CIE_INSTR_PTR_ERROR = (int)339;
	public static final int DW_DLE_DUP_ATTR_ON_DIE = (int)409;
	public static final int DW_DLE_NO_ELF64_SUPPORT = (int)219;
	public static final int DW_DLE_CIE_OFFS_ALLOC = (int)75;
	public static final int DW_DLE_DUPLICATE_TU_INDEX = (int)267;
	public static final int DW_DLE_SIG_TYPE_WRONG_STRING = (int)289;
	public static final int DW_DLE_DEBUG_STR_DUPLICATE = (int)45;
	public static final int DW_DLE_DBG_NULL = (int)81;
	public static final int DW_DLE_SECTION_DUPLICATION = (int)247;
	public static final int DW_DLE_ADDR_ALLOC = (int)130;
	public static final int DW_DLE_ABBREV_OFF_END = (int)360;
	public static final int DW_LKIND_unknown = (int)99;
	public static final int DW_DLE_NE = (int)0;
	public static final int DW_DLE_DIE_NO_CU_CONTEXT = (int)104;
	public static final int DW_DLE_BAD_MACRO_HEADER_POINTER = (int)322;
	public static final int DW_DLE_FILE_UNAVAILABLE = (int)411;
	public static final int DW_DLE_STR_OFFSETS_EXTRA_BYTES = (int)408;
	public static final int DW_DLE_DEBUG_FUNCNAMES_LENGTH_BAD = (int)155;
	public static final int DW_DLE_DEBUG_NAMES_ENTRYPOOL_OFFSET = (int)380;
	public static final int DW_DLE_LINE_TABLE_LINENO_ERROR = (int)430;
	public static final int DW_DLE_SECTION_NAME_BIG = (int)410;
	public static final int DW_DLE_HEX_STRING_ERROR = (int)460;
	public static final int DWARF_DRD_BUFFER_VERSION = (int)2;
	public static final int DW_DLE_DEBUG_NAMES_ABBREV_OVERFLOW = (int)376;
	public static final int DW_DLA_STR_OFFSETS = (int)0x40;
	public static final int DW_DLE_DISCR_ARRAY_ERROR = (int)353;
	public static final int DW_DLA_ARANGE = (int)0x11;
	public static final int DW_DLE_RET_OP_LIST_NULL = (int)101;
	public static final int DW_DLE_DEBUG_LINE_NULL = (int)38;
	public static final int DW_DLE_DEBUG_INFO_NULL = (int)32;
	public static final int DW_DLE_DEBUG_WEAKNAMES_VERSION_ERROR = (int)172;
	public static final int DW_DLV_NO_ENTRY = (int)-1;
	public static final int DW_DLE_MACRO_OPCODE_BAD = (int)319;
	public static final int DW_DLE_LEB_IMPROPER = (int)329;
	public static final int DW_DLE_DEBUG_PUBTYPES_VERSION_ERROR = (int)198;
	public static final int DW_DLE_DEBUG_STR_OFFSET_BAD = (int)121;
	public static final int DW_DLE_ABBREV_OFFSET_ERROR = (int)49;
	public static final int DW_DLE_VAR_CONTEXT_NULL = (int)169;
	public static final int DW_DLE_DECIMAL_STRING_ERROR = (int)461;
	public static final int DW_DLE_NESTED_FORM_INDIRECT_ERROR = (int)255;
	public static final int DW_DLE_DEBUG_MACRO_MAX_BAD = (int)183;
	public static final int DW_DLE_DUPLICATE_GDB_INDEX = (int)260;
	public static final int DW_DLE_ELF_STRING_SECTION_ERROR = (int)447;
	public static final int DW_DLE_NDS = (int)4;
	public static final int DW_DLE_LINE_OFFSET_BAD = (int)120;
	public static final int DW_DLE_DEBUG_PUBTYPES_DUPLICATE = (int)199;
	public static final int DW_DLE_FRAME_REGISTER_COUNT_MISMATCH = (int)202;
	public static final int DW_DLE_DEBUG_STR_OFFSETS_DUPLICATE = (int)246;
	public static final int DW_DLE_LLE_CODE_UNKNOWN = (int)310;
	public static final int DW_DLE_NOLL = (int)18;
	public static final int DW_DLE_LINK_LOOP = (int)203;
	public static final int DW_DLE_GROUP_MAP_DUPLICATE = (int)388;
	public static final int DW_DLE_GNU_PUBTYPES_ERROR = (int)473;
	public static final int DW_DLE_ELF_GETEHDR_ERROR = (int)28;
	public static final int DW_DLE_DEBUG_FRAME_LENGTH_NOT_MULTIPLE = (int)227;
	public static final int DW_DLE_DEBUG_NAMES_HEADER_ERROR = (int)372;
	public static final int DW_DLE_DEBUG_NAMES_AUG_STRING_ERROR = (int)373;
	public static final int DW_DLE_LNCT_FORM_CODE_NOT_HANDLED = (int)383;
	public static final int DW_DLE_NO_SUCH_SIGNATURE_FOUND = (int)286;
	public static final int DW_DLA_LIST = (int)0x0f;
	public static final int DW_DLE_SYMTAB_SECTION_LENGTH_ODD = (int)231;
	public static final int DW_DLE_XU_IMPOSSIBLE_ERROR = (int)269;
	public static final int DW_DLE_MAF = (int)8;
	public static final int DW_DLE_INTERNAL_NULL_POINTER = (int)436;
	public static final String DW_PR_DUx = (String)"llx";
	public static final int DW_DLE_SEEK_OFF_END = (int)444;
	public static final String DW_PR_DUu = (String)"llu";
	public static final int DW_DLE_LINE_NUMBER_HEADER_ERROR = (int)235;
	public static final int DW_DLE_NEXT_DIE_PTR_NULL = (int)106;
	public static final int DW_DLE_DEBUG_NAMES_NULL_POINTER = (int)378;
	public static final int DW_DLE_CU_ADDRESS_SIZE_BAD = (int)142;
	public static final int DW_DLE_GDB_INDEX_CUVEC_ERROR = (int)265;
	public static final int DW_DLE_DEBUG_SUP_STRING_ERROR = (int)476;
	public static final int DW_DLE_MAP = (int)2;
	public static final int DW_LKIND_expression = (int)0;
	public static final int DW_DLE_SEGMENT_SIZE_BAD = (int)135;
	public static final int DW_DLE_DEBUG_TYPENAMES_DUPLICATE = (int)158;
	public static final int DW_DLE_POINTER_SECTION_UNKNOWN = (int)344;
	public static final int DW_DLE_CORRUPT_GNU_DEBUGID_STRING = (int)459;
	public static final int DW_DLE_MACRO_OP_UNHANDLED = (int)324;
	public static final int DW_DLE_ELF_STRPTR_ERROR = (int)30;
	public static final int DW_DLE_NO_STREAM_RELOC_SUPPORT = (int)433;
	public static final int DW_DLE_DBG_NO_CU_CONTEXT = (int)103;
	public static final int DW_DLE_EXPR_LENGTH_BAD = (int)146;
	public static final int DW_DLA_BLOCK = (int)0x06;
	public static final int DW_DLE_FILE_TOO_SMALL = (int)423;
	public static final int DW_DLE_DEBUG_ABBREV_DUPLICATE = (int)33;
	public static final int DW_DLE_ATTR_DBG_NULL = (int)117;
	public static final int DW_DLE_DEBUG_TYPEOFFSET_BAD = (int)239;
	public static final int DW_DLE_BAD_LINE_TABLE_OPERATION = (int)304;
	public static final int DW_DLE_FRAME_INSTR_EXEC_ERROR = (int)99;
	public static final int DW_DLE_FILE_ENTRY_ALLOC = (int)65;
	public static final int DW_DLC_RDWR = (int)2;
	public static final int DW_DLE_MDE = (int)10;
	public static final int DW_DLE_ELF_CLASS_BAD = (int)420;
	public static final int DW_DLE_FWA = (int)14;
	public static final int DW_DLE_MACRO_STRING_BAD = (int)366;
	public static final int DW_DLE_ATTR_NULL = (int)111;
	public static final int DW_DLE_DIRECTORY_FORMAT_COUNT_VS_DIRECTORIES_MISMATCH = (int)346;
	public static final int DW_DLC_OFFSET64 = (int)0x10000000;
	public static final int DW_DLE_NO_TIED_FILE_AVAILABLE = (int)308;
	public static final int DW_DLE_FORM_CORRUPT = (int)450;
	public static final int DW_DLE_STR_OFFSETS_ARRAY_SIZE = (int)405;
	public static final int DW_DLA_RNGLISTS_HEAD = (int)0x36;
	public static final int DW_DLE_MACINFO_STRING_BAD = (int)367;
	public static final int DW_DLE_DEBUG_MACRO_MALLOC_SPACE = (int)185;
	public static final int DW_DLE_FUNC_CONTEXT_NULL = (int)157;
	public static final int DW_DLE_MAKE_CU_CONTEXT_FAIL = (int)132;
	public static final int DW_DLA_STRING = (int)0x01;
	public static final int DW_DLE_ELF_GETSHDR_ERROR = (int)29;
	public static final int DW_DLE_HIGHPC_WRONG_FORM = (int)397;
	public static final int DW_DLE_LAST = (int)478;
	public static final int DW_DLE_RELOC_SECTION_SYMBOL_INDEX_BAD = (int)232;
	public static final int DW_ENDIAN_LITTLE = (int)2;
	public static final int DW_DLE_NO_COMP_DIR = (int)141;
	public static final int DW_DLE_RELOC_SECTION_MALLOC_FAIL = (int)218;
	public static final int DW_DLE_NULL_ARGS_DWARF_ADD_PATH = (int)464;
	public static final int DW_DLE_MACINFO_MALLOC_FAIL = (int)180;
	public static final int DW_DLE_LNCT_MD5_WRONG_FORM = (int)400;
	public static final String DW_PR_DSx = (String)"llx";
	public static final int DW_DLE_ATTR_FORM_NOT_STR_INDEX = (int)259;
	public static final String DW_PR_DSd = (String)"lld";
	public static final int DW_DLE_DEBUG_SYMTAB_ERR = (int)209;
	public static final int DW_DLE_NO_CIE_FOR_FDE = (int)150;
	public static final int DW_DLE_DEBUGLINE_ERROR = (int)82;
	public static final int DW_DLE_FISSION_ADDITION_ERROR = (int)341;
	public static final int DW_DLA_TYPENAME = (int)0x19;
	public static final int DW_DLE_DIE_ABBREV_BAD = (int)113;
	public static final int DW_DLE_DEBUG_ADDR_DUPLICATE = (int)249;
	public static final int DW_DLE_DEBUG_PUBNAMES_DUPLICATE = (int)43;
	public static final int DW_DLA_CIE = (int)0x14;
	public static final int DW_DLE_DEFINE_FILE_STRING_BAD = (int)365;
	public static final int DW_DLE_LOWPC_WRONG_CLASS = (int)396;
	public static final int DW_DLE_GLOBAL_NULL = (int)125;
	public static final int DW_DLE_DF_NEW_LOC_LESS_OLD_LOC = (int)190;
	public static final int DW_DLE_ELF_STRING_SECTION_MISSING = (int)443;
	public static final int DW_DLE_CU_UT_TYPE_VALUE = (int)454;
	public static final int DW_DLE_LEE = (int)3;
	public static final int DW_DLE_DIE_ALLOC = (int)79;
	public static final int DW_DLA_DNAMES_HEAD = (int)0x3f;
	public static final int DW_DLS_FORWARD = (int)1;
	public static final int DW_DLV_OK = (int)0;
	public static final int DW_DLE_INCDIR_ALLOC = (int)68;
	public static final int DW_DLE_WEAK_CONTEXT_NULL = (int)175;
	public static final int DW_DLE_LINE_CONTEXT_INDEX_WRONG = (int)306;
	public static final int DW_DLE_BAD_MACRO_INDEX = (int)323;
	public static final int DW_DLE_READ_LITTLEENDIAN_ERROR = (int)331;
	public static final int DW_DLA_GNU_INDEX_HEAD = (int)0x35;
	public static final int DW_ENDIAN_UNKNOWN = (int)0;
	public static final int DW_DLA_LOCDESC = (int)0x03;
	public static final String DW_CIE_AUGMENTER_STRING_V0 = (String)"z";
	public static final int DW_DLE_GROUPNUMBER_ERROR = (int)370;
	public static final int DW_DLE_SIBLING_LIST_IMPROPER = (int)355;
	public static final int DW_DLE_WRONG_TAG = (int)78;
	public static final int DW_DLS_BACKWARD = (int)-1;
	public static final int DW_DLE_DEBUG_MACRO_DUPLICATE = (int)296;
	public static final int DW_DLE_PRO_INIT_EXTRAS_ERR = (int)463;
	public static final int DW_DLE_DEBUG_ARANGES_DUPLICATE = (int)35;
	public static final int DW_DLE_IMPROPER_DWO_ID = (int)369;
	public static final int DW_DLE_NO_SIGNATURE_TO_LOOKUP = (int)300;
	public static final int DW_DLA_DIE = (int)0x08;
	public static final int DW_DLE_DEBUG_MACRO_LENGTH_BAD = (int)182;
	public static final int DW_LKIND_loclist = (int)1;
	public static final int DW_DLE_BAD_TYPE_SIZE = (int)425;
	public static final int DW_DLE_STRING_ALLOC = (int)69;
	public static final int DW_DLE_MISSING_REQUIRED_CU_OFFSET_HASH = (int)291;
	public static final int DW_DLE_INCL_DIR_NUM_BAD = (int)60;
	public static final int DW_DLE_DUPLICATE_GNU_DEBUG_PUBTYPES = (int)475;
	public static final int DW_DLC_ELF_OFFSET_SIZE_32 = (int)0x00400000;
	public static final int DW_DLE_DEBUG_RANGES_MISSING_END = (int)207;
	public static final int DW_DLE_BAD_REF_SIG8_FORM = (int)223;
	public static final int DW_DLE_ARANGE_OFFSET_BAD = (int)134;
	public static final int DW_DLE_DEBUG_WEAKNAMES_NULL = (int)171;
	public static final String DW_PR_XZEROS = (String)"08";
	public static final int DW_DLE_LINE_HEADER_LENGTH_BOTCH = (int)384;
	public static final int DW_DLE_INPUT_ATTR_BAD = (int)143;
	public static final int DW_DLE_BAD_ABINAME = (int)244;
	public static final int DW_DLE_DEBUG_NAMES_PAD_NON_ZERO = (int)374;
	public static final int DW_DLE_NOT_REF_FORM = (int)226;
	public static final int DW_DLE_VAR_NULL = (int)168;
	public static final int DW_DLE_GROUP_MAP_ALLOC = (int)387;
	public static final int DW_DLE_DEBUG_FUNCNAMES_VERSION_ERROR = (int)154;
	public static final int DW_DLE_DEBUG_PUBNAMES_NULL = (int)44;
	public static final int DW_DLE_DEBUG_TYPENAMES_NULL = (int)159;
	public static final int DW_DLE_OFFSET_BAD = (int)131;
	public static final int DW_DLE_DEBUG_STRTAB_ERR = (int)210;
	public static final int DW_FRAME_CFA_COL3 = (int)1436;
	public static final int DW_DLE_AT_FIXUP_DUP = (int)243;
	public static final int DW_DLC_OFFSET32 = (int)0x00010000;
	public static final int DW_DLE_DEBUG_TYPES_NULL = (int)236;
	public static final int DW_DLE_ATTR_EXPRLOC_FORM_BAD = (int)224;
	public static final int DW_DLE_REL_ALLOC = (int)133;
	public static final int DW_DLE_RELOC_SECTION_MISSING_INDEX = (int)215;
	public static final int DW_DLE_ERRONEOUS_XU_INDEX_SECTION = (int)345;
	public static final int DW_DLE_RELOC_SECTION_RELOC_TARGET_SIZE_UNKNOWN = (int)233;
	public static final int DW_DLE_RELOCS_ERROR = (int)280;
	public static final int DW_DLE_DUPLICATE_GNU_DEBUG_PUBNAMES = (int)474;
	public static final int DW_DLE_NLS = (int)5;
	public static final int DW_DLE_ABBREV_DECODE_ERROR = (int)109;
	public static final int DW_DLE_MACINFO_STRING_EMPTY = (int)178;
	public static final int DW_DLE_DEBUG_MACRO_INCONSISTENT = (int)186;
	public static final int DW_DLE_NEXT_DIE_LOW_ERROR = (int)284;
	public static final int DW_FISSION_SECT_COUNT = (int)12;
	public static final int DW_DLA_DSC_HEAD = (int)0x3e;
	public static final int DW_DLE_DEBUG_RNGLISTS_DUPLICATE = (int)359;
	public static final int DW_DLE_ELF_SECTION_COUNT_MISMATCH = (int)442;
	public static final int DW_DLE_FUNC_NULL = (int)156;
	public static final int DW_DLE_NO_TAG_FOR_DIE = (int)395;
	public static final int DW_DLE_ILLOGICAL_TSEARCH = (int)349;
	public static final int DW_DLE_DEBUGSTR_UNEXPECTED_REL = (int)352;
	public static final int DW_DLE_FORM_SEC_OFFSET_LENGTH_BAD = (int)225;
	public static final int DW_DLE_GDBINDEX_STRING_ERROR = (int)471;
	public static final int DW_DLV_ERROR = (int)1;
	public static final int DW_DLE_PUBNAMES_LENGTH_BAD = (int)124;
	public static final int DW_DLE_DEBUG_FRAME_POSSIBLE_ADDRESS_BOTCH = (int)229;
	public static final int DW_DLE_LINE_CONTEXT_BOTCH = (int)305;
	public static final int DW_DLE_DEBUG_LINE_STR_DUPLICATE = (int)298;
	public static final int DW_DLE_SECTION_ERROR = (int)248;
	public static final int DW_DLE_FRAME_CIE_DECODE_ERROR = (int)200;
	public static final int DW_DLE_DF_MAKE_INSTR_NO_INIT = (int)189;
	public static final int DW_DLE_TYPENAMES_ERROR = (int)277;
	public static final int DW_DLE_DEBUG_MACRO_INTERNAL_ERR = (int)184;
	public static final int DW_DLE_STR_OFFSETS_NULL_DBG = (int)403;
	public static final int DW_DLE_GROUP_LOAD_ERROR = (int)391;
	public static final int DW_DLE_ATTR_FORM_OFFSET_BAD = (int)119;
	public static final int DW_DLE_DEBUG_ABBREV_NULL = (int)34;
	public static final int DW_DLE_INTERFACE_NOT_SUPPORTED = (int)313;
	public static final int DW_DLE_ORPHAN_FDE = (int)221;
	public static final int DW_DLE_DEBUG_WEAKNAMES_DUPLICATE = (int)170;
	public static final int DW_DLE_XU_HASH_INDEX_ERROR = (int)272;
	public static final int DW_DLC_READ = (int)0;
	public static final int DW_DLE_DIR_INDEX_BAD = (int)127;
	public static final int DW_DLE_DEBUG_LOC_SECTION_SHORT = (int)194;
	public static final int DW_DLE_WRONG_ADDRESS = (int)76;
	public static final int DW_DLE_EOLL = (int)17;
	public static final int DW_DLE_ATTR_NO_CU_CONTEXT = (int)115;
	public static final int DW_DLE_LOCLISTS_ERROR = (int)469;
	public static final int DW_DLE_ARANGE_ERROR = (int)274;
	public static final int DW_DLE_OPEN_FAIL = (int)414;
	public static final int DW_DLE_CIE_DBG_NULL = (int)95;
	public static final int DW_DLC_IRIX_OFFSET64 = (int)0x00200000;
	public static final int DW_DLE_ELF_SECTION_LINK_ERROR = (int)440;
	public static final int DW_FTYPE_ARCHIVE = (int)4;
	public static final int DW_DLE_CU_DIE_NO_ABBREV_LIST = (int)256;
	public static final int DW_DLE_DWP_SIGNATURE_MISMATCH = (int)453;
	public static final int DW_DLE_PRO_INIT_EXTRAS_UNKNOWN = (int)462;
	public static final int DW_DLC_TARGET_LITTLEENDIAN = (int)0x00100000;
	public static final int DW_DLE_DUPLICATE_INST_BLOCK = (int)222;
	public static final int DW_DLC_TARGET_BIGENDIAN = (int)0x08000000;
	public static final int DW_DLE_NOB = (int)15;
	public static final int DW_DLE_LOC_EXPR_BAD = (int)128;
	public static final int DW_DLE_DF_POP_EMPTY_STACK = (int)191;
	public static final int DW_DLE_ARANGES_NULL = (int)138;
	public static final int DW_DLE_GDB_INDEX_COUNT_ADDR_ERROR = (int)263;
	public static final int DW_DLE_INTEGER_TOO_SMALL = (int)439;
	public static final int DW_DLA_ADDR = (int)0x1c;
	public static final int DW_DLE_DEBUG_NAMES_UNHANDLED_FORM = (int)381;
	public static final int DW_DLE_RELOC_SECTION_LENGTH_ODD = (int)216;
	public static final int DW_DLA_RANGES = (int)0x1d;
	public static final int DW_DLE_ELF_GETIDENT_ERROR = (int)148;
	public static final int DW_DLE_WEAKNAMES_ERROR = (int)279;
	public static final int DW_DLA_LINE = (int)0x09;
	public static final int DW_DLE_BADOFF = (int)19;
	public static final int DW_DLE_BAD_REF_FORM = (int)118;
	public static final int DW_DLE_LEB_OUT_ERROR = (int)354;
	public static final int DW_DLA_GDBINDEX = (int)0x37;
	public static final int DW_DLE_AUG_DATA_LENGTH_BAD = (int)393;
	public static final int DW_DLE_FORM_BLOCK_LENGTH_ERROR = (int)337;
	public static final int DW_DLE_MLE = (int)11;
	public static final int DW_DLE_MISSING_ELF64_SUPPORT = (int)220;
	public static final int DW_DLE_BAD_EXPR_OPCODE = (int)145;
	public static final int DW_DLE_DEBUG_FRAME_DUPLICATE = (int)107;
	public static final int DW_DLE_DEBUG_VARNAMES_NULL = (int)165;
	public static final int DW_EXPR_OFFSET = (int)0;
	public static final int DW_DLE_ELF_ENDIAN_BAD = (int)421;
	public static final int DW_DLE_RETURN_EMPTY_PUBNAMES_ERROR = (int)434;
	public static final int DW_DLE_WEAK_NULL = (int)174;
	public static final int DW_DLE_MISSING_REQUIRED_TU_OFFSET_HASH = (int)290;
	public static final int DW_DLE_ATTR_CORRUPT = (int)451;
	public static final int DW_DLE_MOF = (int)16;
	public static final int DW_DLE_LINE_TABLE_BAD = (int)357;
	public static final int DW_DLE_LOC_BAD_TERMINATION = (int)230;
	public static final int DW_DLE_DWP_SIBLING_ERROR = (int)293;
	public static final int DW_DLE_LINE_STRP_OFFSET_BAD = (int)326;
	public static final int DW_DLE_GNU_PUBNAMES_ERROR = (int)472;
	public static final int DW_DLE_LINE_FILE_NUM_BAD = (int)61;
	public static final int DW_DLE_LOCEXPR_OFF_SECTION_END = (int)343;
	public static final int DW_DLE_ATTR_FORM_NOT_DATA8 = (int)288;
	public static final int DW_DLE_LINE_HEADER_CORRUPT = (int)401;
	public static final int DW_DLE_STRING_PTR_NULL = (int)122;
	public static final int DW_DLE_STRING_OFF_END_PUBNAMES_LIKE = (int)363;
	public static final int DW_DLE_LOCLIST_INDEX_ERROR = (int)312;
	public static final int DW_DLE_NO_CALLBACK_FUNC = (int)63;
	public static final int DW_DLE_GDB_INDEX_INDEX_ERROR = (int)264;
	public static final int DW_DLE_DEBUG_NAMES_DUPLICATE = (int)297;
	public static final int DW_DLE_ERRONEOUS_GDB_INDEX_SECTION = (int)261;
	public static final int DW_DLE_USER_DECLARED_ERROR = (int)467;
	public static final int DW_DLE_LINE_CONTEXT_NULL = (int)102;
	public static final int DW_DLE_DUPLICATE_GNU_DEBUGLINK = (int)455;
	public static final int DW_DLE_PUBNAMES_ERROR = (int)275;
	public static final int DW_DLE_SIZE_WRAPAROUND = (int)348;
	public static final int DW_DLA_TYPE = (int)0x0b;
	public static final int DW_DLE_DEBUGFRAME_ERROR = (int)83;
	public static final int DW_DLE_ATTR_FORM_SIZE_BAD = (int)116;
	public static final int DW_DLE_DEBUG_FISSION_INCOMPLETE = (int)294;
	public static final int DW_DLC_STREAM_RELOCATIONS = (int)0x02000000;
	public static final int DW_DLE_DEBUG_NAMES_OFF_END = (int)375;
	public static final int DW_DLE_EXPR_NULL = (int)144;
	public static final int DW_DLE_DBG_ALLOC = (int)23;
	public static final int DW_DLE_ARANGE_DECODE_ERROR = (int)137;
	public static final int DW_DLE_CU_TYPE_MISSING = (int)309;
	public static final int DW_DLE_DEBUGPUBTYPES_ERROR = (int)241;
	public static final int DW_DLE_DEBUG_INFO_DUPLICATE = (int)31;
	public static final int DW_DLE_CORRUPT_NOTE_GNU_DEBUGID = (int)457;
	public static final int DW_DLA_FRAME_BLOCK = (int)0x17;
	public static final int DW_DLE_LNCT_CODE_UNKNOWN = (int)382;
	public static final int DW_DLE_LOCLIST_OFFSET_BAD = (int)356;
	public static final int DW_DLE_FSTAT_MODE_ERROR = (int)25;
	public static final int DW_DLE_CIE_NULL = (int)94;
	public static final int DW_DLE_DF_REG_NUM_TOO_HIGH = (int)188;
	public static final int DW_DLE_STR_OFFSETS_NULLARGUMENT = (int)402;
	public static final int DW_DLE_IMAGE_FILE_UNKNOWN_TYPE = (int)429;
	public static final int DW_DLA_LOC_BLOCK_C = (int)0x39;
	public static final int DW_DLE_DEBUG_LOC_NULL = (int)40;
	public static final int DW_DLE_ZLIB_SECTION_SHORT = (int)338;
	public static final int DW_DLE_FILE_WRONG_TYPE = (int)412;
	public static final int DW_FTYPE_ELF = (int)1;
	public static final int DW_HARMLESS_ERROR_CIRCULAR_LIST_DEFAULT_SIZE = (int)4;
	public static final int DW_FTYPE_PE = (int)3;
	public static final int DW_DLE_DEBUG_ARANGES_NULL = (int)36;
	public static final int DW_DLA_GLOBAL = (int)0x0d;
	public static final int DW_DLE_CU_LENGTH_ERROR = (int)47;
	public static final int DW_DLE_DEBUG_TYPENAMES_VERSION_ERROR = (int)160;
	public static final int DW_DLE_PRODUCER_CODE_NOT_AVAILABLE = (int)431;
	public static final int DW_DLE_READ_ERROR = (int)419;
	public static final int DW_DLE_LINE_STRING_BAD = (int)364;
	public static final int DW_DLE_REF_SIG8_NOT_HANDLED = (int)228;
	public static final int DW_DLE_ZDEBUG_REQUIRES_ZLIB = (int)314;
	public static final int DW_DLC_WRITE = (int)1;
	public static final int DW_DLE_PE_SIZE_SMALL = (int)426;
	public static final int DW_DLE_LINE_NUM_OPERANDS_BAD = (int)56;
	public static final int DW_DLE_FUNCNAMES_ERROR = (int)276;
	public static final int DW_DLE_STRING_NOT_TERMINATED = (int)303;
	public static final int DW_DLA_WEAK = (int)0x1b;
	public static final int DW_DLE_PC_NOT_IN_FDE_RANGE = (int)97;
	public static final int DW_DLA_FDE = (int)0x15;
	public static final int DW_DLE_MACRO_PAST_END = (int)325;
	public static final int DW_DLE_MULTIPLE_RELOC_IN_EXPR = (int)147;
	public static final int DW_DLA_LOC = (int)0x02;
	public static final int DW_DLA_LOCDESC_C = (int)0x3a;
	public static final int DW_DLE_DEBUG_MACINFO_NULL = (int)42;
	public static final int DW_DLE_STR_OFFSETS_VERSION_WRONG = (int)406;
	public static final int DW_DLE_GROUP_INTERNAL_ERROR = (int)390;
	public static final int DW_DLE_ATTR_ALLOC = (int)85;
	public static final int DW_DLE_ARANGE_LENGTH_BAD = (int)136;
	public static final int DW_DLE_READ_OFF_END = (int)445;
	public static final int DW_DLE_TYPE_CONTEXT_NULL = (int)163;
	public static final int DW_DLE_SYMTAB_SECTION_ENTRYSIZE_ZERO = (int)234;
	public static final int DW_DLE_DEBUG_CU_UNAVAILABLE_FOR_FORM = (int)250;
	public static final int DW_DLE_RELOC_SECTION_MISMATCH = (int)214;
	public static final int DW_DLE_SIBLING_OFFSET_WRONG = (int)413;
	public static final int DW_DLE_TAG_CORRUPT = (int)449;
	public static final int DW_DLE_MACINFO_INTERNAL_ERROR_SPACE = (int)179;
	public static final int DW_DLE_ATTR_FORM_NOT_ADDR_INDEX = (int)258;
	public static final int DW_DLE_GNU_OPCODE_ERROR = (int)240;
	public static final int DW_DLE_DEBUG_RANGES_DUPLICATE = (int)205;
	public static final int DW_DLA_DEBUG = (int)0x07;
	public static final int DW_DLC_SIZE_64 = (int)0x40000000;
	public static final int DW_DLE_BADBITC = (int)22;
	public static final int DW_DLE_DEBUG_TYPES_DUPLICATE = (int)237;
	public static final int DW_FRAME_SAME_VAL = (int)1035;
	public static final int DW_DLE_STRING_FORM_IMPROPER = (int)327;
	public static final int DW_DLE_STR_OFFSETS_BASE_WRONG_FORM = (int)398;
	public static final int DW_DLE_LOCATION_ERROR = (int)478;
	public static final int DW_DLE_NO_TIED_SIG_AVAILABLE = (int)302;
	public static final int DW_DLE_DEBUG_TYPENAMES_LENGTH_BAD = (int)161;
	public static final int DW_DLE_DEBUG_LOC_DUPLICATE = (int)39;
	public static final int DW_DLA_ABBREV = (int)0x12;
	public static final int DW_DLE_DEBUG_STR_NULL = (int)46;
	public static final int DW_DLE_PUBNAMES_VERSION_ERROR = (int)123;
	public static final int DW_DLE_SECT_ALLOC = (int)64;
	public static final int DW_DLE_DIE_LOC_EXPR_BAD = (int)129;
	public static final int DW_DLA_FUNC = (int)0x18;
	public static final int DW_DLE_BYTEOFF_ERR = (int)71;
	public static final int DW_DLE_RELOC_MISMATCH_INDEX = (int)211;
	public static final int DW_DLA_VAR = (int)0x1a;
	public static final int DW_DLE_DEBUG_PUBTYPES_LENGTH_BAD = (int)197;
	public static final int DW_DLE_NO_AT_MIPS_FDE = (int)149;
	public static final long DW_DLX_EH_OFFSET_UNAVAILABLE = (long)(-2L);
	public static final int DW_DLE_LOCLIST_INTERFACE_ERROR = (int)311;
	public static final int DW_HARMLESS_ERROR_MSG_STRING_SIZE = (int)300;
	public static final int DW_DLE_PATH_SIZE_TOO_SMALL = (int)424;
	public static final int DW_DLE_SECTION_INDEX_BAD = (int)438;
	public static final int DW_DLE_DIE_ABBREV_LIST_NULL = (int)151;
	public static final int DW_DLE_ADDRESS_SIZE_ZERO = (int)371;
	public static final int DW_REG_TABLE_SIZE = (int)66;
	public static final int DW_DLE_DIE_NULL = (int)52;
	public static final int DW_EXPR_VAL_EXPRESSION = (int)3;
	public static final int DW_DLE_ZDEBUG_INPUT_FORMAT_ODD = (int)315;
	public static final int DW_DLE_ABBREV_MISSING = (int)394;
	public static final int DW_DLE_VARNAMES_ERROR = (int)278;
	public static final int DW_FTYPE_MACH_O = (int)2;
	public static final int DW_DLE_MACH_O_SEGOFFSET_BAD = (int)416;
	public static final int DW_DLE_DEBUG_SUP_DUPLICATE = (int)299;
	public static final int DW_DLE_CHUNK_ALLOC = (int)70;
	public static final int DW_DLE_TYPE_NULL = (int)162;
	public static final int DW_DLA_XU_INDEX = (int)0x38;
	public static final int DW_DLE_LINE_OFFSET_WRONG_FORM = (int)336;
	public static final int DW_DLE_DEBUG_RANGES_OUT_OF_MEM = (int)208;
	public static final int DW_DLE_ATRUNC = (int)21;
	public static final int DW_DLE_ADDRESS_SIZE_ERROR = (int)50;
	public static final int DW_FRAME_UNDEFINED_VAL = (int)1034;
	public static final int DW_DLC_SYMBOLIC_RELOCATIONS = (int)0x04000000;
	public static final int DW_DLE_MACRO_OPCODE_FORM_BAD = (int)320;
	public static final int DW_LKIND_loclists = (int)5;
	public static final int DW_DLE_LINE_EXT_OPCODE_BAD = (int)58;
	public static final long DW_DLX_NO_EH_OFFSET = (long)(-1L);
	public static final int DW_DLA_ERROR = (int)0x0e;
	public static final int DW_DLC_SIZE_32 = (int)0x20000000;
	public static final int DW_DLE_LINE_ALLOC = (int)66;
	public static final int DW_DLE_READ_BIGENDIAN_ERROR = (int)332;
	public static final int DW_DLE_SECTION_STRING_OFFSET_BAD = (int)437;
	public static final int DW_DLE_DF_ALLOC_FAIL = (int)192;
	public static final int DW_DLE_ZLIB_BUF_ERROR = (int)316;
	public static final int DW_DLE_FDE_NULL = (int)92;
	public static final int DW_DLE_FIRST_DIE_NOT_CU = (int)105;
	public static final int DW_LKIND_GNU_exp_list = (int)2;
	public static final int DW_DLE_DEBUG_LINE_RANGE_ZERO = (int)330;
	public static final int DW_DLE_DEBUG_MACINFO_DUPLICATE = (int)41;
	public static final int DW_DLE_FISSION_VERSION_ERROR = (int)283;
	public static final int DW_DLE_ATTR_FORM_BAD = (int)114;
	public static final int DW_DLE_RELOC_INVALID = (int)333;
	public static final int DW_DLE_IOF = (int)7;
	public static final int DW_DLE_DUPLICATE_CU_INDEX = (int)266;
	public static final int DW_DLE_RELOC_MISMATCH_STRTAB_INDEX = (int)213;
	public static final int DW_DLE_STRP_OFFSET_BAD = (int)204;
	public static final int DW_DLE_PE_STRING_TOO_LONG = (int)428;
	public static final int DW_DLE_DEBUG_LOClISTS_DUPLICATE = (int)358;
	public static final int DW_DLE_RELOC_SECTION_PTR_NULL = (int)217;
	public static final int DW_DLE_CORRUPT_GNU_DEBUGID_SIZE = (int)458;
	public static final int DW_DLE_GROUP_LOAD_READ_ERROR = (int)392;
	public static final int DW_DLC_POINTER32 = (int)0x20000000;
	public static final int DW_DLE_STR_OFFSETS_ARRAY_INDEX_WRONG = (int)407;
	public static final int DW_FRAME_REG_INITIAL_VALUE = (int)1035;
	public static final int DW_DLE_DEBUG_INFO_PTR_NULL = (int)51;
	public static final int DW_DLE_LO_USER = (int)0x10000;
	public static final int DW_DLE_DF_NO_CIE_AUGMENTATION = (int)187;
	public static final int DW_DLE_DATA16_OUTSIDE_SECTION = (int)399;
	public static final int DW_DLE_MISSING_NEEDED_DEBUG_ADDR_SECTION = (int)257;
	public static final int DW_DLE_SECTION_SIZE_OR_OFFSET_LARGE = (int)470;
	public static final int DW_DLE_FRAME_TABLE_COL_BAD = (int)96;
	public static final int DW_FTYPE_UNKNOWN = (int)0;
	public static final int DW_EXPR_VAL_OFFSET = (int)1;
	public static final int DW_DLA_ELLIST = (int)0x04;
	public static final int DW_DLA_BOUNDS = (int)0x05;
	public static final int DW_DLA_SUBSCR = (int)0x0c;
	public static final int DW_DLE_FDE_DBG_NULL = (int)93;
	public static final int DW_DLE_SECTION_SIZE_ERROR = (int)435;
	public static final int DW_DLE_DIE_BAD = (int)112;
	public static final int DW_DLE_DEBUGMACINFO_ERROR = (int)181;
	public static final int DW_GROUPNUMBER_ANY = (int)0;
	public static final int DW_DLE_ARANGES_HEADER_ERROR = (int)335;
	public static final int DW_DLE_NEXT_DIE_WRONG_FORM = (int)253;
	public static final int DW_DLE_RELOC_MISMATCH_RELOC_INDEX = (int)212;
	public static final int DW_DLC_POINTER64 = (int)0x40000000;
	public static final int DW_DLE_ALLOC_FAIL = (int)62;
	public static final int DW_DLE_FRAME_VERSION_BAD = (int)90;
	public static final int DW_DLE_DEBUG_NAMES_BAD_INDEX_ARG = (int)379;
	public static final int DW_DLE_LINE_SET_ADDR_ERROR = (int)57;
	public static final int DW_DLE_ABBREV_ATTR_DUPLICATION = (int)452;
	public static final int DW_DLE_INIT_ACCESS_WRONG = (int)26;
	public static final int DW_DLE_DEBUG_SUP_ERROR = (int)477;
	public static final int DW_DLE_OFFSET_SIZE = (int)415;
	public static final int DW_DLE_NEXT_DIE_NO_ABBREV_LIST = (int)254;
	public static final int DW_ENDIAN_BIG = (int)1;
	public static final int DW_DLE_LOCDESC_COUNT_WRONG = (int)176;
	public static final int DW_DLE_DEBUG_VARNAMES_LENGTH_BAD = (int)167;
	public static final int DW_DLE_DEBUG_NAMES_ABBREV_CORRUPTION = (int)377;
	public static final int DW_DLE_TOO_MANY_DEBUG = (int)245;
	public static final int DW_DLA_LOC_HEAD_C = (int)0x3b;
	public static final int DW_DLE_ELF_SECT_ERR = (int)88;
	public static final int DW_EXPR_EXPRESSION = (int)2;
	public static final int DW_DLE_PUBTYPE_CONTEXT = (int)196;
	public static final int DW_DLE_GDB_INDEX_COUNT_ERROR = (int)262;
	public static final int DW_DLE_NO_ELF_SUPPORT = (int)432;
	public static final int DW_DLE_DWARF_LINE_NULL = (int)59;
	public static final int DW_DLE_EXTRA_NEIGHBORS = (int)77;
	public static final int DW_DLE_CORRUPT_GNU_DEBUGLINK = (int)456;
	public static final int DW_DLE_NO_TIED_STRING_AVAILABLE = (int)307;
	public static final int DW_DLE_OFFSET_UFLW = (int)87;
	public static final int DW_DLC_OFFSET_SIZE_64 = (int)0x10000000;
	public static final int DW_DLE_FDE_INSTR_PTR_ERROR = (int)340;
	public static final int DW_DLE_HEADER_LEN_BIGGER_THAN_SECSIZE = (int)342;
	public static final int DW_DLE_FRAME_REGISTER_UNREPRESENTABLE = (int)201;
	public static final int DW_DLE_FAILSAFE_ERRVAL = (int)273;

	// constants from dwarf.h
	public static final int DW_TAG_array_type = (int)0x01;
	public static final int DW_TAG_class_type = (int)0x02;
	public static final int DW_TAG_entry_point = (int)0x03;
	public static final int DW_TAG_enumeration_type = (int)0x04;
	public static final int DW_TAG_formal_parameter = (int)0x05;
	public static final int DW_TAG_imported_declaration = (int)0x08;
	public static final int DW_TAG_label = (int)0x0a;
	public static final int DW_TAG_lexical_block = (int)0x0b;
	public static final int DW_TAG_member = (int)0x0d;
	public static final int DW_TAG_pointer_type = (int)0x0f;
	public static final int DW_TAG_reference_type = (int)0x10;
	public static final int DW_TAG_compile_unit = (int)0x11;
	public static final int DW_TAG_string_type = (int)0x12;
	public static final int DW_TAG_structure_type = (int)0x13;
	public static final int DW_TAG_subroutine_type = (int)0x15;
	public static final int DW_TAG_typedef = (int)0x16;
	public static final int DW_TAG_union_type = (int)0x17;
	public static final int DW_TAG_unspecified_parameters = (int)0x18;
	public static final int DW_TAG_variant = (int)0x19;
	public static final int DW_TAG_common_block = (int)0x1a;
	public static final int DW_TAG_common_inclusion = (int)0x1b;
	public static final int DW_TAG_inheritance = (int)0x1c;
	public static final int DW_TAG_inlined_subroutine = (int)0x1d;
	public static final int DW_TAG_module = (int)0x1e;
	public static final int DW_TAG_ptr_to_member_type = (int)0x1f;
	public static final int DW_TAG_set_type = (int)0x20;
	public static final int DW_TAG_subrange_type = (int)0x21;
	public static final int DW_TAG_with_stmt = (int)0x22;
	public static final int DW_TAG_access_declaration = (int)0x23;
	public static final int DW_TAG_base_type = (int)0x24;
	public static final int DW_TAG_catch_block = (int)0x25;
	public static final int DW_TAG_const_type = (int)0x26;
	public static final int DW_TAG_constant = (int)0x27;
	public static final int DW_TAG_enumerator = (int)0x28;
	public static final int DW_TAG_file_type = (int)0x29;
	public static final int DW_TAG_friend = (int)0x2a;
	public static final int DW_TAG_namelist = (int)0x2b;
	public static final int DW_TAG_namelist_item = (int)0x2c;
	public static final int DW_TAG_namelist_items = (int)0x2c;
	public static final int DW_TAG_packed_type = (int)0x2d;
	public static final int DW_TAG_subprogram = (int)0x2e;
	public static final int DW_TAG_template_type_parameter = (int)0x2f;
	public static final int DW_TAG_template_type_param = (int)0x2f;
	public static final int DW_TAG_template_value_parameter = (int)0x30;
	public static final int DW_TAG_template_value_param = (int)0x30;
	public static final int DW_TAG_thrown_type = (int)0x31;
	public static final int DW_TAG_try_block = (int)0x32;
	public static final int DW_TAG_variant_part = (int)0x33;
	public static final int DW_TAG_variable = (int)0x34;
	public static final int DW_TAG_volatile_type = (int)0x35;
	public static final int DW_TAG_dwarf_procedure = (int)0x36;
	public static final int DW_TAG_restrict_type = (int)0x37;
	public static final int DW_TAG_interface_type = (int)0x38;
	public static final int DW_TAG_namespace = (int)0x39;
	public static final int DW_TAG_imported_module = (int)0x3a;
	public static final int DW_TAG_unspecified_type = (int)0x3b;
	public static final int DW_TAG_partial_unit = (int)0x3c;
	public static final int DW_TAG_imported_unit = (int)0x3d;
	public static final int DW_TAG_mutable_type = (int)0x3e;
	public static final int DW_TAG_condition = (int)0x3f;
	public static final int DW_TAG_shared_type = (int)0x40;
	public static final int DW_TAG_type_unit = (int)0x41;
	public static final int DW_TAG_rvalue_reference_type = (int)0x42;
	public static final int DW_TAG_template_alias = (int)0x43;
	public static final int DW_TAG_coarray_type = (int)0x44;
	public static final int DW_TAG_generic_subrange = (int)0x45;
	public static final int DW_TAG_dynamic_type = (int)0x46;
	public static final int DW_TAG_atomic_type = (int)0x47;
	public static final int DW_TAG_call_site = (int)0x48;
	public static final int DW_TAG_call_site_parameter = (int)0x49;
	public static final int DW_TAG_skeleton_unit = (int)0x4a;
	public static final int DW_TAG_immutable_type = (int)0x4b;
	public static final int DW_TAG_lo_user = (int)0x4080;
	public static final int DW_TAG_MIPS_loop = (int)0x4081;
	public static final int DW_TAG_HP_array_descriptor = (int)0x4090;
	public static final int DW_TAG_format_label = (int)0x4101;
	public static final int DW_TAG_function_template = (int)0x4102;
	public static final int DW_TAG_class_template = (int)0x4103;
	public static final int DW_TAG_GNU_BINCL = (int)0x4104;
	public static final int DW_TAG_GNU_EINCL = (int)0x4105;
	public static final int DW_TAG_GNU_template_template_parameter = (int)0x4106;
	public static final int DW_TAG_GNU_template_template_param = (int)0x4106;
	public static final int DW_TAG_GNU_template_parameter_pack = (int)0x4107;
	public static final int DW_TAG_GNU_formal_parameter_pack = (int)0x4108;
	public static final int DW_TAG_GNU_call_site = (int)0x4109;
	public static final int DW_TAG_GNU_call_site_parameter = (int)0x410a;
	public static final int DW_TAG_ALTIUM_circ_type = (int)0x5101;
	public static final int DW_TAG_ALTIUM_mwa_circ_type = (int)0x5102;
	public static final int DW_TAG_ALTIUM_rev_carry_type = (int)0x5103;
	public static final int DW_TAG_ALTIUM_rom = (int)0x5111;
	public static final int DW_TAG_upc_shared_type = (int)0x8765;
	public static final int DW_TAG_upc_strict_type = (int)0x8766;
	public static final int DW_TAG_upc_relaxed_type = (int)0x8767;
	public static final int DW_TAG_PGI_kanji_type = (int)0xa000;
	public static final int DW_TAG_PGI_interface_block = (int)0xa020;
	public static final int DW_TAG_SUN_function_template = (int)0x4201;
	public static final int DW_TAG_SUN_class_template = (int)0x4202;
	public static final int DW_TAG_SUN_struct_template = (int)0x4203;
	public static final int DW_TAG_SUN_union_template = (int)0x4204;
	public static final int DW_TAG_SUN_indirect_inheritance = (int)0x4205;
	public static final int DW_TAG_SUN_codeflags = (int)0x4206;
	public static final int DW_TAG_SUN_memop_info = (int)0x4207;
	public static final int DW_TAG_SUN_omp_child_func = (int)0x4208;
	public static final int DW_TAG_SUN_rtti_descriptor = (int)0x4209;
	public static final int DW_TAG_SUN_dtor_info = (int)0x420a;
	public static final int DW_TAG_SUN_dtor = (int)0x420b;
	public static final int DW_TAG_SUN_f90_interface = (int)0x420c;
	public static final int DW_TAG_SUN_fortran_vax_structure = (int)0x420d;
	public static final int DW_TAG_SUN_hi = (int)0x42ff;
	public static final int DW_TAG_hi_user = (int)0xffff;
	public static final int DW_children_no = (int)0;
	public static final int DW_children_yes = (int)1;
	public static final int DW_FORM_addr = (int)0x01;
	public static final int DW_FORM_block2 = (int)0x03;
	public static final int DW_FORM_block4 = (int)0x04;
	public static final int DW_FORM_data2 = (int)0x05;
	public static final int DW_FORM_data4 = (int)0x06;
	public static final int DW_FORM_data8 = (int)0x07;
	public static final int DW_FORM_string = (int)0x08;
	public static final int DW_FORM_block = (int)0x09;
	public static final int DW_FORM_block1 = (int)0x0a;
	public static final int DW_FORM_data1 = (int)0x0b;
	public static final int DW_FORM_flag = (int)0x0c;
	public static final int DW_FORM_sdata = (int)0x0d;
	public static final int DW_FORM_strp = (int)0x0e;
	public static final int DW_FORM_udata = (int)0x0f;
	public static final int DW_FORM_ref_addr = (int)0x10;
	public static final int DW_FORM_ref1 = (int)0x11;
	public static final int DW_FORM_ref2 = (int)0x12;
	public static final int DW_FORM_ref4 = (int)0x13;
	public static final int DW_FORM_ref8 = (int)0x14;
	public static final int DW_FORM_ref_udata = (int)0x15;
	public static final int DW_FORM_indirect = (int)0x16;
	public static final int DW_FORM_sec_offset = (int)0x17;
	public static final int DW_FORM_exprloc = (int)0x18;
	public static final int DW_FORM_flag_present = (int)0x19;
	public static final int DW_FORM_strx = (int)0x1a;
	public static final int DW_FORM_addrx = (int)0x1b;
	public static final int DW_FORM_ref_sup4 = (int)0x1c;
	public static final int DW_FORM_strp_sup = (int)0x1d;
	public static final int DW_FORM_data16 = (int)0x1e;
	public static final int DW_FORM_line_strp = (int)0x1f;
	public static final int DW_FORM_ref_sig8 = (int)0x20;
	public static final int DW_FORM_implicit_const = (int)0x21;
	public static final int DW_FORM_loclistx = (int)0x22;
	public static final int DW_FORM_rnglistx = (int)0x23;
	public static final int DW_FORM_ref_sup8 = (int)0x24;
	public static final int DW_FORM_strx1 = (int)0x25;
	public static final int DW_FORM_strx2 = (int)0x26;
	public static final int DW_FORM_strx3 = (int)0x27;
	public static final int DW_FORM_strx4 = (int)0x28;
	public static final int DW_FORM_addrx1 = (int)0x29;
	public static final int DW_FORM_addrx2 = (int)0x2a;
	public static final int DW_FORM_addrx3 = (int)0x2b;
	public static final int DW_FORM_addrx4 = (int)0x2c;
	public static final int DW_FORM_GNU_addr_index = (int)0x1f01;
	public static final int DW_FORM_GNU_str_index = (int)0x1f02;
	public static final int DW_FORM_GNU_ref_alt = (int)0x1f20;
	public static final int DW_FORM_GNU_strp_alt = (int)0x1f21;
	public static final int DW_AT_sibling = (int)0x01;
	public static final int DW_AT_location = (int)0x02;
	public static final int DW_AT_name = (int)0x03;
	public static final int DW_AT_ordering = (int)0x09;
	public static final int DW_AT_subscr_data = (int)0x0a;
	public static final int DW_AT_byte_size = (int)0x0b;
	public static final int DW_AT_bit_offset = (int)0x0c;
	public static final int DW_AT_bit_size = (int)0x0d;
	public static final int DW_AT_element_list = (int)0x0f;
	public static final int DW_AT_stmt_list = (int)0x10;
	public static final int DW_AT_low_pc = (int)0x11;
	public static final int DW_AT_high_pc = (int)0x12;
	public static final int DW_AT_language = (int)0x13;
	public static final int DW_AT_member = (int)0x14;
	public static final int DW_AT_discr = (int)0x15;
	public static final int DW_AT_discr_value = (int)0x16;
	public static final int DW_AT_visibility = (int)0x17;
	public static final int DW_AT_import = (int)0x18;
	public static final int DW_AT_string_length = (int)0x19;
	public static final int DW_AT_common_reference = (int)0x1a;
	public static final int DW_AT_comp_dir = (int)0x1b;
	public static final int DW_AT_const_value = (int)0x1c;
	public static final int DW_AT_containing_type = (int)0x1d;
	public static final int DW_AT_default_value = (int)0x1e;
	public static final int DW_AT_inline = (int)0x20;
	public static final int DW_AT_is_optional = (int)0x21;
	public static final int DW_AT_lower_bound = (int)0x22;
	public static final int DW_AT_producer = (int)0x25;
	public static final int DW_AT_prototyped = (int)0x27;
	public static final int DW_AT_return_addr = (int)0x2a;
	public static final int DW_AT_start_scope = (int)0x2c;
	public static final int DW_AT_bit_stride = (int)0x2e;
	public static final int DW_AT_stride_size = (int)0x2e;
	public static final int DW_AT_upper_bound = (int)0x2f;
	public static final int DW_AT_abstract_origin = (int)0x31;
	public static final int DW_AT_accessibility = (int)0x32;
	public static final int DW_AT_address_class = (int)0x33;
	public static final int DW_AT_artificial = (int)0x34;
	public static final int DW_AT_base_types = (int)0x35;
	public static final int DW_AT_calling_convention = (int)0x36;
	public static final int DW_AT_count = (int)0x37;
	public static final int DW_AT_data_member_location = (int)0x38;
	public static final int DW_AT_decl_column = (int)0x39;
	public static final int DW_AT_decl_file = (int)0x3a;
	public static final int DW_AT_decl_line = (int)0x3b;
	public static final int DW_AT_declaration = (int)0x3c;
	public static final int DW_AT_discr_list = (int)0x3d;
	public static final int DW_AT_encoding = (int)0x3e;
	public static final int DW_AT_external = (int)0x3f;
	public static final int DW_AT_frame_base = (int)0x40;
	public static final int DW_AT_friend = (int)0x41;
	public static final int DW_AT_identifier_case = (int)0x42;
	public static final int DW_AT_macro_info = (int)0x43;
	public static final int DW_AT_namelist_item = (int)0x44;
	public static final int DW_AT_priority = (int)0x45;
	public static final int DW_AT_segment = (int)0x46;
	public static final int DW_AT_specification = (int)0x47;
	public static final int DW_AT_static_link = (int)0x48;
	public static final int DW_AT_type = (int)0x49;
	public static final int DW_AT_use_location = (int)0x4a;
	public static final int DW_AT_variable_parameter = (int)0x4b;
	public static final int DW_AT_virtuality = (int)0x4c;
	public static final int DW_AT_vtable_elem_location = (int)0x4d;
	public static final int DW_AT_allocated = (int)0x4e;
	public static final int DW_AT_associated = (int)0x4f;
	public static final int DW_AT_data_location = (int)0x50;
	public static final int DW_AT_byte_stride = (int)0x51;
	public static final int DW_AT_stride = (int)0x51;
	public static final int DW_AT_entry_pc = (int)0x52;
	public static final int DW_AT_use_UTF8 = (int)0x53;
	public static final int DW_AT_extension = (int)0x54;
	public static final int DW_AT_ranges = (int)0x55;
	public static final int DW_AT_trampoline = (int)0x56;
	public static final int DW_AT_call_column = (int)0x57;
	public static final int DW_AT_call_file = (int)0x58;
	public static final int DW_AT_call_line = (int)0x59;
	public static final int DW_AT_description = (int)0x5a;
	public static final int DW_AT_binary_scale = (int)0x5b;
	public static final int DW_AT_decimal_scale = (int)0x5c;
	public static final int DW_AT_small = (int)0x5d;
	public static final int DW_AT_decimal_sign = (int)0x5e;
	public static final int DW_AT_digit_count = (int)0x5f;
	public static final int DW_AT_picture_string = (int)0x60;
	public static final int DW_AT_mutable = (int)0x61;
	public static final int DW_AT_threads_scaled = (int)0x62;
	public static final int DW_AT_explicit = (int)0x63;
	public static final int DW_AT_object_pointer = (int)0x64;
	public static final int DW_AT_endianity = (int)0x65;
	public static final int DW_AT_elemental = (int)0x66;
	public static final int DW_AT_pure = (int)0x67;
	public static final int DW_AT_recursive = (int)0x68;
	public static final int DW_AT_signature = (int)0x69;
	public static final int DW_AT_main_subprogram = (int)0x6a;
	public static final int DW_AT_data_bit_offset = (int)0x6b;
	public static final int DW_AT_const_expr = (int)0x6c;
	public static final int DW_AT_enum_class = (int)0x6d;
	public static final int DW_AT_linkage_name = (int)0x6e;
	public static final int DW_AT_string_length_bit_size = (int)0x6f;
	public static final int DW_AT_string_length_byte_size = (int)0x70;
	public static final int DW_AT_rank = (int)0x71;
	public static final int DW_AT_str_offsets_base = (int)0x72;
	public static final int DW_AT_addr_base = (int)0x73;
	public static final int DW_AT_rnglists_base = (int)0x74;
	public static final int DW_AT_dwo_id = (int)0x75;
	public static final int DW_AT_dwo_name = (int)0x76;
	public static final int DW_AT_reference = (int)0x77;
	public static final int DW_AT_rvalue_reference = (int)0x78;
	public static final int DW_AT_macros = (int)0x79;
	public static final int DW_AT_call_all_calls = (int)0x7a;
	public static final int DW_AT_call_all_source_calls = (int)0x7b;
	public static final int DW_AT_call_all_tail_calls = (int)0x7c;
	public static final int DW_AT_call_return_pc = (int)0x7d;
	public static final int DW_AT_call_value = (int)0x7e;
	public static final int DW_AT_call_origin = (int)0x7f;
	public static final int DW_AT_call_parameter = (int)0x80;
	public static final int DW_AT_call_pc = (int)0x81;
	public static final int DW_AT_call_tail_call = (int)0x82;
	public static final int DW_AT_call_target = (int)0x83;
	public static final int DW_AT_call_target_clobbered = (int)0x84;
	public static final int DW_AT_call_data_location = (int)0x85;
	public static final int DW_AT_call_data_value = (int)0x86;
	public static final int DW_AT_noreturn = (int)0x87;
	public static final int DW_AT_alignment = (int)0x88;
	public static final int DW_AT_export_symbols = (int)0x89;
	public static final int DW_AT_deleted = (int)0x8a;
	public static final int DW_AT_defaulted = (int)0x8b;
	public static final int DW_AT_loclists_base = (int)0x8c;
	public static final int DW_AT_HP_block_index = (int)0x2000;
	public static final int DW_AT_lo_user = (int)0x2000;
	public static final int DW_AT_MIPS_fde = (int)0x2001;
	public static final int DW_AT_MIPS_loop_begin = (int)0x2002;
	public static final int DW_AT_MIPS_tail_loop_begin = (int)0x2003;
	public static final int DW_AT_MIPS_epilog_begin = (int)0x2004;
	public static final int DW_AT_MIPS_loop_unroll_factor = (int)0x2005;
	public static final int DW_AT_MIPS_software_pipeline_depth = (int)0x2006;
	public static final int DW_AT_MIPS_linkage_name = (int)0x2007;
	public static final int DW_AT_MIPS_stride = (int)0x2008;
	public static final int DW_AT_MIPS_abstract_name = (int)0x2009;
	public static final int DW_AT_MIPS_clone_origin = (int)0x200a;
	public static final int DW_AT_MIPS_has_inlines = (int)0x200b;
	public static final int DW_AT_MIPS_stride_byte = (int)0x200c;
	public static final int DW_AT_MIPS_stride_elem = (int)0x200d;
	public static final int DW_AT_MIPS_ptr_dopetype = (int)0x200e;
	public static final int DW_AT_MIPS_allocatable_dopetype = (int)0x200f;
	public static final int DW_AT_MIPS_assumed_shape_dopetype = (int)0x2010;
	public static final int DW_AT_MIPS_assumed_size = (int)0x2011;
	public static final int DW_AT_HP_unmodifiable = (int)0x2001;
	public static final int DW_AT_HP_actuals_stmt_list = (int)0x2010;
	public static final int DW_AT_HP_proc_per_section = (int)0x2011;
	public static final int DW_AT_HP_raw_data_ptr = (int)0x2012;
	public static final int DW_AT_HP_pass_by_reference = (int)0x2013;
	public static final int DW_AT_HP_opt_level = (int)0x2014;
	public static final int DW_AT_HP_prof_version_id = (int)0x2015;
	public static final int DW_AT_HP_opt_flags = (int)0x2016;
	public static final int DW_AT_HP_cold_region_low_pc = (int)0x2017;
	public static final int DW_AT_HP_cold_region_high_pc = (int)0x2018;
	public static final int DW_AT_HP_all_variables_modifiable = (int)0x2019;
	public static final int DW_AT_HP_linkage_name = (int)0x201a;
	public static final int DW_AT_HP_prof_flags = (int)0x201b;
	public static final int DW_AT_CPQ_discontig_ranges = (int)0x2001;
	public static final int DW_AT_CPQ_semantic_events = (int)0x2002;
	public static final int DW_AT_CPQ_split_lifetimes_var = (int)0x2003;
	public static final int DW_AT_CPQ_split_lifetimes_rtn = (int)0x2004;
	public static final int DW_AT_CPQ_prologue_length = (int)0x2005;
	public static final int DW_AT_INTEL_other_endian = (int)0x2026;
	public static final int DW_AT_sf_names = (int)0x2101;
	public static final int DW_AT_src_info = (int)0x2102;
	public static final int DW_AT_mac_info = (int)0x2103;
	public static final int DW_AT_src_coords = (int)0x2104;
	public static final int DW_AT_body_begin = (int)0x2105;
	public static final int DW_AT_body_end = (int)0x2106;
	public static final int DW_AT_GNU_vector = (int)0x2107;
	public static final int DW_AT_GNU_guarded_by = (int)0x2108;
	public static final int DW_AT_GNU_pt_guarded_by = (int)0x2109;
	public static final int DW_AT_GNU_guarded = (int)0x210a;
	public static final int DW_AT_GNU_pt_guarded = (int)0x210b;
	public static final int DW_AT_GNU_locks_excluded = (int)0x210c;
	public static final int DW_AT_GNU_exclusive_locks_required = (int)0x210d;
	public static final int DW_AT_GNU_shared_locks_required = (int)0x210e;
	public static final int DW_AT_GNU_odr_signature = (int)0x210f;
	public static final int DW_AT_GNU_template_name = (int)0x2110;
	public static final int DW_AT_GNU_call_site_value = (int)0x2111;
	public static final int DW_AT_GNU_call_site_data_value = (int)0x2112;
	public static final int DW_AT_GNU_call_site_target = (int)0x2113;
	public static final int DW_AT_GNU_call_site_target_clobbered = (int)0x2114;
	public static final int DW_AT_GNU_tail_call = (int)0x2115;
	public static final int DW_AT_GNU_all_tail_call_sites = (int)0x2116;
	public static final int DW_AT_GNU_all_call_sites = (int)0x2117;
	public static final int DW_AT_GNU_all_source_call_sites = (int)0x2118;
	public static final int DW_AT_GNU_macros = (int)0x2119;
	public static final int DW_AT_GNU_deleted = (int)0x211a;
	public static final int DW_AT_GNU_dwo_name = (int)0x2130;
	public static final int DW_AT_GNU_dwo_id = (int)0x2131;
	public static final int DW_AT_GNU_ranges_base = (int)0x2132;
	public static final int DW_AT_GNU_addr_base = (int)0x2133;
	public static final int DW_AT_GNU_pubnames = (int)0x2134;
	public static final int DW_AT_GNU_pubtypes = (int)0x2135;
	public static final int DW_AT_GNU_discriminator = (int)0x2136;
	public static final int DW_AT_GNU_locviews = (int)0x2137;
	public static final int DW_AT_GNU_entry_view = (int)0x2138;
	public static final int DW_AT_GNU_numerator = (int)0x2303;
	public static final int DW_AT_GNU_denominator = (int)0x2304;
	public static final int DW_AT_GNU_bias = (int)0x2305;
	public static final int DW_AT_ALTIUM_loclist = (int)0x2300;
	public static final int DW_AT_SUN_template = (int)0x2201;
	public static final int DW_AT_VMS_rtnbeg_pd_address = (int)0x2201;
	public static final int DW_AT_SUN_alignment = (int)0x2202;
	public static final int DW_AT_SUN_vtable = (int)0x2203;
	public static final int DW_AT_SUN_count_guarantee = (int)0x2204;
	public static final int DW_AT_SUN_command_line = (int)0x2205;
	public static final int DW_AT_SUN_vbase = (int)0x2206;
	public static final int DW_AT_SUN_compile_options = (int)0x2207;
	public static final int DW_AT_SUN_language = (int)0x2208;
	public static final int DW_AT_SUN_browser_file = (int)0x2209;
	public static final int DW_AT_SUN_vtable_abi = (int)0x2210;
	public static final int DW_AT_SUN_func_offsets = (int)0x2211;
	public static final int DW_AT_SUN_cf_kind = (int)0x2212;
	public static final int DW_AT_SUN_vtable_index = (int)0x2213;
	public static final int DW_AT_SUN_omp_tpriv_addr = (int)0x2214;
	public static final int DW_AT_SUN_omp_child_func = (int)0x2215;
	public static final int DW_AT_SUN_func_offset = (int)0x2216;
	public static final int DW_AT_SUN_memop_type_ref = (int)0x2217;
	public static final int DW_AT_SUN_profile_id = (int)0x2218;
	public static final int DW_AT_SUN_memop_signature = (int)0x2219;
	public static final int DW_AT_SUN_obj_dir = (int)0x2220;
	public static final int DW_AT_SUN_obj_file = (int)0x2221;
	public static final int DW_AT_SUN_original_name = (int)0x2222;
	public static final int DW_AT_SUN_hwcprof_signature = (int)0x2223;
	public static final int DW_AT_SUN_amd64_parmdump = (int)0x2224;
	public static final int DW_AT_SUN_part_link_name = (int)0x2225;
	public static final int DW_AT_SUN_link_name = (int)0x2226;
	public static final int DW_AT_SUN_pass_with_const = (int)0x2227;
	public static final int DW_AT_SUN_return_with_const = (int)0x2228;
	public static final int DW_AT_SUN_import_by_name = (int)0x2229;
	public static final int DW_AT_SUN_f90_pointer = (int)0x222a;
	public static final int DW_AT_SUN_pass_by_ref = (int)0x222b;
	public static final int DW_AT_SUN_f90_allocatable = (int)0x222c;
	public static final int DW_AT_SUN_f90_assumed_shape_array = (int)0x222d;
	public static final int DW_AT_SUN_c_vla = (int)0x222e;
	public static final int DW_AT_SUN_return_value_ptr = (int)0x2230;
	public static final int DW_AT_SUN_dtor_start = (int)0x2231;
	public static final int DW_AT_SUN_dtor_length = (int)0x2232;
	public static final int DW_AT_SUN_dtor_state_initial = (int)0x2233;
	public static final int DW_AT_SUN_dtor_state_final = (int)0x2234;
	public static final int DW_AT_SUN_dtor_state_deltas = (int)0x2235;
	public static final int DW_AT_SUN_import_by_lname = (int)0x2236;
	public static final int DW_AT_SUN_f90_use_only = (int)0x2237;
	public static final int DW_AT_SUN_namelist_spec = (int)0x2238;
	public static final int DW_AT_SUN_is_omp_child_func = (int)0x2239;
	public static final int DW_AT_SUN_fortran_main_alias = (int)0x223a;
	public static final int DW_AT_SUN_fortran_based = (int)0x223b;
	public static final int DW_AT_use_GNAT_descriptive_type = (int)0x2301;
	public static final int DW_AT_GNAT_descriptive_type = (int)0x2302;
	public static final int DW_AT_go_kind = (int)0x2900;
	public static final int DW_AT_go_key = (int)0x2901;
	public static final int DW_AT_go_elem = (int)0x2902;
	public static final int DW_AT_go_embedded_field = (int)0x2903;
	public static final int DW_AT_go_runtime_type = (int)0x2904;
	public static final int DW_AT_upc_threads_scaled = (int)0x3210;
	public static final int DW_AT_PGI_lbase = (int)0x3a00;
	public static final int DW_AT_PGI_soffset = (int)0x3a01;
	public static final int DW_AT_PGI_lstride = (int)0x3a02;
	public static final int DW_AT_APPLE_optimized = (int)0x3fe1;
	public static final int DW_AT_APPLE_flags = (int)0x3fe2;
	public static final int DW_AT_APPLE_isa = (int)0x3fe3;
	public static final int DW_AT_APPLE_block = (int)0x3fe4;
	public static final int DW_AT_APPLE_major_runtime_vers = (int)0x3fe5;
	public static final int DW_AT_APPLE_runtime_class = (int)0x3fe6;
	public static final int DW_AT_APPLE_omit_frame_ptr = (int)0x3fe7;
	public static final int DW_AT_hi_user = (int)0x3fff;
	public static final int DW_OP_addr = (int)0x03;
	public static final int DW_OP_deref = (int)0x06;
	public static final int DW_OP_const1u = (int)0x08;
	public static final int DW_OP_const1s = (int)0x09;
	public static final int DW_OP_const2u = (int)0x0a;
	public static final int DW_OP_const2s = (int)0x0b;
	public static final int DW_OP_const4u = (int)0x0c;
	public static final int DW_OP_const4s = (int)0x0d;
	public static final int DW_OP_const8u = (int)0x0e;
	public static final int DW_OP_const8s = (int)0x0f;
	public static final int DW_OP_constu = (int)0x10;
	public static final int DW_OP_consts = (int)0x11;
	public static final int DW_OP_dup = (int)0x12;
	public static final int DW_OP_drop = (int)0x13;
	public static final int DW_OP_over = (int)0x14;
	public static final int DW_OP_pick = (int)0x15;
	public static final int DW_OP_swap = (int)0x16;
	public static final int DW_OP_rot = (int)0x17;
	public static final int DW_OP_xderef = (int)0x18;
	public static final int DW_OP_abs = (int)0x19;
	public static final int DW_OP_and = (int)0x1a;
	public static final int DW_OP_div = (int)0x1b;
	public static final int DW_OP_minus = (int)0x1c;
	public static final int DW_OP_mod = (int)0x1d;
	public static final int DW_OP_mul = (int)0x1e;
	public static final int DW_OP_neg = (int)0x1f;
	public static final int DW_OP_not = (int)0x20;
	public static final int DW_OP_or = (int)0x21;
	public static final int DW_OP_plus = (int)0x22;
	public static final int DW_OP_plus_uconst = (int)0x23;
	public static final int DW_OP_shl = (int)0x24;
	public static final int DW_OP_shr = (int)0x25;
	public static final int DW_OP_shra = (int)0x26;
	public static final int DW_OP_xor = (int)0x27;
	public static final int DW_OP_bra = (int)0x28;
	public static final int DW_OP_eq = (int)0x29;
	public static final int DW_OP_ge = (int)0x2a;
	public static final int DW_OP_gt = (int)0x2b;
	public static final int DW_OP_le = (int)0x2c;
	public static final int DW_OP_lt = (int)0x2d;
	public static final int DW_OP_ne = (int)0x2e;
	public static final int DW_OP_skip = (int)0x2f;
	public static final int DW_OP_lit0 = (int)0x30;
	public static final int DW_OP_lit1 = (int)0x31;
	public static final int DW_OP_lit2 = (int)0x32;
	public static final int DW_OP_lit3 = (int)0x33;
	public static final int DW_OP_lit4 = (int)0x34;
	public static final int DW_OP_lit5 = (int)0x35;
	public static final int DW_OP_lit6 = (int)0x36;
	public static final int DW_OP_lit7 = (int)0x37;
	public static final int DW_OP_lit8 = (int)0x38;
	public static final int DW_OP_lit9 = (int)0x39;
	public static final int DW_OP_lit10 = (int)0x3a;
	public static final int DW_OP_lit11 = (int)0x3b;
	public static final int DW_OP_lit12 = (int)0x3c;
	public static final int DW_OP_lit13 = (int)0x3d;
	public static final int DW_OP_lit14 = (int)0x3e;
	public static final int DW_OP_lit15 = (int)0x3f;
	public static final int DW_OP_lit16 = (int)0x40;
	public static final int DW_OP_lit17 = (int)0x41;
	public static final int DW_OP_lit18 = (int)0x42;
	public static final int DW_OP_lit19 = (int)0x43;
	public static final int DW_OP_lit20 = (int)0x44;
	public static final int DW_OP_lit21 = (int)0x45;
	public static final int DW_OP_lit22 = (int)0x46;
	public static final int DW_OP_lit23 = (int)0x47;
	public static final int DW_OP_lit24 = (int)0x48;
	public static final int DW_OP_lit25 = (int)0x49;
	public static final int DW_OP_lit26 = (int)0x4a;
	public static final int DW_OP_lit27 = (int)0x4b;
	public static final int DW_OP_lit28 = (int)0x4c;
	public static final int DW_OP_lit29 = (int)0x4d;
	public static final int DW_OP_lit30 = (int)0x4e;
	public static final int DW_OP_lit31 = (int)0x4f;
	public static final int DW_OP_reg0 = (int)0x50;
	public static final int DW_OP_reg1 = (int)0x51;
	public static final int DW_OP_reg2 = (int)0x52;
	public static final int DW_OP_reg3 = (int)0x53;
	public static final int DW_OP_reg4 = (int)0x54;
	public static final int DW_OP_reg5 = (int)0x55;
	public static final int DW_OP_reg6 = (int)0x56;
	public static final int DW_OP_reg7 = (int)0x57;
	public static final int DW_OP_reg8 = (int)0x58;
	public static final int DW_OP_reg9 = (int)0x59;
	public static final int DW_OP_reg10 = (int)0x5a;
	public static final int DW_OP_reg11 = (int)0x5b;
	public static final int DW_OP_reg12 = (int)0x5c;
	public static final int DW_OP_reg13 = (int)0x5d;
	public static final int DW_OP_reg14 = (int)0x5e;
	public static final int DW_OP_reg15 = (int)0x5f;
	public static final int DW_OP_reg16 = (int)0x60;
	public static final int DW_OP_reg17 = (int)0x61;
	public static final int DW_OP_reg18 = (int)0x62;
	public static final int DW_OP_reg19 = (int)0x63;
	public static final int DW_OP_reg20 = (int)0x64;
	public static final int DW_OP_reg21 = (int)0x65;
	public static final int DW_OP_reg22 = (int)0x66;
	public static final int DW_OP_reg23 = (int)0x67;
	public static final int DW_OP_reg24 = (int)0x68;
	public static final int DW_OP_reg25 = (int)0x69;
	public static final int DW_OP_reg26 = (int)0x6a;
	public static final int DW_OP_reg27 = (int)0x6b;
	public static final int DW_OP_reg28 = (int)0x6c;
	public static final int DW_OP_reg29 = (int)0x6d;
	public static final int DW_OP_reg30 = (int)0x6e;
	public static final int DW_OP_reg31 = (int)0x6f;
	public static final int DW_OP_breg0 = (int)0x70;
	public static final int DW_OP_breg1 = (int)0x71;
	public static final int DW_OP_breg2 = (int)0x72;
	public static final int DW_OP_breg3 = (int)0x73;
	public static final int DW_OP_breg4 = (int)0x74;
	public static final int DW_OP_breg5 = (int)0x75;
	public static final int DW_OP_breg6 = (int)0x76;
	public static final int DW_OP_breg7 = (int)0x77;
	public static final int DW_OP_breg8 = (int)0x78;
	public static final int DW_OP_breg9 = (int)0x79;
	public static final int DW_OP_breg10 = (int)0x7a;
	public static final int DW_OP_breg11 = (int)0x7b;
	public static final int DW_OP_breg12 = (int)0x7c;
	public static final int DW_OP_breg13 = (int)0x7d;
	public static final int DW_OP_breg14 = (int)0x7e;
	public static final int DW_OP_breg15 = (int)0x7f;
	public static final int DW_OP_breg16 = (int)0x80;
	public static final int DW_OP_breg17 = (int)0x81;
	public static final int DW_OP_breg18 = (int)0x82;
	public static final int DW_OP_breg19 = (int)0x83;
	public static final int DW_OP_breg20 = (int)0x84;
	public static final int DW_OP_breg21 = (int)0x85;
	public static final int DW_OP_breg22 = (int)0x86;
	public static final int DW_OP_breg23 = (int)0x87;
	public static final int DW_OP_breg24 = (int)0x88;
	public static final int DW_OP_breg25 = (int)0x89;
	public static final int DW_OP_breg26 = (int)0x8a;
	public static final int DW_OP_breg27 = (int)0x8b;
	public static final int DW_OP_breg28 = (int)0x8c;
	public static final int DW_OP_breg29 = (int)0x8d;
	public static final int DW_OP_breg30 = (int)0x8e;
	public static final int DW_OP_breg31 = (int)0x8f;
	public static final int DW_OP_regx = (int)0x90;
	public static final int DW_OP_fbreg = (int)0x91;
	public static final int DW_OP_bregx = (int)0x92;
	public static final int DW_OP_piece = (int)0x93;
	public static final int DW_OP_deref_size = (int)0x94;
	public static final int DW_OP_xderef_size = (int)0x95;
	public static final int DW_OP_nop = (int)0x96;
	public static final int DW_OP_push_object_address = (int)0x97;
	public static final int DW_OP_call2 = (int)0x98;
	public static final int DW_OP_call4 = (int)0x99;
	public static final int DW_OP_call_ref = (int)0x9a;
	public static final int DW_OP_form_tls_address = (int)0x9b;
	public static final int DW_OP_call_frame_cfa = (int)0x9c;
	public static final int DW_OP_bit_piece = (int)0x9d;
	public static final int DW_OP_implicit_value = (int)0x9e;
	public static final int DW_OP_stack_value = (int)0x9f;
	public static final int DW_OP_implicit_pointer = (int)0xa0;
	public static final int DW_OP_addrx = (int)0xa1;
	public static final int DW_OP_constx = (int)0xa2;
	public static final int DW_OP_entry_value = (int)0xa3;
	public static final int DW_OP_const_type = (int)0xa4;
	public static final int DW_OP_regval_type = (int)0xa5;
	public static final int DW_OP_deref_type = (int)0xa6;
	public static final int DW_OP_xderef_type = (int)0xa7;
	public static final int DW_OP_convert = (int)0xa8;
	public static final int DW_OP_reinterpret = (int)0xa9;
	public static final int DW_OP_GNU_push_tls_address = (int)0xe0;
	public static final int DW_OP_lo_user = (int)0xe0;
	public static final int DW_OP_GNU_uninit = (int)0xf0;
	public static final int DW_OP_GNU_encoded_addr = (int)0xf1;
	public static final int DW_OP_GNU_implicit_pointer = (int)0xf2;
	public static final int DW_OP_GNU_entry_value = (int)0xf3;
	public static final int DW_OP_GNU_const_type = (int)0xf4;
	public static final int DW_OP_GNU_regval_type = (int)0xf5;
	public static final int DW_OP_GNU_deref_type = (int)0xf6;
	public static final int DW_OP_GNU_convert = (int)0xf7;
	public static final int DW_OP_GNU_reinterpret = (int)0xf9;
	public static final int DW_OP_GNU_parameter_ref = (int)0xfa;
	public static final int DW_OP_GNU_addr_index = (int)0xfb;
	public static final int DW_OP_GNU_const_index = (int)0xfc;
	public static final int DW_OP_GNU_variable_value = (int)0xfd;
	public static final int DW_OP_HP_unknown = (int)0xe0;
	public static final int DW_OP_HP_is_value = (int)0xe1;
	public static final int DW_OP_HP_fltconst4 = (int)0xe2;
	public static final int DW_OP_HP_fltconst8 = (int)0xe3;
	public static final int DW_OP_HP_mod_range = (int)0xe4;
	public static final int DW_OP_HP_unmod_range = (int)0xe5;
	public static final int DW_OP_HP_tls = (int)0xe6;
	public static final int DW_OP_INTEL_bit_piece = (int)0xe8;
	public static final int DW_OP_APPLE_uninit = (int)0xf0;
	public static final int DW_OP_PGI_omp_thread_num = (int)0xf8;
	public static final int DW_OP_hi_user = (int)0xff;
	public static final int DW_ATE_address = (int)0x01;
	public static final int DW_ATE_boolean = (int)0x02;
	public static final int DW_ATE_complex_float = (int)0x03;
	public static final int DW_ATE_float = (int)0x04;
	public static final int DW_ATE_signed = (int)0x05;
	public static final int DW_ATE_signed_char = (int)0x06;
	public static final int DW_ATE_unsigned = (int)0x07;
	public static final int DW_ATE_unsigned_char = (int)0x08;
	public static final int DW_ATE_imaginary_float = (int)0x09;
	public static final int DW_ATE_packed_decimal = (int)0x0a;
	public static final int DW_ATE_numeric_string = (int)0x0b;
	public static final int DW_ATE_edited = (int)0x0c;
	public static final int DW_ATE_signed_fixed = (int)0x0d;
	public static final int DW_ATE_unsigned_fixed = (int)0x0e;
	public static final int DW_ATE_decimal_float = (int)0x0f;
	public static final int DW_ATE_UTF = (int)0x10;
	public static final int DW_ATE_UCS = (int)0x11;
	public static final int DW_ATE_ASCII = (int)0x12;
	public static final int DW_ATE_ALTIUM_fract = (int)0x80;
	public static final int DW_ATE_lo_user = (int)0x80;
	public static final int DW_ATE_ALTIUM_accum = (int)0x81;
	public static final int DW_ATE_HP_float80 = (int)0x80;
	public static final int DW_ATE_HP_complex_float80 = (int)0x81;
	public static final int DW_ATE_HP_float128 = (int)0x82;
	public static final int DW_ATE_HP_complex_float128 = (int)0x83;
	public static final int DW_ATE_HP_floathpintel = (int)0x84;
	public static final int DW_ATE_HP_imaginary_float80 = (int)0x85;
	public static final int DW_ATE_HP_imaginary_float128 = (int)0x86;
	public static final int DW_ATE_SUN_interval_float = (int)0x91;
	public static final int DW_ATE_SUN_imaginary_float = (int)0x92;
	public static final int DW_ATE_hi_user = (int)0xff;
	public static final int DW_DEFAULTED_no = (int)0x0;
	public static final int DW_DEFAULTED_in_class = (int)0x1;
	public static final int DW_DEFAULTED_out_of_class = (int)0x2;
	public static final int DW_IDX_compile_unit = (int)0x1;
	public static final int DW_IDX_type_unit = (int)0x2;
	public static final int DW_IDX_die_offset = (int)0x3;
	public static final int DW_IDX_parent = (int)0x4;
	public static final int DW_IDX_type_hash = (int)0x5;
	public static final int DW_IDX_lo_user = (int)0x2000;
	public static final int DW_IDX_hi_user = (int)0x0fff;
	public static final int DW_LLEX_end_of_list_entry = (int)0x0;
	public static final int DW_LLEX_base_address_selection_entry = (int)0x01;
	public static final int DW_LLEX_start_end_entry = (int)0x02;
	public static final int DW_LLEX_start_length_entry = (int)0x03;
	public static final int DW_LLEX_offset_pair_entry = (int)0x04;
	public static final int DW_LLE_end_of_list = (int)0x0;
	public static final int DW_LLE_base_addressx = (int)0x01;
	public static final int DW_LLE_startx_endx = (int)0x02;
	public static final int DW_LLE_startx_length = (int)0x03;
	public static final int DW_LLE_offset_pair = (int)0x04;
	public static final int DW_LLE_default_location = (int)0x05;
	public static final int DW_LLE_base_address = (int)0x06;
	public static final int DW_LLE_start_end = (int)0x07;
	public static final int DW_LLE_start_length = (int)0x08;
	public static final int DW_RLE_end_of_list = (int)0x00;
	public static final int DW_RLE_base_addressx = (int)0x01;
	public static final int DW_RLE_startx_endx = (int)0x02;
	public static final int DW_RLE_startx_length = (int)0x03;
	public static final int DW_RLE_offset_pair = (int)0x04;
	public static final int DW_RLE_base_address = (int)0x05;
	public static final int DW_RLE_start_end = (int)0x06;
	public static final int DW_RLE_start_length = (int)0x07;
	public static final int DW_GNUIVIS_global = (int)0;
	public static final int DW_GNUIVIS_static = (int)1;
	public static final int DW_GNUIKIND_none = (int)0;
	public static final int DW_GNUIKIND_type = (int)1;
	public static final int DW_GNUIKIND_variable = (int)2;
	public static final int DW_GNUIKIND_function = (int)3;
	public static final int DW_GNUIKIND_other = (int)4;
	public static final int DW_UT_compile = (int)0x01;
	public static final int DW_UT_type = (int)0x02;
	public static final int DW_UT_partial = (int)0x03;
	public static final int DW_UT_skeleton = (int)0x04;
	public static final int DW_UT_split_compile = (int)0x05;
	public static final int DW_UT_split_type = (int)0x06;
	public static final int DW_UT_lo_user = (int)0x80;
	public static final int DW_UT_hi_user = (int)0xff;
	public static final int DW_SECT_INFO = (int)1;
	public static final int DW_SECT_TYPES = (int)2;
	public static final int DW_SECT_ABBREV = (int)3;
	public static final int DW_SECT_LINE = (int)4;
	public static final int DW_SECT_LOCLISTS = (int)5;
	public static final int DW_SECT_STR_OFFSETS = (int)6;
	public static final int DW_SECT_MACRO = (int)7;
	public static final int DW_SECT_RNGLISTS = (int)8;
	public static final int DW_DS_unsigned = (int)0x01;
	public static final int DW_DS_leading_overpunch = (int)0x02;
	public static final int DW_DS_trailing_overpunch = (int)0x03;
	public static final int DW_DS_leading_separate = (int)0x04;
	public static final int DW_DS_trailing_separate = (int)0x05;
	public static final int DW_END_default = (int)0x00;
	public static final int DW_END_big = (int)0x01;
	public static final int DW_END_little = (int)0x02;
	public static final int DW_END_lo_user = (int)0x40;
	public static final int DW_END_hi_user = (int)0xff;
	public static final int DW_ATCF_lo_user = (int)0x40;
	public static final int DW_ATCF_SUN_mop_bitfield = (int)0x41;
	public static final int DW_ATCF_SUN_mop_spill = (int)0x42;
	public static final int DW_ATCF_SUN_mop_scopy = (int)0x43;
	public static final int DW_ATCF_SUN_func_start = (int)0x44;
	public static final int DW_ATCF_SUN_end_ctors = (int)0x45;
	public static final int DW_ATCF_SUN_branch_target = (int)0x46;
	public static final int DW_ATCF_SUN_mop_stack_probe = (int)0x47;
	public static final int DW_ATCF_SUN_func_epilog = (int)0x48;
	public static final int DW_ATCF_hi_user = (int)0xff;
	public static final int DW_ACCESS_public = (int)0x01;
	public static final int DW_ACCESS_protected = (int)0x02;
	public static final int DW_ACCESS_private = (int)0x03;
	public static final int DW_VIS_local = (int)0x01;
	public static final int DW_VIS_exported = (int)0x02;
	public static final int DW_VIS_qualified = (int)0x03;
	public static final int DW_VIRTUALITY_none = (int)0x00;
	public static final int DW_VIRTUALITY_virtual = (int)0x01;
	public static final int DW_VIRTUALITY_pure_virtual = (int)0x02;
	public static final int DW_LANG_C89 = (int)0x0001;
	public static final int DW_LANG_C = (int)0x0002;
	public static final int DW_LANG_Ada83 = (int)0x0003;
	public static final int DW_LANG_C_plus_plus = (int)0x0004;
	public static final int DW_LANG_Cobol74 = (int)0x0005;
	public static final int DW_LANG_Cobol85 = (int)0x0006;
	public static final int DW_LANG_Fortran77 = (int)0x0007;
	public static final int DW_LANG_Fortran90 = (int)0x0008;
	public static final int DW_LANG_Pascal83 = (int)0x0009;
	public static final int DW_LANG_Modula2 = (int)0x000a;
	public static final int DW_LANG_Java = (int)0x000b;
	public static final int DW_LANG_C99 = (int)0x000c;
	public static final int DW_LANG_Ada95 = (int)0x000d;
	public static final int DW_LANG_Fortran95 = (int)0x000e;
	public static final int DW_LANG_PLI = (int)0x000f;
	public static final int DW_LANG_ObjC = (int)0x0010;
	public static final int DW_LANG_ObjC_plus_plus = (int)0x0011;
	public static final int DW_LANG_UPC = (int)0x0012;
	public static final int DW_LANG_D = (int)0x0013;
	public static final int DW_LANG_Python = (int)0x0014;
	public static final int DW_LANG_OpenCL = (int)0x0015;
	public static final int DW_LANG_Go = (int)0x0016;
	public static final int DW_LANG_Modula3 = (int)0x0017;
	public static final int DW_LANG_Haskel = (int)0x0018;
	public static final int DW_LANG_C_plus_plus_03 = (int)0x0019;
	public static final int DW_LANG_C_plus_plus_11 = (int)0x001a;
	public static final int DW_LANG_OCaml = (int)0x001b;
	public static final int DW_LANG_Rust = (int)0x001c;
	public static final int DW_LANG_C11 = (int)0x001d;
	public static final int DW_LANG_Swift = (int)0x001e;
	public static final int DW_LANG_Julia = (int)0x001f;
	public static final int DW_LANG_Dylan = (int)0x0020;
	public static final int DW_LANG_C_plus_plus_14 = (int)0x0021;
	public static final int DW_LANG_Fortran03 = (int)0x0022;
	public static final int DW_LANG_Fortran08 = (int)0x0023;
	public static final int DW_LANG_RenderScript = (int)0x0024;
	public static final int DW_LANG_BLISS = (int)0x0025;
	public static final int DW_LANG_lo_user = (int)0x8000;
	public static final int DW_LANG_Mips_Assembler = (int)0x8001;
	public static final int DW_LANG_Upc = (int)0x8765;
	public static final int DW_LANG_ALTIUM_Assembler = (int)0x9101;
	public static final int DW_LANG_SUN_Assembler = (int)0x9001;
	public static final int DW_LANG_hi_user = (int)0xffff;
	public static final int DW_ID_case_sensitive = (int)0x00;
	public static final int DW_ID_up_case = (int)0x01;
	public static final int DW_ID_down_case = (int)0x02;
	public static final int DW_ID_case_insensitive = (int)0x03;
	public static final int DW_CC_normal = (int)0x01;
	public static final int DW_CC_program = (int)0x02;
	public static final int DW_CC_nocall = (int)0x03;
	public static final int DW_CC_pass_by_reference = (int)0x04;
	public static final int DW_CC_pass_by_value = (int)0x05;
	public static final int DW_CC_lo_user = (int)0x40;
	public static final int DW_CC_GNU_renesas_sh = (int)0x40;
	public static final int DW_CC_GNU_borland_fastcall_i386 = (int)0x41;
	public static final int DW_CC_ALTIUM_interrupt = (int)0x65;
	public static final int DW_CC_ALTIUM_near_system_stack = (int)0x66;
	public static final int DW_CC_ALTIUM_near_user_stack = (int)0x67;
	public static final int DW_CC_ALTIUM_huge_user_stack = (int)0x68;
	public static final int DW_CC_hi_user = (int)0xff;
	public static final int DW_INL_not_inlined = (int)0x00;
	public static final int DW_INL_inlined = (int)0x01;
	public static final int DW_INL_declared_not_inlined = (int)0x02;
	public static final int DW_INL_declared_inlined = (int)0x03;
	public static final int DW_ORD_row_major = (int)0x00;
	public static final int DW_ORD_col_major = (int)0x01;
	public static final int DW_DSC_label = (int)0x00;
	public static final int DW_DSC_range = (int)0x01;
	public static final int DW_LNCT_path = (int)0x1;
	public static final int DW_LNCT_directory_index = (int)0x2;
	public static final int DW_LNCT_timestamp = (int)0x3;
	public static final int DW_LNCT_size = (int)0x4;
	public static final int DW_LNCT_MD5 = (int)0x5;
	public static final int DW_LNCT_GNU_subprogram_name = (int)0x6;
	public static final int DW_LNCT_GNU_decl_file = (int)0x7;
	public static final int DW_LNCT_GNU_decl_line = (int)0x8;
	public static final int DW_LNCT_lo_user = (int)0x2000;
	public static final int DW_LNCT_hi_user = (int)0x3fff;
	public static final int DW_LNS_copy = (int)0x01;
	public static final int DW_LNS_advance_pc = (int)0x02;
	public static final int DW_LNS_advance_line = (int)0x03;
	public static final int DW_LNS_set_file = (int)0x04;
	public static final int DW_LNS_set_column = (int)0x05;
	public static final int DW_LNS_negate_stmt = (int)0x06;
	public static final int DW_LNS_set_basic_block = (int)0x07;
	public static final int DW_LNS_const_add_pc = (int)0x08;
	public static final int DW_LNS_fixed_advance_pc = (int)0x09;
	public static final int DW_LNS_set_prologue_end = (int)0x0a;
	public static final int DW_LNS_set_epilogue_begin = (int)0x0b;
	public static final int DW_LNS_set_isa = (int)0x0c;
	public static final int DW_LNS_set_address_from_logical = (int)0x0d;
	public static final int DW_LNS_set_subprogram = (int)0x0d;
	public static final int DW_LNS_inlined_call = (int)0x0e;
	public static final int DW_LNS_pop_context = (int)0x0f;
	public static final int DW_LNE_end_sequence = (int)0x01;
	public static final int DW_LNE_set_address = (int)0x02;
	public static final int DW_LNE_define_file = (int)0x03;
	public static final int DW_LNE_set_discriminator = (int)0x04;
	public static final int DW_LNE_HP_negate_is_UV_update = (int)0x11;
	public static final int DW_LNE_HP_push_context = (int)0x12;
	public static final int DW_LNE_HP_pop_context = (int)0x13;
	public static final int DW_LNE_HP_set_file_line_column = (int)0x14;
	public static final int DW_LNE_HP_set_routine_name = (int)0x15;
	public static final int DW_LNE_HP_set_sequence = (int)0x16;
	public static final int DW_LNE_HP_negate_post_semantics = (int)0x17;
	public static final int DW_LNE_HP_negate_function_exit = (int)0x18;
	public static final int DW_LNE_HP_negate_front_end_logical = (int)0x19;
	public static final int DW_LNE_HP_define_proc = (int)0x20;
	public static final int DW_LNE_HP_source_file_correlation = (int)0x80;
	public static final int DW_LNE_lo_user = (int)0x80;
	public static final int DW_LNE_hi_user = (int)0xff;
	public static final int DW_ISA_UNKNOWN = (int)0;
	public static final int DW_ISA_ARM_thumb = (int)1;
	public static final int DW_ISA_ARM_arm = (int)2;
	public static final int DW_MACRO_define = (int)0x01;
	public static final int DW_MACRO_undef = (int)0x02;
	public static final int DW_MACRO_start_file = (int)0x03;
	public static final int DW_MACRO_end_file = (int)0x04;
	public static final int DW_MACRO_define_strp = (int)0x05;
	public static final int DW_MACRO_undef_strp = (int)0x06;
	public static final int DW_MACRO_import = (int)0x07;
	public static final int DW_MACRO_define_sup = (int)0x08;
	public static final int DW_MACRO_undef_sup = (int)0x09;
	public static final int DW_MACRO_import_sup = (int)0x0a;
	public static final int DW_MACRO_define_strx = (int)0x0b;
	public static final int DW_MACRO_undef_strx = (int)0x0c;
	public static final int DW_MACRO_lo_user = (int)0xe0;
	public static final int DW_MACRO_hi_user = (int)0xff;
	public static final int DW_MACINFO_define = (int)0x01;
	public static final int DW_MACINFO_undef = (int)0x02;
	public static final int DW_MACINFO_start_file = (int)0x03;
	public static final int DW_MACINFO_end_file = (int)0x04;
	public static final int DW_MACINFO_vendor_ext = (int)0xff;
	public static final int DW_CFA_advance_loc = (int)0x40;
	public static final int DW_CFA_offset = (int)0x80;
	public static final int DW_CFA_restore = (int)0xc0;
	public static final int DW_CFA_extended = (int)0;
	public static final int DW_CFA_nop = (int)0x00;
	public static final int DW_CFA_set_loc = (int)0x01;
	public static final int DW_CFA_advance_loc1 = (int)0x02;
	public static final int DW_CFA_advance_loc2 = (int)0x03;
	public static final int DW_CFA_advance_loc4 = (int)0x04;
	public static final int DW_CFA_offset_extended = (int)0x05;
	public static final int DW_CFA_restore_extended = (int)0x06;
	public static final int DW_CFA_undefined = (int)0x07;
	public static final int DW_CFA_same_value = (int)0x08;
	public static final int DW_CFA_register = (int)0x09;
	public static final int DW_CFA_remember_state = (int)0x0a;
	public static final int DW_CFA_restore_state = (int)0x0b;
	public static final int DW_CFA_def_cfa = (int)0x0c;
	public static final int DW_CFA_def_cfa_register = (int)0x0d;
	public static final int DW_CFA_def_cfa_offset = (int)0x0e;
	public static final int DW_CFA_def_cfa_expression = (int)0x0f;
	public static final int DW_CFA_expression = (int)0x10;
	public static final int DW_CFA_offset_extended_sf = (int)0x11;
	public static final int DW_CFA_def_cfa_sf = (int)0x12;
	public static final int DW_CFA_def_cfa_offset_sf = (int)0x13;
	public static final int DW_CFA_val_offset = (int)0x14;
	public static final int DW_CFA_val_offset_sf = (int)0x15;
	public static final int DW_CFA_val_expression = (int)0x16;
	public static final int DW_CFA_lo_user = (int)0x1c;
	public static final int DW_CFA_low_user = (int)0x1c;
	public static final int DW_CFA_MIPS_advance_loc8 = (int)0x1d;
	public static final int DW_CFA_GNU_window_save = (int)0x2d;
	public static final int DW_CFA_GNU_args_size = (int)0x2e;
	public static final int DW_CFA_GNU_negative_offset_extended = (int)0x2f;
	public static final int DW_CFA_METAWARE_info = (int)0x34;
	public static final int DW_CFA_high_user = (int)0x3f;
	public static final int DW_EH_PE_absptr = (int)0x00;
	public static final int DW_EH_PE_uleb128 = (int)0x01;
	public static final int DW_EH_PE_udata2 = (int)0x02;
	public static final int DW_EH_PE_udata4 = (int)0x03;
	public static final int DW_EH_PE_udata8 = (int)0x04;
	public static final int DW_EH_PE_sleb128 = (int)0x09;
	public static final int DW_EH_PE_sdata2 = (int)0x0A;
	public static final int DW_EH_PE_sdata4 = (int)0x0B;
	public static final int DW_EH_PE_sdata8 = (int)0x0C;
	public static final int DW_EH_PE_pcrel = (int)0x10;
	public static final int DW_EH_PE_textrel = (int)0x20;
	public static final int DW_EH_PE_datarel = (int)0x30;
	public static final int DW_EH_PE_funcrel = (int)0x40;
	public static final int DW_EH_PE_aligned = (int)0x50;
	public static final int DW_EH_PE_omit = (int)0xff;
	public static final int DW_FRAME_CFA_COL = (int)0;
	public static final int DW_FRAME_REG1 = (int)1;
	public static final int DW_FRAME_REG2 = (int)2;
	public static final int DW_FRAME_REG3 = (int)3;
	public static final int DW_FRAME_REG4 = (int)4;
	public static final int DW_FRAME_REG5 = (int)5;
	public static final int DW_FRAME_REG6 = (int)6;
	public static final int DW_FRAME_REG7 = (int)7;
	public static final int DW_FRAME_REG8 = (int)8;
	public static final int DW_FRAME_REG9 = (int)9;
	public static final int DW_FRAME_REG10 = (int)10;
	public static final int DW_FRAME_REG11 = (int)11;
	public static final int DW_FRAME_REG12 = (int)12;
	public static final int DW_FRAME_REG13 = (int)13;
	public static final int DW_FRAME_REG14 = (int)14;
	public static final int DW_FRAME_REG15 = (int)15;
	public static final int DW_FRAME_REG16 = (int)16;
	public static final int DW_FRAME_REG17 = (int)17;
	public static final int DW_FRAME_REG18 = (int)18;
	public static final int DW_FRAME_REG19 = (int)19;
	public static final int DW_FRAME_REG20 = (int)20;
	public static final int DW_FRAME_REG21 = (int)21;
	public static final int DW_FRAME_REG22 = (int)22;
	public static final int DW_FRAME_REG23 = (int)23;
	public static final int DW_FRAME_REG24 = (int)24;
	public static final int DW_FRAME_REG25 = (int)25;
	public static final int DW_FRAME_REG26 = (int)26;
	public static final int DW_FRAME_REG27 = (int)27;
	public static final int DW_FRAME_REG28 = (int)28;
	public static final int DW_FRAME_REG29 = (int)29;
	public static final int DW_FRAME_REG30 = (int)30;
	public static final int DW_FRAME_REG31 = (int)31;
	public static final int DW_FRAME_FREG0 = (int)32;
	public static final int DW_FRAME_FREG1 = (int)33;
	public static final int DW_FRAME_FREG2 = (int)34;
	public static final int DW_FRAME_FREG3 = (int)35;
	public static final int DW_FRAME_FREG4 = (int)36;
	public static final int DW_FRAME_FREG5 = (int)37;
	public static final int DW_FRAME_FREG6 = (int)38;
	public static final int DW_FRAME_FREG7 = (int)39;
	public static final int DW_FRAME_FREG8 = (int)40;
	public static final int DW_FRAME_FREG9 = (int)41;
	public static final int DW_FRAME_FREG10 = (int)42;
	public static final int DW_FRAME_FREG11 = (int)43;
	public static final int DW_FRAME_FREG12 = (int)44;
	public static final int DW_FRAME_FREG13 = (int)45;
	public static final int DW_FRAME_FREG14 = (int)46;
	public static final int DW_FRAME_FREG15 = (int)47;
	public static final int DW_FRAME_FREG16 = (int)48;
	public static final int DW_FRAME_FREG17 = (int)49;
	public static final int DW_FRAME_FREG18 = (int)50;
	public static final int DW_FRAME_FREG19 = (int)51;
	public static final int DW_FRAME_FREG20 = (int)52;
	public static final int DW_FRAME_FREG21 = (int)53;
	public static final int DW_FRAME_FREG22 = (int)54;
	public static final int DW_FRAME_FREG23 = (int)55;
	public static final int DW_FRAME_FREG24 = (int)56;
	public static final int DW_FRAME_FREG25 = (int)57;
	public static final int DW_FRAME_FREG26 = (int)58;
	public static final int DW_FRAME_FREG27 = (int)59;
	public static final int DW_FRAME_FREG28 = (int)60;
	public static final int DW_FRAME_FREG29 = (int)61;
	public static final int DW_FRAME_FREG30 = (int)62;
	public static final int DW_FRAME_FREG31 = (int)63;
	public static final int DW_FRAME_FREG32 = (int)64;
	public static final int DW_FRAME_FREG33 = (int)65;
	public static final int DW_FRAME_FREG34 = (int)66;
	public static final int DW_FRAME_FREG35 = (int)67;
	public static final int DW_FRAME_FREG36 = (int)68;
	public static final int DW_FRAME_FREG37 = (int)69;
	public static final int DW_FRAME_FREG38 = (int)70;
	public static final int DW_FRAME_FREG39 = (int)71;
	public static final int DW_FRAME_FREG40 = (int)72;
	public static final int DW_FRAME_FREG41 = (int)73;
	public static final int DW_FRAME_FREG42 = (int)74;
	public static final int DW_FRAME_FREG43 = (int)75;
	public static final int DW_FRAME_FREG44 = (int)76;
	public static final int DW_FRAME_FREG45 = (int)77;
	public static final int DW_FRAME_FREG46 = (int)78;
	public static final int DW_FRAME_FREG47 = (int)79;
	public static final int DW_FRAME_FREG48 = (int)80;
	public static final int DW_FRAME_FREG49 = (int)81;
	public static final int DW_FRAME_FREG50 = (int)82;
	public static final int DW_FRAME_FREG51 = (int)83;
	public static final int DW_FRAME_FREG52 = (int)84;
	public static final int DW_FRAME_FREG53 = (int)85;
	public static final int DW_FRAME_FREG54 = (int)86;
	public static final int DW_FRAME_FREG55 = (int)87;
	public static final int DW_FRAME_FREG56 = (int)88;
	public static final int DW_FRAME_FREG57 = (int)89;
	public static final int DW_FRAME_FREG58 = (int)90;
	public static final int DW_FRAME_FREG59 = (int)91;
	public static final int DW_FRAME_FREG60 = (int)92;
	public static final int DW_FRAME_FREG61 = (int)93;
	public static final int DW_FRAME_FREG62 = (int)94;
	public static final int DW_FRAME_FREG63 = (int)95;
	public static final int DW_FRAME_FREG64 = (int)96;
	public static final int DW_FRAME_FREG65 = (int)97;
	public static final int DW_FRAME_FREG66 = (int)98;
	public static final int DW_FRAME_FREG67 = (int)99;
	public static final int DW_FRAME_FREG68 = (int)100;
	public static final int DW_FRAME_FREG69 = (int)101;
	public static final int DW_FRAME_FREG70 = (int)102;
	public static final int DW_FRAME_FREG71 = (int)103;
	public static final int DW_FRAME_FREG72 = (int)104;
	public static final int DW_FRAME_FREG73 = (int)105;
	public static final int DW_FRAME_FREG74 = (int)106;
	public static final int DW_FRAME_FREG75 = (int)107;
	public static final int DW_FRAME_FREG76 = (int)108;
	public static final int DW_FRAME_HIGHEST_NORMAL_REGISTER = (int)188;
	public static final int DW_FRAME_LAST_REG_NUM = (int)(DW_FRAME_HIGHEST_NORMAL_REGISTER + 3);
	public static final int DW_FRAME_RA_COL = (int)(DW_FRAME_HIGHEST_NORMAL_REGISTER + 1);
	public static final int DW_FRAME_STATIC_LINK = (int)(DW_FRAME_HIGHEST_NORMAL_REGISTER + 2);
	public static final int DW_CHILDREN_no = (int)0x00;
	public static final int DW_CHILDREN_yes = (int)0x01;
	public static final int DW_ADDR_none = (int)0;

	public static final long DW_DLV_NOCOUNT = -1;


	public interface Dwarf_Handler extends Callback {
		/** @param Dwarf_Error1 errarg */
		void apply(Pointer Dwarf_Error1, Pointer Dwarf_Ptr1);
	};
	public interface dwarf_printf_callback_function_type extends Callback {
		/** @param voidPtr1 linecontent */
		void apply(Pointer voidPtr1, Pointer charPtr1);
	};
	public interface Dwarf_Callback_Func extends Callback {
		int apply(Pointer charPtr1, int int1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, long Dwarf_Unsigned3, long Dwarf_Unsigned4, LongByReference Dwarf_UnsignedPtr1, Pointer voidPtr1, IntByReference intPtr1);
	};
	public interface dwarf_get_endian_copy_function_callback extends Callback {
		/**
		 * @param voidPtr1 src<br>
		 * @param voidPtr2 srclen
		 */
		void apply(Pointer voidPtr1, Pointer voidPtr2, NativeLong u1);
	};
																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																						/**
	 * error<br>
	 * Original signature : <code>char* dwarf_errmsg(Dwarf_Error)</code><br>
	 * <i>native declaration : line 3694</i><br>
	 * @deprecated use the safer methods {@link #dwarf_errmsg(libdwarf.LibdwarfLibrary.Dwarf_Error)} and {@link #dwarf_errmsg(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer dwarf_errmsg(Pointer Dwarf_Error1);
	/**
	 * error<br>
	 * Original signature : <code>char* dwarf_errmsg(Dwarf_Error)</code><br>
	 * <i>native declaration : line 3694</i>
	 */
	Pointer dwarf_errmsg(LibdwarfLibrary.Dwarf_Error Dwarf_Error1);
																			/**
	 * Returns DW_DLV_OK or DW_DLV_ERROR and<br>
	 * if DW_DLV_OK returns the Dwarf_P_Debug<br>
	 * pointer through the dbg_returned argument.<br>
	 * Original signature : <code>int dwarf_producer_init(Dwarf_Unsigned, Dwarf_Callback_Func, Dwarf_Handler, Dwarf_Ptr, void*, const char*, const char*, const char*, Dwarf_P_Debug*, Dwarf_Error*)</code><br>
	 * @param isa_name See isa/abi names in pro_init.c<br>
	 * @param dwarf_version V2 V3 V4 or V5.<br>
	 * @param extra Extra input strings, comma separated.<br>
	 * @param Dwarf_P_DebugPtr1 dbg_returned<br>
	 * <i>native declaration : line 3759</i><br>
	 * @deprecated use the safer methods {@link #dwarf_producer_init(long, libdwarf.LibdwarfLibrary.Dwarf_Callback_Func, libdwarf.LibdwarfLibrary.Dwarf_Handler, com.sun.jna.Pointer, com.sun.jna.Pointer, java.lang.String, java.lang.String, java.lang.String, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_producer_init(long, libdwarf.LibdwarfLibrary.Dwarf_Callback_Func, libdwarf.LibdwarfLibrary.Dwarf_Handler, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int dwarf_producer_init(long Dwarf_Unsigned1, LibdwarfLibrary.Dwarf_Callback_Func Dwarf_Callback_Func1, LibdwarfLibrary.Dwarf_Handler Dwarf_Handler1, Pointer Dwarf_Ptr1, Pointer voidPtr1, Pointer isa_name, Pointer dwarf_version, Pointer extra, Pointer Dwarf_P_DebugPtr1, Pointer Dwarf_ErrorPtr1);
	/**
	 * Returns DW_DLV_OK or DW_DLV_ERROR and<br>
	 * if DW_DLV_OK returns the Dwarf_P_Debug<br>
	 * pointer through the dbg_returned argument.<br>
	 * Original signature : <code>int dwarf_producer_init(Dwarf_Unsigned, Dwarf_Callback_Func, Dwarf_Handler, Dwarf_Ptr, void*, const char*, const char*, const char*, Dwarf_P_Debug*, Dwarf_Error*)</code><br>
	 * @param isa_name See isa/abi names in pro_init.c<br>
	 * @param dwarf_version V2 V3 V4 or V5.<br>
	 * @param extra Extra input strings, comma separated.<br>
	 * @param Dwarf_P_DebugPtr1 dbg_returned<br>
	 * <i>native declaration : line 3759</i>
	 */
	int dwarf_producer_init(long Dwarf_Unsigned1, LibdwarfLibrary.Dwarf_Callback_Func Dwarf_Callback_Func1, LibdwarfLibrary.Dwarf_Handler Dwarf_Handler1, Pointer Dwarf_Ptr1, Pointer voidPtr1, String isa_name, String dwarf_version, String extra, PointerByReference Dwarf_P_DebugPtr1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * Returns DW_DLV_OK or DW_DLV_ERROR and<br>
	 * if DW_DLV_OK returns the Dwarf_P_Debug<br>
	 * pointer through the dbg_returned argument.<br>
	 * Original signature : <code>int dwarf_producer_init(Dwarf_Unsigned, Dwarf_Callback_Func, Dwarf_Handler, Dwarf_Ptr, void*, const char*, const char*, const char*, Dwarf_P_Debug*, Dwarf_Error*)</code><br>
	 * @param isa_name See isa/abi names in pro_init.c<br>
	 * @param dwarf_version V2 V3 V4 or V5.<br>
	 * @param extra Extra input strings, comma separated.<br>
	 * @param Dwarf_P_DebugPtr1 dbg_returned<br>
	 * <i>native declaration : line 3759</i>
	 */
	int dwarf_producer_init(long Dwarf_Unsigned1, LibdwarfLibrary.Dwarf_Callback_Func Dwarf_Callback_Func1, LibdwarfLibrary.Dwarf_Handler Dwarf_Handler1, Pointer Dwarf_Ptr1, Pointer voidPtr1, Pointer isa_name, Pointer dwarf_version, Pointer extra, PointerByReference Dwarf_P_DebugPtr1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * Returns DW_DLV_OK or DW_DLV_ERROR.<br>
	 * The desired form must be DW_FORM_string (the default)<br>
	 * or DW_FORM_strp.<br>
	 * dbg<br>
	 * Original signature : <code>int dwarf_pro_set_default_string_form(Dwarf_P_Debug, int, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3774</i><br>
	 * @deprecated use the safer methods {@link #dwarf_pro_set_default_string_form(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, int, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_pro_set_default_string_form(com.sun.jna.Pointer, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int dwarf_pro_set_default_string_form(Pointer Dwarf_P_Debug1, int int1, Pointer Dwarf_ErrorPtr1);
	/**
	 * Returns DW_DLV_OK or DW_DLV_ERROR.<br>
	 * The desired form must be DW_FORM_string (the default)<br>
	 * or DW_FORM_strp.<br>
	 * dbg<br>
	 * Original signature : <code>int dwarf_pro_set_default_string_form(Dwarf_P_Debug, int, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3774</i>
	 */
	int dwarf_pro_set_default_string_form(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, int int1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * Returns DW_DLV_OK or DW_DLV_ERROR.<br>
	 * The desired form must be DW_FORM_string (the default)<br>
	 * or DW_FORM_strp.<br>
	 * dbg<br>
	 * Original signature : <code>int dwarf_pro_set_default_string_form(Dwarf_P_Debug, int, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3774</i>
	 */
	int dwarf_pro_set_default_string_form(Pointer Dwarf_P_Debug1, int int1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * the old interface. Still supported.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_Signed dwarf_transform_to_disk_form(Dwarf_P_Debug, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3779</i><br>
	 * @deprecated use the safer methods {@link #dwarf_transform_to_disk_form(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_transform_to_disk_form(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	long dwarf_transform_to_disk_form(Pointer Dwarf_P_Debug1, Pointer Dwarf_ErrorPtr1);
	/**
	 * the old interface. Still supported.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_Signed dwarf_transform_to_disk_form(Dwarf_P_Debug, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3779</i>
	 */
	long dwarf_transform_to_disk_form(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * the old interface. Still supported.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_Signed dwarf_transform_to_disk_form(Dwarf_P_Debug, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3779</i>
	 */
	long dwarf_transform_to_disk_form(Pointer Dwarf_P_Debug1, PointerByReference Dwarf_ErrorPtr1);
							/**
	 * Original function.  Checking for error is difficult.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_Ptr dwarf_get_section_bytes(Dwarf_P_Debug, Dwarf_Signed, Dwarf_Signed*, Dwarf_Unsigned*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3795</i><br>
	 * @deprecated use the safer methods {@link #dwarf_get_section_bytes(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, long, java.nio.LongBuffer, java.nio.LongBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_get_section_bytes(com.sun.jna.Pointer, long, com.sun.jna.ptr.LongByReference, com.sun.jna.ptr.LongByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer dwarf_get_section_bytes(Pointer Dwarf_P_Debug1, long Dwarf_Signed1, LongByReference Dwarf_SignedPtr1, LongByReference Dwarf_UnsignedPtr1, Pointer Dwarf_ErrorPtr1);
	/**
	 * Original function.  Checking for error is difficult.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_Ptr dwarf_get_section_bytes(Dwarf_P_Debug, Dwarf_Signed, Dwarf_Signed*, Dwarf_Unsigned*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3795</i>
	 */
	Pointer dwarf_get_section_bytes(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, long Dwarf_Signed1, LongBuffer Dwarf_SignedPtr1, LongBuffer Dwarf_UnsignedPtr1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * Original function.  Checking for error is difficult.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_Ptr dwarf_get_section_bytes(Dwarf_P_Debug, Dwarf_Signed, Dwarf_Signed*, Dwarf_Unsigned*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3795</i>
	 */
	Pointer dwarf_get_section_bytes(Pointer Dwarf_P_Debug1, long Dwarf_Signed1, LongByReference Dwarf_SignedPtr1, LongByReference Dwarf_UnsignedPtr1, PointerByReference Dwarf_ErrorPtr1);
																					/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_producer_finish(Dwarf_P_Debug, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3848</i><br>
	 * @deprecated use the safer methods {@link #dwarf_producer_finish(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_producer_finish(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	long dwarf_producer_finish(Pointer Dwarf_P_Debug1, Pointer Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_producer_finish(Dwarf_P_Debug, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3848</i>
	 */
	long dwarf_producer_finish(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_producer_finish(Dwarf_P_Debug, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3848</i>
	 */
	long dwarf_producer_finish(Pointer Dwarf_P_Debug1, PointerByReference Dwarf_ErrorPtr1);
							/**
	 * Producer attribute addition functions.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_targ_address(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_Unsigned, Dwarf_Signed, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3865</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_AT_targ_address(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, libdwarf.LibdwarfLibrary.Dwarf_P_Die, short, long, long, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_AT_targ_address(com.sun.jna.Pointer, com.sun.jna.Pointer, short, long, long, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_targ_address(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, short Dwarf_Half1, long Dwarf_Unsigned1, long Dwarf_Signed1, Pointer Dwarf_ErrorPtr1);
	/**
	 * Producer attribute addition functions.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_targ_address(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_Unsigned, Dwarf_Signed, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3865</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_targ_address(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die1, short Dwarf_Half1, long Dwarf_Unsigned1, long Dwarf_Signed1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * Producer attribute addition functions.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_targ_address(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_Unsigned, Dwarf_Signed, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3865</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_targ_address(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, short Dwarf_Half1, long Dwarf_Unsigned1, long Dwarf_Signed1, PointerByReference Dwarf_ErrorPtr1);
																			/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_unsigned_const(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3919</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_AT_unsigned_const(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, libdwarf.LibdwarfLibrary.Dwarf_P_Die, short, long, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_AT_unsigned_const(com.sun.jna.Pointer, com.sun.jna.Pointer, short, long, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_unsigned_const(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, short Dwarf_Half1, long Dwarf_Unsigned1, Pointer Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_unsigned_const(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3919</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_unsigned_const(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die1, short Dwarf_Half1, long Dwarf_Unsigned1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_unsigned_const(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3919</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_unsigned_const(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, short Dwarf_Half1, long Dwarf_Unsigned1, PointerByReference Dwarf_ErrorPtr1);
										/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_reference(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_P_Die, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3947</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_AT_reference(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, libdwarf.LibdwarfLibrary.Dwarf_P_Die, short, libdwarf.LibdwarfLibrary.Dwarf_P_Die, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_AT_reference(com.sun.jna.Pointer, com.sun.jna.Pointer, short, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_reference(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, short Dwarf_Half1, Pointer Dwarf_P_Die2, Pointer Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_reference(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_P_Die, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3947</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_reference(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die1, short Dwarf_Half1, LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die2, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_reference(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_P_Die, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 3947</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_reference(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, short Dwarf_Half1, Pointer Dwarf_P_Die2, PointerByReference Dwarf_ErrorPtr1);
																						/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_location_expr(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_P_Expr, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4015</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_AT_location_expr(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, libdwarf.LibdwarfLibrary.Dwarf_P_Die, short, libdwarf.LibdwarfLibrary.Dwarf_P_Expr, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_AT_location_expr(com.sun.jna.Pointer, com.sun.jna.Pointer, short, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_location_expr(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, short Dwarf_Half1, Pointer Dwarf_P_Expr1, Pointer Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_location_expr(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_P_Expr, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4015</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_location_expr(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die1, short Dwarf_Half1, LibdwarfLibrary.Dwarf_P_Expr Dwarf_P_Expr1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_location_expr(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, Dwarf_P_Expr, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4015</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_location_expr(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, short Dwarf_Half1, Pointer Dwarf_P_Expr1, PointerByReference Dwarf_ErrorPtr1);
				/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_string(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4029</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_AT_string(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, libdwarf.LibdwarfLibrary.Dwarf_P_Die, short, java.nio.ByteBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_AT_string(com.sun.jna.Pointer, com.sun.jna.Pointer, short, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_string(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, short Dwarf_Half1, Pointer charPtr1, Pointer Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_string(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4029</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_string(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die1, short Dwarf_Half1, ByteBuffer charPtr1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_string(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Half, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4029</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_string(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, short Dwarf_Half1, Pointer charPtr1, PointerByReference Dwarf_ErrorPtr1);
																																														/**
	 * ownerdie<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_comp_dir(Dwarf_P_Die, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4134</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_AT_comp_dir(libdwarf.LibdwarfLibrary.Dwarf_P_Die, java.nio.ByteBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_AT_comp_dir(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_comp_dir(Pointer Dwarf_P_Die1, Pointer charPtr1, Pointer Dwarf_ErrorPtr1);
	/**
	 * ownerdie<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_comp_dir(Dwarf_P_Die, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4134</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_comp_dir(LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die1, ByteBuffer charPtr1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * ownerdie<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_comp_dir(Dwarf_P_Die, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4134</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_comp_dir(LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die1, String charPtr1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * ownerdie<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_comp_dir(Dwarf_P_Die, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4134</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_comp_dir(Pointer Dwarf_P_Die1, Pointer charPtr1, PointerByReference Dwarf_ErrorPtr1);
				/**
	 * die<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_name(Dwarf_P_Die, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4144</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_AT_name(libdwarf.LibdwarfLibrary.Dwarf_P_Die, java.nio.ByteBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_AT_name(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_name(Pointer Dwarf_P_Die1, Pointer charPtr1, Pointer Dwarf_ErrorPtr1);
	/**
	 * die<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_name(Dwarf_P_Die, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4144</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_name(LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die1, ByteBuffer charPtr1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * die<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_name(Dwarf_P_Die, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4144</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_name(LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die1, String charPtr1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * die<br>
	 * Original signature : <code>Dwarf_P_Attribute dwarf_add_AT_name(Dwarf_P_Die, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4144</i>
	 */
	LibdwarfLibrary.Dwarf_P_Attribute dwarf_add_AT_name(Pointer Dwarf_P_Die1, Pointer charPtr1, PointerByReference Dwarf_ErrorPtr1);
										/**
	 * Producer line creation functions (.debug_line)<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_directory_decl(Dwarf_P_Debug, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4170</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_directory_decl(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, java.nio.ByteBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_directory_decl(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	long dwarf_add_directory_decl(Pointer Dwarf_P_Debug1, Pointer charPtr1, Pointer Dwarf_ErrorPtr1);
	/**
	 * Producer line creation functions (.debug_line)<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_directory_decl(Dwarf_P_Debug, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4170</i>
	 */
	long dwarf_add_directory_decl(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, ByteBuffer charPtr1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * Producer line creation functions (.debug_line)<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_directory_decl(Dwarf_P_Debug, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4170</i>
	 */
	long dwarf_add_directory_decl(Pointer Dwarf_P_Debug1, Pointer charPtr1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * Producer line creation functions (.debug_line)<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_directory_decl(Dwarf_P_Debug, char*, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4170</i>
	 */
	long dwarf_add_directory_decl(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, String charPtr1, PointerByReference Dwarf_ErrorPtr1);
				/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_file_decl(Dwarf_P_Debug, char*, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4180</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_file_decl(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, java.nio.ByteBuffer, long, long, long, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_file_decl(com.sun.jna.Pointer, com.sun.jna.Pointer, long, long, long, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	long dwarf_add_file_decl(Pointer Dwarf_P_Debug1, Pointer charPtr1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, long Dwarf_Unsigned3, Pointer Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_file_decl(Dwarf_P_Debug, char*, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4180</i>
	 */
	long dwarf_add_file_decl(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, ByteBuffer charPtr1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, long Dwarf_Unsigned3, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_file_decl(Dwarf_P_Debug, char*, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4180</i>
	 */
	long dwarf_add_file_decl(Pointer Dwarf_P_Debug1, Pointer charPtr1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, long Dwarf_Unsigned3, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_file_decl(Dwarf_P_Debug, char*, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4180</i>
	 */
	long dwarf_add_file_decl(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, String charPtr1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, long Dwarf_Unsigned3, PointerByReference Dwarf_ErrorPtr1);
										/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_line_entry(Dwarf_P_Debug, Dwarf_Unsigned, Dwarf_Addr, Dwarf_Unsigned, Dwarf_Signed, Dwarf_Bool, Dwarf_Bool, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4223</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_line_entry(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, long, long, long, long, int, int, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_line_entry(com.sun.jna.Pointer, long, long, long, long, int, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	long dwarf_add_line_entry(Pointer Dwarf_P_Debug1, long Dwarf_Unsigned1, long Dwarf_Addr1, long Dwarf_Unsigned2, long Dwarf_Signed1, int Dwarf_Bool1, int Dwarf_Bool2, Pointer Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_line_entry(Dwarf_P_Debug, Dwarf_Unsigned, Dwarf_Addr, Dwarf_Unsigned, Dwarf_Signed, Dwarf_Bool, Dwarf_Bool, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4223</i>
	 */
	long dwarf_add_line_entry(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, long Dwarf_Unsigned1, long Dwarf_Addr1, long Dwarf_Unsigned2, long Dwarf_Signed1, int Dwarf_Bool1, int Dwarf_Bool2, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_line_entry(Dwarf_P_Debug, Dwarf_Unsigned, Dwarf_Addr, Dwarf_Unsigned, Dwarf_Signed, Dwarf_Bool, Dwarf_Bool, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4223</i>
	 */
	long dwarf_add_line_entry(Pointer Dwarf_P_Debug1, long Dwarf_Unsigned1, long Dwarf_Addr1, long Dwarf_Unsigned2, long Dwarf_Signed1, int Dwarf_Bool1, int Dwarf_Bool2, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_lne_set_address(Dwarf_P_Debug, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4232</i><br>
	 * @deprecated use the safer methods {@link #dwarf_lne_set_address(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, long, long, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_lne_set_address(com.sun.jna.Pointer, long, long, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	long dwarf_lne_set_address(Pointer Dwarf_P_Debug1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, Pointer Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_lne_set_address(Dwarf_P_Debug, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4232</i>
	 */
	long dwarf_lne_set_address(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * dbg<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_lne_set_address(Dwarf_P_Debug, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4232</i>
	 */
	long dwarf_lne_set_address(Pointer Dwarf_P_Debug1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, PointerByReference Dwarf_ErrorPtr1);
																																																										/**
	 * Original signature : <code>Dwarf_P_Die dwarf_new_die(Dwarf_P_Debug, Dwarf_Tag, Dwarf_P_Die, Dwarf_P_Die, Dwarf_P_Die, Dwarf_P_Die, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4409</i><br>
	 * @deprecated use the safer methods {@link #dwarf_new_die(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, long, libdwarf.LibdwarfLibrary.Dwarf_P_Die, libdwarf.LibdwarfLibrary.Dwarf_P_Die, libdwarf.LibdwarfLibrary.Dwarf_P_Die, libdwarf.LibdwarfLibrary.Dwarf_P_Die, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_new_die(com.sun.jna.Pointer, long, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	LibdwarfLibrary.Dwarf_P_Die dwarf_new_die(Pointer Dwarf_P_Debug1, long Dwarf_Tag1, Pointer Dwarf_P_Die1, Pointer Dwarf_P_Die2, Pointer Dwarf_P_Die3, Pointer Dwarf_P_Die4, Pointer Dwarf_ErrorPtr1);
	/**
	 * Original signature : <code>Dwarf_P_Die dwarf_new_die(Dwarf_P_Debug, Dwarf_Tag, Dwarf_P_Die, Dwarf_P_Die, Dwarf_P_Die, Dwarf_P_Die, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4409</i>
	 */
	LibdwarfLibrary.Dwarf_P_Die dwarf_new_die(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, long Dwarf_Tag1, LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die1, LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die2, LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die3, LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die4, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * Original signature : <code>Dwarf_P_Die dwarf_new_die(Dwarf_P_Debug, Dwarf_Tag, Dwarf_P_Die, Dwarf_P_Die, Dwarf_P_Die, Dwarf_P_Die, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4409</i>
	 */
	LibdwarfLibrary.Dwarf_P_Die dwarf_new_die(Pointer Dwarf_P_Debug1, long Dwarf_Tag1, Pointer Dwarf_P_Die1, Pointer Dwarf_P_Die2, Pointer Dwarf_P_Die3, Pointer Dwarf_P_Die4, PointerByReference Dwarf_ErrorPtr1);
				/**
	 * Original form.<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_die_to_debug(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4425</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_die_to_debug(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, libdwarf.LibdwarfLibrary.Dwarf_P_Die, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_die_to_debug(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	long dwarf_add_die_to_debug(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, Pointer Dwarf_ErrorPtr1);
	/**
	 * Original form.<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_die_to_debug(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4425</i>
	 */
	long dwarf_add_die_to_debug(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, LibdwarfLibrary.Dwarf_P_Die Dwarf_P_Die1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * Original form.<br>
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_die_to_debug(Dwarf_P_Debug, Dwarf_P_Die, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4425</i>
	 */
	long dwarf_add_die_to_debug(Pointer Dwarf_P_Debug1, Pointer Dwarf_P_Die1, PointerByReference Dwarf_ErrorPtr1);
																																			/**
	 * Operations to create location expressions.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Expr dwarf_new_expr(Dwarf_P_Debug, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4554</i><br>
	 * @deprecated use the safer methods {@link #dwarf_new_expr(libdwarf.LibdwarfLibrary.Dwarf_P_Debug, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_new_expr(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	LibdwarfLibrary.Dwarf_P_Expr dwarf_new_expr(Pointer Dwarf_P_Debug1, Pointer Dwarf_ErrorPtr1);
	/**
	 * Operations to create location expressions.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Expr dwarf_new_expr(Dwarf_P_Debug, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4554</i>
	 */
	LibdwarfLibrary.Dwarf_P_Expr dwarf_new_expr(LibdwarfLibrary.Dwarf_P_Debug Dwarf_P_Debug1, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * Operations to create location expressions.<br>
	 * dbg<br>
	 * Original signature : <code>Dwarf_P_Expr dwarf_new_expr(Dwarf_P_Debug, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4554</i>
	 */
	LibdwarfLibrary.Dwarf_P_Expr dwarf_new_expr(Pointer Dwarf_P_Debug1, PointerByReference Dwarf_ErrorPtr1);
							/**
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_expr_gen(Dwarf_P_Expr, Dwarf_Small, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4566</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_expr_gen(libdwarf.LibdwarfLibrary.Dwarf_P_Expr, byte, long, long, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_expr_gen(com.sun.jna.Pointer, byte, long, long, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	long dwarf_add_expr_gen(Pointer Dwarf_P_Expr1, byte Dwarf_Small1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, Pointer Dwarf_ErrorPtr1);
	/**
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_expr_gen(Dwarf_P_Expr, Dwarf_Small, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4566</i>
	 */
	long dwarf_add_expr_gen(LibdwarfLibrary.Dwarf_P_Expr Dwarf_P_Expr1, byte Dwarf_Small1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_expr_gen(Dwarf_P_Expr, Dwarf_Small, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4566</i>
	 */
	long dwarf_add_expr_gen(Pointer Dwarf_P_Expr1, byte Dwarf_Small1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, PointerByReference Dwarf_ErrorPtr1);
							/**
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_expr_addr_b(Dwarf_P_Expr, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4588</i><br>
	 * @deprecated use the safer methods {@link #dwarf_add_expr_addr_b(libdwarf.LibdwarfLibrary.Dwarf_P_Expr, long, long, com.sun.jna.ptr.PointerByReference)} and {@link #dwarf_add_expr_addr_b(com.sun.jna.Pointer, long, long, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	long dwarf_add_expr_addr_b(Pointer Dwarf_P_Expr1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, Pointer Dwarf_ErrorPtr1);
	/**
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_expr_addr_b(Dwarf_P_Expr, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4588</i>
	 */
	long dwarf_add_expr_addr_b(LibdwarfLibrary.Dwarf_P_Expr Dwarf_P_Expr1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, PointerByReference Dwarf_ErrorPtr1);
	/**
	 * Original signature : <code>Dwarf_Unsigned dwarf_add_expr_addr_b(Dwarf_P_Expr, Dwarf_Unsigned, Dwarf_Unsigned, Dwarf_Error*)</code><br>
	 * <i>native declaration : line 4588</i>
	 */
	long dwarf_add_expr_addr_b(Pointer Dwarf_P_Expr1, long Dwarf_Unsigned1, long Dwarf_Unsigned2, PointerByReference Dwarf_ErrorPtr1);
																																																																																																																																																																																																																																																																																																																				//public static final GlobalStruct<libdwarf.Dwarf_Cmdline_Options.ByValue > dwarf_cmdline_options = new GlobalStruct<libdwarf.Dwarf_Cmdline_Options.ByValue >(LibdwarfLibrary.JNA_NATIVE_LIB, libdwarf.Dwarf_Cmdline_Options.ByValue.class, "dwarf_cmdline_options");
	public static class dwarf_elf_handle extends PointerType {
		public dwarf_elf_handle(Pointer address) {
			super(address);
		}
		public dwarf_elf_handle() {
			super();
		}
	};
	public static class Dwarf_Dsc_Head extends PointerType {
		public Dwarf_Dsc_Head(Pointer address) {
			super(address);
		}
		public Dwarf_Dsc_Head() {
			super();
		}
	};
	public static class Dwarf_Attribute extends PointerType {
		public Dwarf_Attribute(Pointer address) {
			super(address);
		}
		public Dwarf_Attribute() {
			super();
		}
	};
	public static class Dwarf_Die extends PointerType {
		public Dwarf_Die(Pointer address) {
			super(address);
		}
		public Dwarf_Die() {
			super();
		}
	};
	public static class Dwarf_Cie extends PointerType {
		public Dwarf_Cie(Pointer address) {
			super(address);
		}
		public Dwarf_Cie() {
			super();
		}
	};
	public static class Dwarf_Line_Context extends PointerType {
		public Dwarf_Line_Context(Pointer address) {
			super(address);
		}
		public Dwarf_Line_Context() {
			super();
		}
	};
	public static class Dwarf_P_Debug extends PointerType {
		public Dwarf_P_Debug(Pointer address) {
			super(address);
		}
		public Dwarf_P_Debug() {
			super();
		}
	};
	public static class Dwarf_Gnu_Index_Head extends PointerType {
		public Dwarf_Gnu_Index_Head(Pointer address) {
			super(address);
		}
		public Dwarf_Gnu_Index_Head() {
			super();
		}
	};
	public static class Dwarf_P_Expr extends PointerType {
		public Dwarf_P_Expr(Pointer address) {
			super(address);
		}
		public Dwarf_P_Expr() {
			super();
		}
	};
	public static class Dwarf_Func extends PointerType {
		public Dwarf_Func(Pointer address) {
			super(address);
		}
		public Dwarf_Func() {
			super();
		}
	};
	public static class Dwarf_Macro_Context extends PointerType {
		public Dwarf_Macro_Context(Pointer address) {
			super(address);
		}
		public Dwarf_Macro_Context() {
			super();
		}
	};
	public static class Dwarf_P_Fde extends PointerType {
		public Dwarf_P_Fde(Pointer address) {
			super(address);
		}
		public Dwarf_P_Fde() {
			super();
		}
	};
	public static class Dwarf_Error extends PointerType {
		public Dwarf_Error(Pointer address) {
			super(address);
		}
		public Dwarf_Error() {
			super();
		}
	};
	public static class Dwarf_Loc_Head_c extends PointerType {
		public Dwarf_Loc_Head_c(Pointer address) {
			super(address);
		}
		public Dwarf_Loc_Head_c() {
			super();
		}
	};
	public static class Dwarf_Dnames_Head extends PointerType {
		public Dwarf_Dnames_Head(Pointer address) {
			super(address);
		}
		public Dwarf_Dnames_Head() {
			super();
		}
	};
	public static class Dwarf_Global extends PointerType {
		public Dwarf_Global(Pointer address) {
			super(address);
		}
		public Dwarf_Global() {
			super();
		}
	};
	public static class Dwarf_Var extends PointerType {
		public Dwarf_Var(Pointer address) {
			super(address);
		}
		public Dwarf_Var() {
			super();
		}
	};
	public static class Dwarf_Line extends PointerType {
		public Dwarf_Line(Pointer address) {
			super(address);
		}
		public Dwarf_Line() {
			super();
		}
	};
	public static class Dwarf_Str_Offsets_Table extends PointerType {
		public Dwarf_Str_Offsets_Table(Pointer address) {
			super(address);
		}
		public Dwarf_Str_Offsets_Table() {
			super();
		}
	};
	public static class Dwarf_Rnglists_Head extends PointerType {
		public Dwarf_Rnglists_Head(Pointer address) {
			super(address);
		}
		public Dwarf_Rnglists_Head() {
			super();
		}
	};
	public static class Dwarf_Weak extends PointerType {
		public Dwarf_Weak(Pointer address) {
			super(address);
		}
		public Dwarf_Weak() {
			super();
		}
	};
	public static class Dwarf_Debug extends PointerType {
		public Dwarf_Debug(Pointer address) {
			super(address);
		}
		public Dwarf_Debug() {
			super();
		}
	};
	public static class Dwarf_Arange extends PointerType {
		public Dwarf_Arange(Pointer address) {
			super(address);
		}
		public Dwarf_Arange() {
			super();
		}
	};
	public static class Dwarf_Type extends PointerType {
		public Dwarf_Type(Pointer address) {
			super(address);
		}
		public Dwarf_Type() {
			super();
		}
	};
	public static class Dwarf_Abbrev extends PointerType {
		public Dwarf_Abbrev(Pointer address) {
			super(address);
		}
		public Dwarf_Abbrev() {
			super();
		}
	};
	public static class Dwarf_Fde extends PointerType {
		public Dwarf_Fde(Pointer address) {
			super(address);
		}
		public Dwarf_Fde() {
			super();
		}
	};
	public static class Dwarf_Locdesc_c extends PointerType {
		public Dwarf_Locdesc_c(Pointer address) {
			super(address);
		}
		public Dwarf_Locdesc_c() {
			super();
		}
	};
	public static class Dwarf_Xu_Index_Header extends PointerType {
		public Dwarf_Xu_Index_Header(Pointer address) {
			super(address);
		}
		public Dwarf_Xu_Index_Header() {
			super();
		}
	};
	public static class Dwarf_Gdbindex extends PointerType {
		public Dwarf_Gdbindex(Pointer address) {
			super(address);
		}
		public Dwarf_Gdbindex() {
			super();
		}
	};
	public static class Dwarf_P_Die extends PointerType {
		public Dwarf_P_Die(Pointer address) {
			super(address);
		}
		public Dwarf_P_Die() {
			super();
		}
	};
	public static class Dwarf_P_Attribute extends PointerType {
		public Dwarf_P_Attribute(Pointer address) {
			super(address);
		}
		public Dwarf_P_Attribute() {
			super();
		}
	};
}
