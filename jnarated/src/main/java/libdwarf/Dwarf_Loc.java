package libdwarf;
import com.ochafik.lang.jnaerator.runtime.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class Dwarf_Loc extends Structure<Dwarf_Loc, Dwarf_Loc.ByValue, Dwarf_Loc.ByReference > {
	/**
	 * location operation<br>
	 * C type : Dwarf_Small
	 */
	public byte lr_atom;
	/**
	 * operand<br>
	 * C type : Dwarf_Unsigned
	 */
	public long lr_number;
	/**
	 * for OP_BREGx  and DW_OP_GNU_const_type<br>
	 * C type : Dwarf_Unsigned
	 */
	public long lr_number2;
	/**
	 * offset in locexpr for OP_BRA etc<br>
	 * C type : Dwarf_Unsigned
	 */
	public long lr_offset;
	public Dwarf_Loc() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("lr_atom", "lr_number", "lr_number2", "lr_offset");
	}
	/**
	 * @param lr_atom location operation<br>
	 * C type : Dwarf_Small<br>
	 * @param lr_number operand<br>
	 * C type : Dwarf_Unsigned<br>
	 * @param lr_number2 for OP_BREGx  and DW_OP_GNU_const_type<br>
	 * C type : Dwarf_Unsigned<br>
	 * @param lr_offset offset in locexpr for OP_BRA etc<br>
	 * C type : Dwarf_Unsigned
	 */
	public Dwarf_Loc(byte lr_atom, long lr_number, long lr_number2, long lr_offset) {
		super();
		this.lr_atom = lr_atom;
		this.lr_number = lr_number;
		this.lr_number2 = lr_number2;
		this.lr_offset = lr_offset;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected Dwarf_Loc newInstance() { return new Dwarf_Loc(); }
	public static Dwarf_Loc[] newArray(int arrayLength) {
		return Structure.newArray(Dwarf_Loc.class, arrayLength);
	}
	public static class ByReference extends Dwarf_Loc implements Structure.ByReference {
		
	};
	public static class ByValue extends Dwarf_Loc implements Structure.ByValue {
		
	};
}
