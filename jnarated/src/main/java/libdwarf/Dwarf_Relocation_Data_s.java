package libdwarf;
import com.ochafik.lang.jnaerator.runtime.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : line 526</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class Dwarf_Relocation_Data_s extends Structure<Dwarf_Relocation_Data_s, Dwarf_Relocation_Data_s.ByValue, Dwarf_Relocation_Data_s.ByReference > {
	/**
	 * Cast to/from Dwarf_Rel_Type<br>
	 * to keep size small in struct.
	 */
	public byte drd_type;
	/**
	 * Length in bytes of data being<br>
	 * relocated. 4 for 32bit data,<br>
	 * 8 for 64bit data.
	 */
	public byte drd_length;
	/**
	 * Where the data to reloc is.<br>
	 * C type : Dwarf_Unsigned
	 */
	public long drd_offset;
	/** C type : Dwarf_Unsigned */
	public long drd_symbol_index;
	public Dwarf_Relocation_Data_s() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("drd_type", "drd_length", "drd_offset", "drd_symbol_index");
	}
	/**
	 * @param drd_type Cast to/from Dwarf_Rel_Type<br>
	 * to keep size small in struct.<br>
	 * @param drd_length Length in bytes of data being<br>
	 * relocated. 4 for 32bit data,<br>
	 * 8 for 64bit data.<br>
	 * @param drd_offset Where the data to reloc is.<br>
	 * C type : Dwarf_Unsigned<br>
	 * @param drd_symbol_index C type : Dwarf_Unsigned
	 */
	public Dwarf_Relocation_Data_s(byte drd_type, byte drd_length, long drd_offset, long drd_symbol_index) {
		super();
		this.drd_type = drd_type;
		this.drd_length = drd_length;
		this.drd_offset = drd_offset;
		this.drd_symbol_index = drd_symbol_index;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected Dwarf_Relocation_Data_s newInstance() { return new Dwarf_Relocation_Data_s(); }
	public static Dwarf_Relocation_Data_s[] newArray(int arrayLength) {
		return Structure.newArray(Dwarf_Relocation_Data_s.class, arrayLength);
	}
	public static class ByReference extends Dwarf_Relocation_Data_s implements Structure.ByReference {
		
	};
	public static class ByValue extends Dwarf_Relocation_Data_s implements Structure.ByValue {
		
	};
}
